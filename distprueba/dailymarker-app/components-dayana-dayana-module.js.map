{"version":3,"sources":["../../../../../../src/cdk/accordion/accordion.ts","../../../../../../src/cdk/accordion/accordion-item.ts","../../../../../../src/cdk/accordion/accordion-module.ts","../../../../../../src/cdk/accordion/public-api.ts","../../../../../../src/cdk/accordion/index.ts","../../../../../../src/material/card/card.ts","../../../../../../src/material/card/card-module.ts","../../../../../../src/material/card/public-api.ts","../../../../../../src/material/card/index.ts","../../../../../../src/material/chips/chip.ts","../../../../../../src/material/chips/chip-default-options.ts","../../../../../../src/material/chips/chip-list.ts","../../../../../../src/material/chips/chip-input.ts","../../../../../../src/material/chips/chips-module.ts","../../../../../../src/material/chips/public-api.ts","../../../../../../src/material/chips/index.ts","../../../../../../src/material/datepicker/datepicker-errors.ts","../../../../../../src/material/datepicker/datepicker-intl.ts","../../../../../../src/material/datepicker/calendar-body.ts","../../../../../../src/material/datepicker/date-selection-model.ts","../../../../../../src/material/datepicker/date-range-selection-strategy.ts","../../../../../../src/material/datepicker/month-view.ts","../../../../../../src/material/datepicker/multi-year-view.ts","../../../../../../src/material/datepicker/year-view.ts","../../../../../../src/material/datepicker/calendar.ts","../../../../../../src/material/datepicker/datepicker-animations.ts","../../../../../../src/material/datepicker/datepicker-base.ts","../../../../../../src/material/datepicker/datepicker.ts","../../../../../../src/material/datepicker/datepicker-input-base.ts","../../../../../../src/material/datepicker/datepicker-input.ts","../../../../../../src/material/datepicker/datepicker-toggle.ts","../../../../../../src/material/datepicker/date-range-input-parts.ts","../../../../../../src/material/datepicker/date-range-picker.ts","../../../../../../src/material/datepicker/date-range-input.ts","../../../../../../src/material/datepicker/datepicker-module.ts","../../../../../../src/material/datepicker/public-api.ts","../../../../../../src/material/datepicker/index.ts","../../../../../../src/material/dialog/dialog-config.ts","../../../../../../src/material/dialog/dialog-animations.ts","../../../../../../src/material/dialog/dialog-container.ts","../../../../../../src/material/dialog/dialog-ref.ts","../../../../../../src/material/dialog/dialog.ts","../../../../../../src/material/dialog/dialog-content-directives.ts","../../../../../../src/material/dialog/dialog-module.ts","../../../../../../src/material/dialog/public-api.ts","../../../../../../src/material/dialog/index.ts","../../../../../../src/material/expansion/accordion-base.ts","../../../../../../src/material/expansion/expansion-animations.ts","../../../../../../src/material/expansion/expansion-panel-content.ts","../../../../../../src/material/expansion/expansion-panel.ts","../../../../../../src/material/expansion/expansion-panel-header.ts","../../../../../../src/material/expansion/accordion.ts","../../../../../../src/material/expansion/expansion-module.ts","../../../../../../src/material/expansion/public-api.ts","../../../../../../src/material/expansion/index.ts","../../../../../../src/material/slide-toggle/slide-toggle-config.ts","../../../../../../src/material/slide-toggle/slide-toggle.ts","../../../../../../src/material/slide-toggle/slide-toggle-required-validator.ts","../../../../../../src/material/slide-toggle/slide-toggle-module.ts","../../../../../../src/material/slide-toggle/public-api.ts","../../../../../../src/material/slide-toggle/index.ts","../../../../../../src/material/snack-bar/snack-bar-config.ts","../../../../../../src/material/snack-bar/snack-bar-ref.ts","../../../../../../src/material/snack-bar/simple-snack-bar.ts","../../../../../../src/material/snack-bar/snack-bar-animations.ts","../../../../../../src/material/snack-bar/snack-bar-container.ts","../../../../../../src/material/snack-bar/snack-bar-module.ts","../../../../../../src/material/snack-bar/snack-bar.ts","../../../../../../src/material/snack-bar/public-api.ts","../../../../../../src/material/snack-bar/index.ts","ng:/ngx-highlightjs/lib/highlight.model.ts","ng:/ngx-highlightjs/lib/highlight.loader.ts","ng:/ngx-highlightjs/lib/highlight.service.ts","ng:/ngx-highlightjs/lib/highlight.ts","ng:/ngx-highlightjs/lib/highlight.module.ts","./src/app/content/pages/components/dayana/dayana1/dayana1.component.html","./src/app/content/pages/components/dayana/dayana2/dayana2/dayana2.component.html","./src/app/content/pages/components/dayana/dayana3/dayana3/dayana3.component.html","./src/app/content/partials/content/general/accordion-control/accordion-control.component.html","./src/app/content/partials/content/general/material-preview/material-preview.component.html","./src/app/content/pages/components/dayana/dayana.module.ts","./src/app/content/pages/components/dayana/dayana1/dayana1.component.ts","./src/app/content/pages/components/dayana/dayana2/dayana2/dayana2.component.scss","./src/app/content/pages/components/dayana/dayana2/dayana2/dayana2.component.ts","./src/app/content/pages/components/dayana/dayana3/dayana3/dayana3.component.scss","./src/app/content/pages/components/dayana/dayana3/dayana3/dayana3.component.ts","./src/app/content/partials/content/general/accordion-control/accordion-control.component.ts","./src/app/content/partials/content/general/accordion-control/accordion-control.config.ts","./src/app/content/partials/content/general/accordion-control/accordion-control.module.ts","./src/app/content/partials/content/general/material-preview/material-preivew.module.ts","./src/app/content/partials/content/general/material-preview/material-preview.component.ts"],"names":["nextId","nextUniqueId","observableOf"],"mappings":"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","file":"components-dayana-dayana-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId = 0;\n\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\n@Directive({\n  selector: 'cdk-accordion, [cdkAccordion]',\n  exportAs: 'cdkAccordion',\n})\nexport class CdkAccordion implements OnDestroy, OnChanges {\n  /** Emits when the state of the accordion changes */\n  readonly _stateChanges = new Subject<SimpleChanges>();\n\n  /** Stream that emits true/false when openAll/closeAll is triggered. */\n  readonly _openCloseAllActions: Subject<boolean> = new Subject<boolean>();\n\n  /** A readonly id value to use for unique selection coordination. */\n  readonly id = `cdk-accordion-${nextId++}`;\n\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n  @Input()\n  get multi(): boolean { return this._multi; }\n  set multi(multi: boolean) { this._multi = coerceBooleanProperty(multi); }\n  private _multi: boolean = false;\n\n  /** Opens all enabled accordion items in an accordion where multi is enabled. */\n  openAll(): void {\n    this._openCloseAll(true);\n  }\n\n  /** Closes all enabled accordion items in an accordion where multi is enabled. */\n  closeAll(): void {\n    this._openCloseAll(false);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._stateChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  private _openCloseAll(expanded: boolean): void {\n    if (this.multi) {\n      this._openCloseAllActions.next(expanded);\n    }\n  }\n\n  static ngAcceptInputType_multi: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Output,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  ChangeDetectorRef,\n  SkipSelf,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {CdkAccordion} from './accordion';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Subscription} from 'rxjs';\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\n@Directive({\n  selector: 'cdk-accordion-item, [cdkAccordionItem]',\n  exportAs: 'cdkAccordionItem',\n  providers: [\n    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n    // to the same accordion.\n    {provide: CdkAccordion, useValue: undefined},\n  ],\n})\nexport class CdkAccordionItem implements OnDestroy {\n  /** Subscription to openAll/closeAll events. */\n  private _openCloseAllSubscription = Subscription.EMPTY;\n  /** Event emitted every time the AccordionItem is closed. */\n  @Output() closed: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted every time the AccordionItem is opened. */\n  @Output() opened: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted when the AccordionItem is destroyed. */\n  @Output() destroyed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   * @docs-private\n   */\n  @Output() expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** The unique AccordionItem id. */\n  readonly id: string = `cdk-accordion-child-${nextId++}`;\n\n  /** Whether the AccordionItem is expanded. */\n  @Input()\n  get expanded(): any { return this._expanded; }\n  set expanded(expanded: any) {\n    expanded = coerceBooleanProperty(expanded);\n\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _expanded = false;\n\n  /** Whether the AccordionItem is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(disabled: any) { this._disabled = coerceBooleanProperty(disabled); }\n  private _disabled: boolean = false;\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => {};\n\n  constructor(@Optional() @SkipSelf() public accordion: CdkAccordion,\n              private _changeDetectorRef: ChangeDetectorRef,\n              protected _expansionDispatcher: UniqueSelectionDispatcher) {\n    this._removeUniqueSelectionListener =\n      _expansionDispatcher.listen((id: string, accordionId: string) => {\n        if (this.accordion && !this.accordion.multi &&\n            this.accordion.id === accordionId && this.id !== id) {\n          this.expanded = false;\n        }\n      });\n\n    // When an accordion item is hosted in an accordion, subscribe to open/close events.\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n    this._removeUniqueSelectionListener();\n    this._openCloseAllSubscription.unsubscribe();\n  }\n\n  /** Toggles the expanded state of the accordion item. */\n  toggle(): void {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to false. */\n  close(): void {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to true. */\n  open(): void {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n\n  private _subscribeToOpenCloseAllActions(): Subscription {\n    return this.accordion._openCloseAllActions.subscribe(expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n\n  static ngAcceptInputType_expanded: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkAccordion} from './accordion';\nimport {CdkAccordionItem} from './accordion-item';\n\n\n@NgModule({\n  exports: [CdkAccordion, CdkAccordionItem],\n  declarations: [CdkAccordion, CdkAccordionItem],\n})\nexport class CdkAccordionModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CdkAccordionItem} from './accordion-item';\nexport {CdkAccordion} from './accordion';\nexport * from './accordion-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Directive,\n  Input,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n  host: {'class': 'mat-card-content'}\n})\nexport class MatCardContent {}\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {\n    'class': 'mat-card-title'\n  }\n})\nexport class MatCardTitle {}\n\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {\n    'class': 'mat-card-subtitle'\n  }\n})\nexport class MatCardSubtitle {}\n\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-card-actions',\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n  }\n})\nexport class MatCardActions {\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-card-footer'}\n})\nexport class MatCardFooter {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-card-image'}\n})\nexport class MatCardImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-card-sm-image'}\n})\nexport class MatCardSmImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-card-md-image'}\n})\nexport class MatCardMdImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-card-lg-image'}\n})\nexport class MatCardLgImage {}\n\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-card-xl-image'}\n})\nexport class MatCardXlImage {}\n\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-card-avatar'}\n})\nexport class MatCardAvatar {}\n\n\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n@Component({\n  selector: 'mat-card',\n  exportAs: 'matCard',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-card mat-focus-indicator',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  }\n})\nexport class MatCard {\n  // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {}\n}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-header'}\n})\nexport class MatCardHeader {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-title-group'}\n})\nexport class MatCardTitleGroup {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n} from './card';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [\n    MatCard,\n    MatCardHeader,\n    MatCardTitleGroup,\n    MatCardContent,\n    MatCardTitle,\n    MatCardSubtitle,\n    MatCardActions,\n    MatCardFooter,\n    MatCardSmImage,\n    MatCardMdImage,\n    MatCardLgImage,\n    MatCardImage,\n    MatCardXlImage,\n    MatCardAvatar,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n    MatCardXlImage, MatCardAvatar,\n  ],\n})\nexport class MatCardModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './card';\nexport * from './card-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {BACKSPACE, DELETE, SPACE} from '@angular/cdk/keycodes';\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ChangeDetectorRef,\n  Attribute,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinTabIndex,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisableRipple,\n  RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Represents an event fired on an individual `mat-chip`. */\nexport interface MatChipEvent {\n  /** The chip the event was fired on. */\n  chip: MatChip;\n}\n\n/** Event object emitted by MatChip when selected or deselected. */\nexport class MatChipSelectionChange {\n  constructor(\n    /** Reference to the chip that emitted the event. */\n    public source: MatChip,\n    /** Whether the chip that emitted the event is selected. */\n    public selected: boolean,\n    /** Whether the selection change was a result of a user interaction. */\n    public isUserInput = false) { }\n}\n\n\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n  disabled: boolean;\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst _MatChipMixinBase: CanColorCtor & CanDisableRippleCtor &\n    HasTabIndexCtor & typeof MatChipBase =\n      mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-avatar, [matChipAvatar]',\n  host: {'class': 'mat-chip-avatar'}\n})\nexport class MatChipAvatar {}\n\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n  host: {'class': 'mat-chip-trailing-icon'}\n})\nexport class MatChipTrailingIcon {}\n\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\n@Directive({\n  selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n  inputs: ['color', 'disableRipple', 'tabIndex'],\n  exportAs: 'matChip',\n  host: {\n    'class': 'mat-chip mat-focus-indicator',\n    '[attr.tabindex]': 'disabled ? null : tabIndex',\n    'role': 'option',\n    '[class.mat-chip-selected]': 'selected',\n    '[class.mat-chip-with-avatar]': 'avatar',\n    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n    '[class.mat-chip-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationsDisabled',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-selected]': 'ariaSelected',\n    '(click)': '_handleClick($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n  },\n})\nexport class MatChip extends _MatChipMixinBase implements FocusableOption, OnDestroy, CanColor,\n  CanDisableRipple, RippleTarget, HasTabIndex {\n\n  /** Reference to the RippleRenderer for the chip. */\n  private _chipRipple: RippleRenderer;\n\n  /**\n   * Reference to the element that acts as the chip's ripple target. This element is\n   * dynamically added as a child node of the chip. The chip itself cannot be used as the\n   * ripple target because it must be the host of the focus indicator.\n   */\n  private _chipRippleTarget: HTMLElement;\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the chip ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n  }\n\n  /** Whether the chip has focus. */\n  _hasFocus: boolean = false;\n\n  /** Whether animations for the chip are enabled. */\n  _animationsDisabled: boolean;\n\n  /** Whether the chip list is selectable */\n  chipListSelectable: boolean = true;\n\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple: boolean = false;\n\n  /** Whether the chip list as a whole is disabled. */\n  _chipListDisabled: boolean = false;\n\n  /** The chip avatar */\n  @ContentChild(MatChipAvatar) avatar: MatChipAvatar;\n\n  /** The chip's trailing icon. */\n  @ContentChild(MatChipTrailingIcon) trailingIcon: MatChipTrailingIcon;\n\n  /** The chip's remove toggler. */\n  @ContentChild(forwardRef(() => MatChipRemove)) removeIcon: MatChipRemove;\n\n  /** Whether the chip is selected. */\n  @Input()\n  get selected(): boolean { return this._selected; }\n  set selected(value: boolean) {\n    const coercedValue = coerceBooleanProperty(value);\n\n    if (coercedValue !== this._selected) {\n      this._selected = coercedValue;\n      this._dispatchSelectionChange();\n    }\n  }\n  protected _selected: boolean = false;\n\n  /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n  @Input()\n  get value(): any {\n    return this._value !== undefined\n      ? this._value\n      : this._elementRef.nativeElement.textContent;\n  }\n  set value(value: any) { this._value = value; }\n  protected _value: any;\n\n  /**\n   * Whether or not the chip is selectable. When a chip is not selectable,\n   * changes to its selected state are always ignored. By default a chip is\n   * selectable, and it becomes non-selectable if its parent chip list is\n   * not selectable.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable && this.chipListSelectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n  }\n  protected _selectable: boolean = true;\n\n  /** Whether the chip is disabled. */\n  @Input()\n  get disabled(): boolean { return this._chipListDisabled || this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  protected _disabled: boolean = false;\n\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  @Input()\n  get removable(): boolean { return this._removable; }\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  protected _removable: boolean = true;\n\n  /** Emits when the chip is focused. */\n  readonly _onFocus = new Subject<MatChipEvent>();\n\n  /** Emits when the chip is blured. */\n  readonly _onBlur = new Subject<MatChipEvent>();\n\n  /** Emitted when the chip is selected or deselected. */\n  @Output() readonly selectionChange: EventEmitter<MatChipSelectionChange> =\n      new EventEmitter<MatChipSelectionChange>();\n\n  /** Emitted when the chip is destroyed. */\n  @Output() readonly destroyed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** Emitted when a chip is to be removed. */\n  @Output() readonly removed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** The ARIA selected applied to the chip. */\n  get ariaSelected(): string | null {\n    // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n    // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n    return this.selectable && (this._chipListMultiple || this.selected) ?\n        this.selected.toString() : null;\n  }\n\n  constructor(public _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS)\n              globalRippleOptions: RippleGlobalOptions | null,\n              // @breaking-change 8.0.0 `animationMode` parameter to become required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string,\n              // @breaking-change 9.0.0 `_changeDetectorRef` parameter to become required.\n              private _changeDetectorRef?: ChangeDetectorRef,\n              @Attribute('tabindex') tabIndex?: string,\n              // @breaking-change 11.0.0 `_document` parameter to become required.\n              @Optional() @Inject(DOCUMENT) _document?: any) {\n    super(_elementRef);\n\n    this._addHostClassName();\n\n    // Dynamically create the ripple target, append it within the chip, and use it as the\n    // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n    // the proper styles.\n    this._chipRippleTarget = (_document || document).createElement('div');\n    this._chipRippleTarget.classList.add('mat-chip-ripple');\n    this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n    this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n    this._chipRipple.setupTriggerEvents(_elementRef);\n\n    this.rippleConfig = globalRippleOptions || {};\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n  }\n\n  _addHostClassName() {\n    const basicChipAttrName = 'mat-basic-chip';\n    const element = this._elementRef.nativeElement as HTMLElement;\n\n    if (element.hasAttribute(basicChipAttrName) ||\n        element.tagName.toLowerCase() === basicChipAttrName) {\n      element.classList.add(basicChipAttrName);\n      return;\n    } else {\n      element.classList.add('mat-standard-chip');\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed.emit({chip: this});\n    this._chipRipple._removeTriggerEvents();\n  }\n\n  /** Selects the chip. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange();\n      this._markForCheck();\n    }\n  }\n\n  /** Deselects the chip. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._dispatchSelectionChange();\n      this._markForCheck();\n    }\n  }\n\n  /** Select this chip and emit selected event */\n  selectViaInteraction(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange(true);\n      this._markForCheck();\n    }\n  }\n\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput: boolean = false): boolean {\n    this._selected = !this.selected;\n    this._dispatchSelectionChange(isUserInput);\n    this._markForCheck();\n    return this.selected;\n  }\n\n  /** Allows for programmatic focusing of the chip. */\n  focus(): void {\n    if (!this._hasFocus) {\n      this._elementRef.nativeElement.focus();\n      this._onFocus.next({chip: this});\n    }\n    this._hasFocus = true;\n  }\n\n  /**\n   * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n   * BACKSPACE keys are pressed.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove(): void {\n    if (this.removable) {\n      this.removed.emit({chip: this});\n    }\n  }\n\n  /** Handles click events on the chip. */\n  _handleClick(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n    } else {\n      event.stopPropagation();\n    }\n  }\n\n  /** Handle custom key presses. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        // If we are removable, remove the focused chip\n        this.remove();\n        // Always prevent so page navigation does not occur\n        event.preventDefault();\n        break;\n      case SPACE:\n        // If we are selectable, toggle the focused chip\n        if (this.selectable) {\n          this.toggleSelected(true);\n        }\n\n        // Always prevent space from scrolling the page since the list has focus\n        event.preventDefault();\n        break;\n    }\n  }\n\n  _blur(): void {\n    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n    // that moves focus not the next item. To work around the issue, we defer marking the chip\n    // as not focused until the next time the zone stabilizes.\n    this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1))\n      .subscribe(() => {\n        this._ngZone.run(() => {\n          this._hasFocus = false;\n          this._onBlur.next({chip: this});\n        });\n      });\n  }\n\n  private _dispatchSelectionChange(isUserInput = false) {\n    this.selectionChange.emit({\n      source: this,\n      isUserInput,\n      selected: this._selected\n    });\n  }\n\n  private _markForCheck() {\n    // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n    if (this._changeDetectorRef) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  static ngAcceptInputType_selected: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n  static ngAcceptInputType_removable: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\n@Directive({\n  selector: '[matChipRemove]',\n  host: {\n    'class': 'mat-chip-remove mat-chip-trailing-icon',\n    '(click)': '_handleClick($event)',\n  }\n})\nexport class MatChipRemove {\n  constructor(\n    protected _parentChip: MatChip,\n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef?: ElementRef<HTMLElement>) {\n\n      // @breaking-change 11.0.0 Remove null check for `elementRef`.\n    if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n      elementRef.nativeElement.setAttribute('type', 'button');\n    }\n   }\n\n  /** Calls the parent chip's public `remove()` method if applicable. */\n  _handleClick(event: Event): void {\n    const parentChip = this._parentChip;\n\n    if (parentChip.removable && !parentChip.disabled) {\n      parentChip.remove();\n    }\n\n    // We need to stop event propagation because otherwise the event will bubble up to the\n    // form field and cause the `onContainerClick` method to be invoked. This method would then\n    // reset the focused chip that has been focused after chip removal. Usually the parent\n    // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n    // that the chip is being removed before the event bubbles up.\n    event.stopPropagation();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** Default options, for the chips module, that can be overridden. */\nexport interface MatChipsDefaultOptions {\n  /** The list of key codes that will trigger a chipEnd event. */\n  separatorKeyCodes: number[] | Set<number>;\n}\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const MAT_CHIPS_DEFAULT_OPTIONS =\n    new InjectionToken<MatChipsDefaultOptions>('mat-chips-default-options');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {BACKSPACE, END, HOME} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  mixinErrorState,\n} from '@angular/material/core';\nimport {MatFormFieldControl} from '@angular/material/form-field';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\nimport {MatChip, MatChipEvent, MatChipSelectionChange} from './chip';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              /** @docs-private */\n              public ngControl: NgControl) {}\n}\nconst _MatChipListMixinBase: CanUpdateErrorStateCtor & typeof MatChipListBase =\n    mixinErrorState(MatChipListBase);\n\n\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the chip list value has changed. */\nexport class MatChipListChange {\n  constructor(\n    /** Chip list that emitted the event. */\n    public source: MatChipList,\n    /** Value of the chip list when the event was emitted. */\n    public value: any) { }\n}\n\n\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\n@Component({\n  selector: 'mat-chip-list',\n  template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n  exportAs: 'matChipList',\n  host: {\n    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-required]': 'role ? required : null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-multiselectable]': 'multiple',\n    '[attr.role]': 'role',\n    '[class.mat-chip-list-disabled]': 'disabled',\n    '[class.mat-chip-list-invalid]': 'errorState',\n    '[class.mat-chip-list-required]': 'required',\n    '[attr.aria-orientation]': 'ariaOrientation',\n    'class': 'mat-chip-list',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n    '(keydown)': '_keydown($event)',\n    '[id]': '_uid',\n  },\n  providers: [{provide: MatFormFieldControl, useExisting: MatChipList}],\n  styleUrls: ['chips.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatChipList extends _MatChipListMixinBase implements MatFormFieldControl<any>,\n  ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  readonly controlType: string = 'mat-chip-list';\n\n  /**\n   * When a chip is destroyed, we store the index of the destroyed chip until the chips\n   * query list notifies about the update. This is necessary because we cannot determine an\n   * appropriate chip that should receive focus until the array of chips updated completely.\n   */\n  private _lastDestroyedChipIndex: number | null = null;\n\n  /** Subject that emits when the component has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** Subscription to focus changes in the chips. */\n  private _chipFocusSubscription: Subscription | null;\n\n  /** Subscription to blur changes in the chips. */\n  private _chipBlurSubscription: Subscription | null;\n\n  /** Subscription to selection changes in chips. */\n  private _chipSelectionSubscription: Subscription | null;\n\n  /** Subscription to remove changes in chips. */\n  private _chipRemoveSubscription: Subscription | null;\n\n  /** The chip input to add more chips */\n  protected _chipInput: MatChipTextControl;\n\n  /** Uid of the chip list */\n  _uid: string = `mat-chip-list-${nextUniqueId++}`;\n\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n\n  /**\n   * User defined tab index.\n   * When it is not null, use user defined tab index. Otherwise use _tabIndex\n   */\n  _userTabIndex: number | null = null;\n\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<MatChip>;\n\n  /** Function when touched */\n  _onTouched = () => {};\n\n  /** Function when changed */\n  _onChange: (value: any) => void = () => {};\n\n  _selectionModel: SelectionModel<MatChip>;\n\n  /** The array of selected chips inside chip list. */\n  get selected(): MatChip[] | MatChip {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The ARIA role applied to the chip list. */\n  get role(): string | null { return this.empty ? null : 'listbox'; }\n\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /** Whether the user should be allowed to select multiple chips. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  private _multiple: boolean = false;\n\n  /**\n   * A function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith(): (o1: any, o2: any) => boolean { return this._compareWith; }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) {\n    this.writeValue(value);\n    this._value = value;\n  }\n  protected _value: any;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id(): string {\n    return this._chipInput ? this._chipInput.id : this._uid;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  protected _required: boolean = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get placeholder(): string {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  protected _placeholder: string;\n\n  /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n  get focused(): boolean {\n    return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty(): boolean {\n    return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean { return !this.empty || this.focused; }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get disabled(): boolean { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  protected _disabled: boolean = false;\n\n  /** Orientation of the chip list. */\n  @Input('aria-orientation') ariaOrientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Whether or not this chip list is selectable. When a chip list is not selectable,\n   * the selected states for all the chips inside the chip list are always ignored.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n\n    if (this.chips) {\n      this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n    }\n  }\n  protected _selectable: boolean = true;\n\n  @Input()\n  set tabIndex(value: number) {\n    this._userTabIndex = value;\n    this._tabIndex = value;\n  }\n\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges(): Observable<MatChipSelectionChange> {\n    return merge(...this.chips.map(chip => chip.selectionChange));\n  }\n\n  /** Combined stream of all of the child chips' focus change events. */\n  get chipFocusChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onFocus));\n  }\n\n  /** Combined stream of all of the child chips' blur change events. */\n  get chipBlurChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onBlur));\n  }\n\n  /** Combined stream of all of the child chips' remove change events. */\n  get chipRemoveChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip.destroyed));\n  }\n\n  /** Event emitted when the selected chip list value has been changed by the user. */\n  @Output() readonly change: EventEmitter<MatChipListChange> =\n      new EventEmitter<MatChipListChange>();\n\n  /**\n   * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** The chip components contained within this chip list. */\n  @ContentChildren(MatChip, {\n    // We need to use `descendants: true`, because Ivy will no longer match\n    // indirect descendants if it's left as false.\n    descendants: true\n  }) chips: QueryList<MatChip>;\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Optional() _parentForm: NgForm,\n              @Optional() _parentFormGroup: FormGroupDirective,\n              _defaultErrorStateMatcher: ErrorStateMatcher,\n              /** @docs-private */\n              @Optional() @Self() public ngControl: NgControl) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatChip>(this.chips)\n      .withWrap()\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n\n    if (this._dir) {\n      this._dir.change\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n    }\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._allowFocusEscape();\n    });\n\n    // When the list changes, re-subscribe\n    this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => {\n          this._syncChipsState();\n        });\n      }\n\n      this._resetChips();\n\n      // Reset chips selected/deselected status\n      this._initializeSelection();\n\n      // Check to see if we need to update our tab index\n      this._updateTabIndex();\n\n      // Check to see if we have a destroyed chip and need to refocus\n      this._updateFocusForDestroyedChips();\n\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<MatChip>(this.multiple, undefined, false);\n    this.stateChanges.next();\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n\n      if (this.ngControl.disabled !== this._disabled) {\n        this.disabled = !!this.ngControl.disabled;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.stateChanges.complete();\n\n    this._dropSubscriptions();\n  }\n\n\n  /** Associates an HTML input element with this chip list. */\n  registerInput(inputElement: MatChipTextControl): void {\n    this._chipInput = inputElement;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) { this._ariaDescribedby = ids.join(' '); }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    if (this.chips) {\n      this._setSelectionByValue(value, false);\n    }\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event: MouseEvent) {\n    if (!this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(options?: FocusOptions): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n    // Focus on first element if there's no chipInput inside chip-list\n    if (this._chipInput && this._chipInput.focused) {\n      // do nothing\n    } else if (this.chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n      this.stateChanges.next();\n    } else {\n      this._focusInput(options);\n      this.stateChanges.next();\n    }\n  }\n\n  /** Attempt to focus an input if we have one. */\n  _focusInput(options?: FocusOptions) {\n    if (this._chipInput) {\n      this._chipInput.focus(options);\n    }\n  }\n\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n  _keydown(event: KeyboardEvent) {\n    const target = event.target as HTMLElement;\n\n    // If they are on an empty input and hit backspace, focus the last chip\n    if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n      this._keyManager.setLastItemActive();\n      event.preventDefault();\n    } else if (target && target.classList.contains('mat-chip')) {\n      if (event.keyCode === HOME) {\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n      } else if (event.keyCode === END) {\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n      } else {\n        this._keyManager.onKeydown(event);\n      }\n\n      this.stateChanges.next();\n    }\n  }\n\n\n  /**\n   * Check the tab index as you should not be allowed to focus an empty list.\n   */\n  protected _updateTabIndex(): void {\n    // If we have 0 chips, we should not allow keyboard focus\n    this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n  }\n\n  /**\n   * If the amount of chips changed, we need to update the\n   * key manager state and focus the next closest chip.\n   */\n  protected _updateFocusForDestroyedChips() {\n    // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n    if (this._lastDestroyedChipIndex != null) {\n      if (this.chips.length) {\n        const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n        this._keyManager.setActiveItem(newChipIndex);\n      } else {\n        this.focus();\n      }\n    }\n\n    this._lastDestroyedChipIndex = null;\n  }\n\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  private _isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.chips.length;\n  }\n\n  private _isInputEmpty(element: HTMLElement): boolean {\n    if (element && element.nodeName.toLowerCase() === 'input') {\n      let input = element as HTMLInputElement;\n      return !input.value;\n    }\n\n    return false;\n  }\n\n  _setSelectionByValue(value: any, isUserInput: boolean = true) {\n    this._clearSelection();\n    this.chips.forEach(chip => chip.deselect());\n\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n      this._sortValues();\n    } else {\n      const correspondingChip = this._selectValue(value, isUserInput);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what chip the user interacted with last.\n      if (correspondingChip) {\n        if (isUserInput) {\n          this._keyManager.setActiveItem(correspondingChip);\n        }\n      }\n    }\n  }\n\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  private _selectValue(value: any, isUserInput: boolean = true): MatChip | undefined {\n\n    const correspondingChip = this.chips.find(chip => {\n      return chip.value != null && this._compareWith(chip.value,  value);\n    });\n\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n      this._selectionModel.select(correspondingChip);\n    }\n\n    return correspondingChip;\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      if (this.ngControl || this._value) {\n        this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n        this.stateChanges.next();\n      }\n    });\n  }\n\n  /**\n   * Deselects every chip in the list.\n   * @param skip Chip that should not be deselected.\n   */\n  private _clearSelection(skip?: MatChip): void {\n    this._selectionModel.clear();\n    this.chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n    this.stateChanges.next();\n  }\n\n  /**\n   * Sorts the model values, ensuring that they keep the same\n   * order that they have in the panel.\n   */\n  private _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.chips.forEach(chip => {\n        if (chip.selected) {\n          this._selectionModel.select(chip);\n        }\n      });\n      this.stateChanges.next();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** When blurred, mark the field as touched when focus moved outside the chip list. */\n  _blur() {\n    if (!this._hasFocusedChip()) {\n      this._keyManager.setActiveItem(-1);\n    }\n\n    if (!this.disabled) {\n      if (this._chipInput) {\n        // If there's a chip input, we should check whether the focus moved to chip input.\n        // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n        // to chip input, do nothing.\n        // Timeout is needed to wait for the focus() event trigger on chip input.\n        setTimeout(() => {\n          if (!this.focused) {\n            this._markAsTouched();\n          }\n        });\n      } else {\n        // If there's no chip input, then mark the field as touched.\n        this._markAsTouched();\n      }\n    }\n  }\n\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  /**\n   * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the list from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (this._tabIndex !== -1) {\n      this._tabIndex = -1;\n\n      setTimeout(() => {\n        this._tabIndex = this._userTabIndex || 0;\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private _resetChips() {\n    this._dropSubscriptions();\n    this._listenToChipsFocus();\n    this._listenToChipsSelection();\n    this._listenToChipsRemoved();\n  }\n\n  private _dropSubscriptions() {\n    if (this._chipFocusSubscription) {\n      this._chipFocusSubscription.unsubscribe();\n      this._chipFocusSubscription = null;\n    }\n\n    if (this._chipBlurSubscription) {\n      this._chipBlurSubscription.unsubscribe();\n      this._chipBlurSubscription = null;\n    }\n\n    if (this._chipSelectionSubscription) {\n      this._chipSelectionSubscription.unsubscribe();\n      this._chipSelectionSubscription = null;\n    }\n\n    if (this._chipRemoveSubscription) {\n      this._chipRemoveSubscription.unsubscribe();\n      this._chipRemoveSubscription = null;\n    }\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsSelection(): void {\n    this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n      event.source.selected\n        ? this._selectionModel.select(event.source)\n        : this._selectionModel.deselect(event.source);\n\n      // For single selection chip list, make sure the deselected value is unselected.\n      if (!this.multiple) {\n        this.chips.forEach(chip => {\n          if (!this._selectionModel.isSelected(chip) && chip.selected) {\n            chip.deselect();\n          }\n        });\n      }\n\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsFocus(): void {\n    this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n      let chipIndex: number = this.chips.toArray().indexOf(event.chip);\n\n      if (this._isValidIndex(chipIndex)) {\n        this._keyManager.updateActiveItem(chipIndex);\n      }\n      this.stateChanges.next();\n    });\n\n    this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n  }\n\n  private _listenToChipsRemoved(): void {\n    this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n      const chip = event.chip;\n      const chipIndex = this.chips.toArray().indexOf(event.chip);\n\n      // In case the chip that will be removed is currently focused, we temporarily store\n      // the index in order to be able to determine an appropriate sibling chip that will\n      // receive focus.\n      if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n        this._lastDestroyedChipIndex = chipIndex;\n      }\n    });\n  }\n\n  /** Checks whether an event comes from inside a chip element. */\n  private _originatesFromChip(event: Event): boolean {\n    let currentElement = event.target as HTMLElement | null;\n\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-chip')) {\n        return true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n    return false;\n  }\n\n  /** Checks whether any of the chips is focused. */\n  private _hasFocusedChip() {\n    return this.chips.some(chip => chip._hasFocus);\n  }\n\n  /** Syncs the list's state with the individual chips. */\n  private _syncChipsState() {\n    if (this.chips) {\n      this.chips.forEach(chip => {\n        chip._chipListDisabled = this._disabled;\n        chip._chipListMultiple = this.multiple;\n      });\n    }\n  }\n\n  static ngAcceptInputType_multiple: BooleanInput;\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, ElementRef, EventEmitter, Inject, Input, OnChanges, Output} from '@angular/core';\nimport {hasModifierKey, TAB} from '@angular/cdk/keycodes';\nimport {MAT_CHIPS_DEFAULT_OPTIONS, MatChipsDefaultOptions} from './chip-default-options';\nimport {MatChipList} from './chip-list';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n/** Represents an input event on a `matChipInput`. */\nexport interface MatChipInputEvent {\n  /** The native `<input>` element that the event is being fired for. */\n  input: HTMLInputElement;\n\n  /** The value of the input. */\n  value: string;\n}\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\n@Directive({\n  selector: 'input[matChipInputFor]',\n  exportAs: 'matChipInput, matChipInputFor',\n  host: {\n    'class': 'mat-chip-input mat-input-element',\n    '(keydown)': '_keydown($event)',\n    '(blur)': '_blur()',\n    '(focus)': '_focus()',\n    '(input)': '_onInput()',\n    '[id]': 'id',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.placeholder]': 'placeholder || null',\n    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n    '[attr.aria-required]': '_chipList && _chipList.required || null',\n  }\n})\nexport class MatChipInput implements MatChipTextControl, OnChanges {\n  /** Whether the control is focused. */\n  focused: boolean = false;\n  _chipList: MatChipList;\n\n  /** Register input for chip list */\n  @Input('matChipInputFor')\n  set chipList(value: MatChipList) {\n    if (value) {\n      this._chipList = value;\n      this._chipList.registerInput(this);\n    }\n  }\n\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  @Input('matChipInputAddOnBlur')\n  get addOnBlur(): boolean { return this._addOnBlur; }\n  set addOnBlur(value: boolean) { this._addOnBlur = coerceBooleanProperty(value); }\n  _addOnBlur: boolean = false;\n\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[ENTER]`.\n   */\n  @Input('matChipInputSeparatorKeyCodes')\n  separatorKeyCodes: number[] | Set<number> = this._defaultOptions.separatorKeyCodes;\n\n  /** Emitted when a chip is to be added. */\n  @Output('matChipInputTokenEnd')\n  chipEnd: EventEmitter<MatChipInputEvent> = new EventEmitter<MatChipInputEvent>();\n\n  /** The input's placeholder text. */\n  @Input() placeholder: string = '';\n\n  /** Unique id for the input. */\n  @Input() id: string = `mat-chip-list-input-${nextUniqueId++}`;\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled || (this._chipList && this._chipList.disabled); }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  /** Whether the input is empty. */\n  get empty(): boolean { return !this._inputElement.value; }\n\n  /** The native input element to which this directive is attached. */\n  protected _inputElement: HTMLInputElement;\n\n  constructor(\n    protected _elementRef: ElementRef<HTMLInputElement>,\n    @Inject(MAT_CHIPS_DEFAULT_OPTIONS) private _defaultOptions: MatChipsDefaultOptions) {\n    this._inputElement = this._elementRef.nativeElement as HTMLInputElement;\n  }\n\n  ngOnChanges() {\n    this._chipList.stateChanges.next();\n  }\n\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event?: KeyboardEvent) {\n    // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n    // want to do this when going backwards, because focus should go back to the first chip.\n    if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n      this._chipList._allowFocusEscape();\n    }\n\n    this._emitChipEnd(event);\n  }\n\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipList.focused) {\n      this._chipList._blur();\n    }\n    this._chipList.stateChanges.next();\n  }\n\n  _focus() {\n    this.focused = true;\n    this._chipList.stateChanges.next();\n  }\n\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event?: KeyboardEvent) {\n    if (!this._inputElement.value && !!event) {\n      this._chipList._keydown(event);\n    }\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipList.stateChanges.next();\n  }\n\n  /** Focuses the input. */\n  focus(options?: FocusOptions): void {\n    this._inputElement.focus(options);\n  }\n\n  /** Checks whether a keycode is one of the configured separators. */\n  private _isSeparatorKey(event: KeyboardEvent) {\n    if (hasModifierKey(event)) {\n      return false;\n    }\n\n    const separators = this.separatorKeyCodes;\n    const keyCode = event.keyCode;\n    return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n  }\n\n  static ngAcceptInputType_addOnBlur: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ENTER} from '@angular/cdk/keycodes';\nimport {NgModule} from '@angular/core';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatChip, MatChipAvatar, MatChipRemove, MatChipTrailingIcon} from './chip';\nimport {MAT_CHIPS_DEFAULT_OPTIONS, MatChipsDefaultOptions} from './chip-default-options';\nimport {MatChipInput} from './chip-input';\nimport {MatChipList} from './chip-list';\n\nconst CHIP_DECLARATIONS = [\n  MatChipList,\n  MatChip,\n  MatChipInput,\n  MatChipRemove,\n  MatChipAvatar,\n  MatChipTrailingIcon,\n];\n\n@NgModule({\n  exports: CHIP_DECLARATIONS,\n  declarations: CHIP_DECLARATIONS,\n  providers: [\n    ErrorStateMatcher,\n    {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      } as MatChipsDefaultOptions\n    }\n  ]\n})\nexport class MatChipsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './chips-module';\nexport * from './chip-list';\nexport * from './chip';\nexport * from './chip-input';\nexport * from './chip-default-options';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n      `custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n\n  /** Formats a range of years. */\n  formatYearRange(start: string, end: string): string {\n    return `${start} \\u2013 ${end}`;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type MatCalendarCellCssClasses = string | string[] | Set<string> | {[key: string]: any};\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class MatCalendarCell<D = any> {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean,\n              public cssClasses: MatCalendarCellCssClasses = {},\n              public compareValue = value,\n              public rawValue?: D) {}\n}\n\n/** Event emitted when a date inside the calendar is triggered as a result of a user action. */\nexport interface MatCalendarUserEvent<D> {\n  value: D;\n  event: Event;\n}\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  selector: '[mat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n    'role': 'grid',\n    'aria-readonly': 'true'\n  },\n  exportAs: 'matCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarBody implements OnChanges, OnDestroy {\n  /**\n   * Used to skip the next focus event when rendering the preview range.\n   * We need a flag like this, because some browsers fire focus events asynchronously.\n   */\n  private _skipNextFocus: boolean;\n\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: MatCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** Start value of the selected date range. */\n  @Input() startValue: number;\n\n  /** End value of the selected date range. */\n  @Input() endValue: number;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols: number = 7;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell: number = 0;\n\n  /** Whether a range is being selected. */\n  @Input() isRange: boolean = false;\n\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  @Input() cellAspectRatio: number = 1;\n\n  /** Start of the comparison range. */\n  @Input() comparisonStart: number | null;\n\n  /** End of the comparison range. */\n  @Input() comparisonEnd: number | null;\n\n  /** Start of the preview range. */\n  @Input() previewStart: number | null = null;\n\n  /** End of the preview range. */\n  @Input() previewEnd: number | null = null;\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<MatCalendarUserEvent<number>> =\n      new EventEmitter<MatCalendarUserEvent<number>>();\n\n  /** Emits when the preview has changed as a result of a user action. */\n  @Output() previewChange = new EventEmitter<MatCalendarUserEvent<MatCalendarCell | null>>();\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  _firstRowOffset: number;\n\n  /** Padding for the individual date cells. */\n  _cellPadding: string;\n\n  /** Width of an individual cell. */\n  _cellWidth: string;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _ngZone: NgZone) {\n    _ngZone.runOutsideAngular(() => {\n      const element = _elementRef.nativeElement;\n      element.addEventListener('mouseenter', this._enterHandler, true);\n      element.addEventListener('focus', this._enterHandler, true);\n      element.addEventListener('mouseleave', this._leaveHandler, true);\n      element.addEventListener('blur', this._leaveHandler, true);\n    });\n  }\n\n  /** Called when a cell is clicked. */\n  _cellClicked(cell: MatCalendarCell, event: MouseEvent): void {\n    if (cell.enabled) {\n      this.selectedValueChange.emit({value: cell.value, event});\n    }\n  }\n\n  /** Returns whether a cell should be marked as selected. */\n  _isSelected(cell: MatCalendarCell) {\n    return this.startValue === cell.compareValue || this.endValue === cell.compareValue;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const columnChanges = changes['numCols'];\n    const {rows, numCols} = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mouseenter', this._enterHandler, true);\n    element.removeEventListener('focus', this._enterHandler, true);\n    element.removeEventListener('mouseleave', this._leaveHandler, true);\n    element.removeEventListener('blur', this._leaveHandler, true);\n  }\n\n  /** Returns whether a cell is active. */\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell(movePreview = true) {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        const activeCell: HTMLElement | null =\n            this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n        if (activeCell) {\n          if (!movePreview) {\n            this._skipNextFocus = true;\n          }\n\n          activeCell.focus();\n        }\n      });\n    });\n  }\n\n  /** Gets whether a value is the start of the main range. */\n  _isRangeStart(value: number) {\n    return isStart(value, this.startValue, this.endValue);\n  }\n\n  /** Gets whether a value is the end of the main range. */\n  _isRangeEnd(value: number) {\n    return isEnd(value, this.startValue, this.endValue);\n  }\n\n  /** Gets whether a value is within the currently-selected range. */\n  _isInRange(value: number): boolean {\n    return isInRange(value, this.startValue, this.endValue, this.isRange);\n  }\n\n  /** Gets whether a value is the start of the comparison range. */\n  _isComparisonStart(value: number) {\n    return isStart(value, this.comparisonStart, this.comparisonEnd);\n  }\n\n  /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n  _isComparisonBridgeStart(value: number, rowIndex: number, colIndex: number) {\n    if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n      return false;\n    }\n\n    let previousCell: MatCalendarCell | undefined = this.rows[rowIndex][colIndex - 1];\n\n    if (!previousCell) {\n      const previousRow = this.rows[rowIndex - 1];\n      previousCell = previousRow && previousRow[previousRow.length - 1];\n    }\n\n    return previousCell && !this._isRangeEnd(previousCell.compareValue);\n  }\n\n  /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n  _isComparisonBridgeEnd(value: number, rowIndex: number, colIndex: number) {\n    if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n      return false;\n    }\n\n    let nextCell: MatCalendarCell | undefined = this.rows[rowIndex][colIndex + 1];\n\n    if (!nextCell) {\n      const nextRow = this.rows[rowIndex + 1];\n      nextCell = nextRow && nextRow[0];\n    }\n\n    return nextCell && !this._isRangeStart(nextCell.compareValue);\n  }\n\n  /** Gets whether a value is the end of the comparison range. */\n  _isComparisonEnd(value: number) {\n    return isEnd(value, this.comparisonStart, this.comparisonEnd);\n  }\n\n  /** Gets whether a value is within the current comparison range. */\n  _isInComparisonRange(value: number) {\n    return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n  }\n\n  /** Gets whether a value is the start of the preview range. */\n  _isPreviewStart(value: number) {\n    return isStart(value, this.previewStart, this.previewEnd);\n  }\n\n  /** Gets whether a value is the end of the preview range. */\n  _isPreviewEnd(value: number) {\n    return isEnd(value, this.previewStart, this.previewEnd);\n  }\n\n  /** Gets whether a value is inside the preview range. */\n  _isInPreview(value: number) {\n    return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n  }\n\n  /**\n   * Event handler for when the user enters an element\n   * inside the calendar body (e.g. by hovering in or focus).\n   */\n  private _enterHandler = (event: Event) => {\n    if (this._skipNextFocus && event.type === 'focus') {\n      this._skipNextFocus = false;\n      return;\n    }\n\n    // We only need to hit the zone when we're selecting a range.\n    if (event.target && this.isRange) {\n      const cell = this._getCellFromElement(event.target as HTMLElement);\n\n      if (cell) {\n        this._ngZone.run(() => this.previewChange.emit({value: cell.enabled ? cell : null, event}));\n      }\n    }\n  }\n\n  /**\n   * Event handler for when the user's pointer leaves an element\n   * inside the calendar body (e.g. by hovering out or blurring).\n   */\n  private _leaveHandler = (event: Event) => {\n    // We only need to hit the zone when we're selecting a range.\n    if (this.previewEnd !== null && this.isRange) {\n      // Only reset the preview end value when leaving cells. This looks better, because\n      // we have a gap between the cells and the rows and we don't want to remove the\n      // range just for it to show up again when the user moves a few pixels to the side.\n      if (event.target && isTableCell(event.target as HTMLElement)) {\n        this._ngZone.run(() => this.previewChange.emit({value: null, event}));\n      }\n    }\n  }\n\n  /** Finds the MatCalendarCell that corresponds to a DOM node. */\n  private _getCellFromElement(element: HTMLElement): MatCalendarCell | null {\n    let cell: HTMLElement | undefined;\n\n    if (isTableCell(element)) {\n      cell = element;\n    } else if (isTableCell(element.parentNode!)) {\n      cell = element.parentNode as HTMLElement;\n    }\n\n    if (cell) {\n      const row = cell.getAttribute('data-mat-row');\n      const col = cell.getAttribute('data-mat-col');\n\n      if (row && col) {\n        return this.rows[parseInt(row)][parseInt(col)];\n      }\n    }\n\n    return null;\n  }\n\n}\n\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node: Node): node is HTMLTableCellElement {\n  return node.nodeName === 'TD';\n}\n\n/** Checks whether a value is the start of a range. */\nfunction isStart(value: number, start: number | null, end: number | null): boolean {\n  return end !== null && start !== end && value < end && value === start;\n}\n\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value: number, start: number | null, end: number | null): boolean {\n  return start !== null && start !== end && value >= start && value === end;\n}\n\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value: number,\n                   start: number | null,\n                   end: number | null,\n                   rangeEnabled: boolean): boolean {\n  return rangeEnabled && start !== null && end !== null && start !== end &&\n         value >= start && value <= end;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FactoryProvider, Injectable, Optional, SkipSelf, OnDestroy, Directive} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** A class representing a range of dates. */\nexport class DateRange<D> {\n  /**\n   * Ensures that objects with a `start` and `end` property can't be assigned to a variable that\n   * expects a `DateRange`\n   */\n  // tslint:disable-next-line:no-unused-variable\n  private _disableStructuralEquivalency: never;\n\n  constructor(\n    /** The start date of the range. */\n    readonly start: D | null,\n    /** The end date of the range. */\n    readonly end: D | null) {}\n}\n\n/**\n * Conditionally picks the date type, if a DateRange is passed in.\n * @docs-private\n */\nexport type ExtractDateTypeFromSelection<T> = T extends DateRange<infer D> ? D : NonNullable<T>;\n\n/** Event emitted by the date selection model when its selection changes. */\nexport interface DateSelectionModelChange<S> {\n  /** New value for the selection. */\n  selection: S;\n\n  /** Object that triggered the change. */\n  source: unknown;\n}\n\n/** A selection model containing a date selection. */\n@Directive()\nexport abstract class MatDateSelectionModel<S, D = ExtractDateTypeFromSelection<S>>\n    implements OnDestroy {\n  private _selectionChanged = new Subject<DateSelectionModelChange<S>>();\n\n  /** Emits when the selection has changed. */\n  selectionChanged: Observable<DateSelectionModelChange<S>> = this._selectionChanged.asObservable();\n\n  protected constructor(\n    /** The current selection. */\n    readonly selection: S,\n    protected _adapter: DateAdapter<D>) {\n    this.selection = selection;\n  }\n\n  /**\n   * Updates the current selection in the model.\n   * @param value New selection that should be assigned.\n   * @param source Object that triggered the selection change.\n   */\n  updateSelection(value: S, source: unknown) {\n    (this as {selection: S}).selection = value;\n    this._selectionChanged.next({selection: value, source});\n  }\n\n  ngOnDestroy() {\n    this._selectionChanged.complete();\n  }\n\n  protected _isValidDateInstance(date: D): boolean {\n    return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n  }\n\n  /** Adds a date to the current selection. */\n  abstract add(date: D | null): void;\n\n  /** Checks whether the current selection is valid. */\n  abstract isValid(): boolean;\n\n  /** Checks whether the current selection is complete. */\n  abstract isComplete(): boolean;\n}\n\n/**  A selection model that contains a single date. */\n@Injectable()\nexport class MatSingleDateSelectionModel<D> extends MatDateSelectionModel<D | null, D> {\n  constructor(adapter: DateAdapter<D>) {\n    super(null, adapter);\n  }\n\n  /**\n   * Adds a date to the current selection. In the case of a single date selection, the added date\n   * simply overwrites the previous selection\n   */\n  add(date: D | null) {\n    super.updateSelection(date, this);\n  }\n\n  /** Checks whether the current selection is valid. */\n  isValid(): boolean {\n    return this.selection != null && this._isValidDateInstance(this.selection);\n  }\n\n  /**\n   * Checks whether the current selection is complete. In the case of a single date selection, this\n   * is true if the current selection is not null.\n   */\n  isComplete() {\n    return this.selection != null;\n  }\n}\n\n/**  A selection model that contains a date range. */\n@Injectable()\nexport class MatRangeDateSelectionModel<D> extends MatDateSelectionModel<DateRange<D>, D> {\n  constructor(adapter: DateAdapter<D>) {\n    super(new DateRange<D>(null, null), adapter);\n  }\n\n  /**\n   * Adds a date to the current selection. In the case of a date range selection, the added date\n   * fills in the next `null` value in the range. If both the start and the end already have a date,\n   * the selection is reset so that the given date is the new `start` and the `end` is null.\n   */\n  add(date: D | null): void {\n    let {start, end} = this.selection;\n\n    if (start == null) {\n      start = date;\n    } else if (end == null) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    super.updateSelection(new DateRange<D>(start, end), this);\n  }\n\n  /** Checks whether the current selection is valid. */\n  isValid(): boolean {\n    const {start, end} = this.selection;\n\n    // Empty ranges are valid.\n    if (start == null && end == null) {\n      return true;\n    }\n\n    // Complete ranges are only valid if both dates are valid and the start is before the end.\n    if (start != null && end != null) {\n      return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n             this._adapter.compareDate(start, end) <= 0;\n    }\n\n    // Partial ranges are valid if the start/end is valid.\n    return (start == null || this._isValidDateInstance(start)) &&\n           (end == null || this._isValidDateInstance(end));\n  }\n\n  /**\n   * Checks whether the current selection is complete. In the case of a date range selection, this\n   * is true if the current selection has a non-null `start` and `end`.\n   */\n  isComplete(): boolean {\n    return this.selection.start != null && this.selection.end != null;\n  }\n}\n\n/** @docs-private */\nexport function MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(\n    parent: MatSingleDateSelectionModel<unknown>, adapter: DateAdapter<unknown>) {\n  return parent || new MatSingleDateSelectionModel(adapter);\n}\n\n/** Used to provide a single selection model to a component. */\nexport const MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER: FactoryProvider = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n\n/** @docs-private */\nexport function MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(\n    parent: MatSingleDateSelectionModel<unknown>, adapter: DateAdapter<unknown>) {\n  return parent || new MatRangeDateSelectionModel(adapter);\n}\n\n/** Used to provide a range selection model to a component. */\nexport const MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER: FactoryProvider = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {DateRange} from './date-selection-model';\n\n/** Injection token used to customize the date range selection behavior. */\nexport const MAT_DATE_RANGE_SELECTION_STRATEGY =\n    new InjectionToken<MatDateRangeSelectionStrategy<any>>('MAT_DATE_RANGE_SELECTION_STRATEGY');\n\n/** Object that can be provided in order to customize the date range selection behavior. */\nexport interface MatDateRangeSelectionStrategy<D> {\n  /**\n   * Called when the user has finished selecting a value.\n   * @param date Date that was selected. Will be null if the user cleared the selection.\n   * @param currentRange Range that is currently show in the calendar.\n   * @param event DOM event that triggered the selection. Currently only corresponds to a `click`\n   *    event, but it may get expanded in the future.\n   */\n  selectionFinished(date: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;\n\n  /**\n   * Called when the user has activated a new date (e.g. by hovering over\n   * it or moving focus) and the calendar tries to display a date range.\n   *\n   * @param activeDate Date that the user has activated. Will be null if the user moved\n   *    focus to an element that's no a calendar cell.\n   * @param currentRange Range that is currently shown in the calendar.\n   * @param event DOM event that caused the preview to be changed. Will be either a\n   *    `mouseenter`/`mouseleave` or `focus`/`blur` depending on how the user is navigating.\n   */\n  createPreview(activeDate: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;\n}\n\n/** Provides the default date range selection behavior. */\n@Injectable()\nexport class DefaultMatCalendarRangeStrategy<D> implements MatDateRangeSelectionStrategy<D> {\n  constructor(private _dateAdapter: DateAdapter<D>) {}\n\n  selectionFinished(date: D, currentRange: DateRange<D>) {\n    let {start, end} = currentRange;\n\n    if (start == null) {\n      start = date;\n    } else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    return new DateRange<D>(start, end);\n  }\n\n  createPreview(activeDate: D | null, currentRange: DateRange<D>) {\n    let start: D | null = null;\n    let end: D | null = null;\n\n    if (currentRange.start && !currentRange.end && activeDate) {\n      start = currentRange.start;\n      end = activeDate;\n    }\n\n    return new DateRange<D>(start, end);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n  ESCAPE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MatCalendarBody,\n  MatCalendarCell,\n  MatCalendarCellCssClasses,\n  MatCalendarUserEvent,\n} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {DateRange} from './date-selection-model';\nimport {\n  MatDateRangeSelectionStrategy,\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\n} from './date-range-selection-strategy';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'matMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMonthView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n\n    this._setRanges(this._selected);\n  }\n  private _selected: DateRange<D> | D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Start of the comparison range. */\n  @Input() comparisonStart: D | null;\n\n  /** End of the comparison range. */\n  @Input() comparisonEnd: D | null;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<MatCalendarUserEvent<D | null>> =\n      new EventEmitter<MatCalendarUserEvent<D | null>>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: MatCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /** Start value of the currently-shown date range. */\n  _rangeStart: number | null;\n\n  /** End value of the currently-shown date range. */\n  _rangeEnd: number | null;\n\n  /** Start value of the currently-shown comparison date range. */\n  _comparisonRangeStart: number | null;\n\n  /** End value of the currently-shown comparison date range. */\n  _comparisonRangeEnd: number | null;\n\n  /** Start of the preview range. */\n  _previewStart: number | null;\n\n  /** End of the preview range. */\n  _previewEnd: number | null;\n\n  /** Whether the user is currently selecting a range of dates. */\n  _isRange: boolean;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality,\n              @Inject(MAT_DATE_RANGE_SELECTION_STRATEGY) @Optional()\n                  private _rangeStrategy?: MatDateRangeSelectionStrategy<D>) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(event: MatCalendarUserEvent<number>) {\n    const date = event.value;\n    const selectedYear = this._dateAdapter.getYear(this.activeDate);\n    const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n    const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n    let rangeStartDate: number | null;\n    let rangeEndDate: number | null;\n\n    if (this._selected instanceof DateRange) {\n      rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n      rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n    } else {\n      rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n    }\n\n    if (rangeStartDate !== date || rangeEndDate !== date) {\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this._userSelection.emit({value: selectedDate, event: event.event});\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected({value: this._dateAdapter.getDate(this._activeDate), event});\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      case ESCAPE:\n        // Abort the current range selection if the user presses escape mid-selection.\n        if (this._previewEnd != null) {\n          this._previewStart = this._previewEnd = null;\n          this.selectedChange.emit(null);\n          this._userSelection.emit({value: null, event});\n          event.preventDefault();\n          event.stopPropagation(); // Prevents the overlay from closing.\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this._setRanges(this.selected);\n    this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._initWeekdays();\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell(movePreview?: boolean) {\n    this._matCalendarBody._focusActiveCell(movePreview);\n  }\n\n  /** Called when the user has activated a new cell and the preview needs to be updated. */\n  _previewChanged({event, value: cell}: MatCalendarUserEvent<MatCalendarCell<D> | null>) {\n    if (this._rangeStrategy) {\n      // We can assume that this will be a range, because preview\n      // events aren't fired for single date selections.\n      const value = cell ? cell.rawValue! : null;\n      const previewRange =\n          this._rangeStrategy.createPreview(value, this.selected as DateRange<D>, event);\n      this._previewStart = this._getCellCompareValue(previewRange.start);\n      this._previewEnd = this._getCellCompareValue(previewRange.end);\n\n      // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n      // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n      // when navigating one month back using the keyboard which will cause this handler\n      // to throw a \"changed after checked\" error when updating the preview state.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Initializes the weekdays. */\n  private _initWeekdays() {\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n        return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n  }\n\n  /** Creates MatCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n      this._weeks[this._weeks.length - 1].push(new MatCalendarCell<D>(i + 1, dateNames[i],\n          ariaLabel, enabled, cellClasses, this._getCellCompareValue(date)!, date));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n        (!this.dateFilter || this.dateFilter(date));\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n\n  /** Gets the value that will be used to one cell to another. */\n  private _getCellCompareValue(date: D | null): number | null {\n    if (date) {\n      // We use the time since the Unix epoch to compare dates in this view, rather than the\n      // cell values, because we need to support ranges that span across multiple months/years.\n      const year = this._dateAdapter.getYear(date);\n      const month = this._dateAdapter.getMonth(date);\n      const day = this._dateAdapter.getDate(date);\n      return new Date(year, month, day).getTime();\n    }\n\n    return null;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /** Sets the current range based on a model value. */\n  private _setRanges(selectedValue: DateRange<D> | D | null) {\n    if (selectedValue instanceof DateRange) {\n      this._rangeStart = this._getCellCompareValue(selectedValue.start);\n      this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n      this._isRange = true;\n    } else {\n      this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n      this._isRange = false;\n    }\n\n    this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n    this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell, MatCalendarUserEvent} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {DateRange} from './date-selection-model';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'matMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMultiYearView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n    if (!isSameMultiYearView(\n      this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n\n    this._setSelectedYear(value);\n  }\n  private _selected: DateRange<D> | D | null;\n\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: MatCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n\n    // We want a range years such that we maximize the number of\n    // enabled dates visible at once. This prevents issues where the minimum year\n    // is the last item of a page OR the maximum year is the first item of a page.\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view.\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(event: MatCalendarUserEvent<number>) {\n    const year = event.value;\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    let daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          yearsPerPage - getActiveOffset(\n            this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected({value: this._dateAdapter.getYear(this._activeDate), event});\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an MatCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /** Sets the currently-highlighted year based on a model value. */\n  private _setSelectedYear(value: DateRange<D> | D | null) {\n    this._selectedYear = null;\n\n    if (value instanceof DateRange) {\n      const displayValue = value.start || value.end;\n\n      if (displayValue) {\n        this._selectedYear = this._dateAdapter.getYear(displayValue);\n      }\n    } else if (value) {\n      this._selectedYear = this._dateAdapter.getYear(value);\n    }\n  }\n}\n\nexport function isSameMultiYearView<D>(\n  dateAdapter: DateAdapter<D>, date1: D, date2: D, minDate: D | null, maxDate: D | null): boolean {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) ===\n          Math.floor((year2 - startingYear) / yearsPerPage);\n}\n\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nexport function getActiveOffset<D>(\n  dateAdapter: DateAdapter<D>, activeDate: D, minDate: D | null, maxDate: D | null): number {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)),\n    yearsPerPage);\n}\n\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear<D>(\n  dateAdapter: DateAdapter<D>, minDate: D | null, maxDate: D | null): number {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo (a: number, b: number): number {\n  return (a % b + b) % b;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell, MatCalendarUserEvent} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {DateRange} from './date-selection-model';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'matYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatYearView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n\n    this._setSelectedMonth(value);\n  }\n  private _selected: DateRange<D> | D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: MatCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(event: MatCalendarUserEvent<number>) {\n    const month = event.value;\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected({value: this._dateAdapter.getMonth(this._activeDate), event});\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._setSelectedMonth(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an MatCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    let ariaLabel = this._dateAdapter.format(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n        this._dateFormats.display.monthYearA11yLabel);\n    return new MatCalendarCell(\n        month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /** Sets the currently-selected month based on a model value. */\n  private _setSelectedMonth(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                            this._getMonthInCurrentYear(value.end);\n    } else {\n      this._selectedMonth = this._getMonthInCurrentYear(value);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentPortal, ComponentType, Portal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MatDateFormats,\n} from '@angular/material/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {MatCalendarCellCssClasses, MatCalendarUserEvent} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatMonthView} from './month-view';\nimport {\n  getActiveOffset,\n  isSameMultiYearView,\n  MatMultiYearView,\n  yearsPerPage\n} from './multi-year-view';\nimport {MatYearView} from './year-view';\nimport {MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, DateRange} from './date-selection-model';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type MatCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for MatCalendar */\n@Component({\n  selector: 'mat-calendar-header',\n  templateUrl: 'calendar-header.html',\n  exportAs: 'matCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarHeader<D> {\n  constructor(private _intl: MatDatepickerIntl,\n              @Inject(forwardRef(() => MatCalendar)) public calendar: MatCalendar<D>,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  /** The label for the current calendar view. */\n  get periodButtonText(): string {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter\n          .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n              .toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view, and the last year is\n    // just yearsPerPage - 1 away.\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n    const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n    const minYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n    const maxYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n    return this._intl.formatYearRange(minYearName, maxYearName);\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView == 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the previous button. */\n  get prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** The label for the next button. */\n  get nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** Handles user clicks on the period label. */\n  currentPeriodClicked(): void {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n\n  /** Handles user clicks on the previous button. */\n  previousClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage\n            );\n  }\n\n  /** Handles user clicks on the next button. */\n  nextClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                    this.calendar.currentView == 'year' ? 1 : yearsPerPage\n            );\n  }\n\n  /** Whether the previous period button is enabled. */\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  nextEnabled(): boolean {\n    return !this.calendar.maxDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return isSameMultiYearView(\n      this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n  }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  exportAs: 'matCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]\n})\nexport class MatCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n  /** An input indicating the type of the header component, if set. */\n  @Input() headerComponent: ComponentType<any>;\n\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal: Portal<any>;\n\n  private _intlChanges: Subscription;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private _moveFocusOnNextTick = false;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: MatCalendarView = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n  }\n  private _selected: DateRange<D> | D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Start of the comparison range. */\n  @Input() comparisonStart: D | null;\n\n  /** End of the comparison range. */\n  @Input() comparisonEnd: D | null;\n\n  /**\n   * Emits when the currently selected date changes.\n   * @breaking-change 11.0.0 Emitted value to change to `D | null`.\n   */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<MatCalendarUserEvent<D | null>> =\n      new EventEmitter<MatCalendarUserEvent<D | null>>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(MatMonthView) monthView: MatMonthView<D>;\n\n  /** Reference to the current year view component. */\n  @ViewChild(MatYearView) yearView: MatYearView<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(MatMultiYearView) multiYearView: MatMultiYearView<D>;\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate(): D { return this._clampedActiveDate; }\n  set activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  get currentView(): MatCalendarView { return this._currentView; }\n  set currentView(value: MatCalendarView) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n  }\n  private _currentView: MatCalendarView;\n\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject<void>();\n\n  constructor(_intl: MatDatepickerIntl,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change =\n        changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell(false);\n  }\n\n  /** Updates today's date after an update of the active date */\n  updateTodaysDate() {\n    const currentView = this.currentView;\n    let view: MatMonthView<D> | MatYearView<D> | MatMultiYearView<D>;\n\n    if (currentView === 'month') {\n      view = this.monthView;\n    } else if (currentView === 'year') {\n      view = this.yearView;\n    } else {\n      view = this.multiYearView;\n    }\n\n    view._init();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(event: MatCalendarUserEvent<D | null>): void {\n    const date = event.value;\n\n    if (this.selected instanceof DateRange ||\n        (date && !this._dateAdapter.sameDate(date, this.selected))) {\n      // @breaking-change 11.0.0 remove non-null assertion\n      // once the `selectedChange` is allowed to be null.\n      this.selectedChange.emit(date!);\n    }\n\n    this._userSelection.emit(event);\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Returns the component instance that corresponds to the current calendar view. */\n  private _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nexport const matDatepickerAnimations: {\n  readonly transformPanel: AnimationTriggerMetadata;\n  readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(1, 0.8)'\n    })),\n    transition('void => enter',  animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n      opacity: 1,\n      transform: 'scale(1, 1)'\n    }))),\n    transition('* => void', animate('100ms linear', style({opacity: 0})))\n  ]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [\n    state('void', style({opacity: 0})),\n    state('enter', style({opacity: 1})),\n\n    // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n    // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n    transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  FlexibleConnectedPositionStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  DateAdapter,\n  mixinColor,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Observable} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {MatCalendar} from './calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatCalendarCellCssClasses, MatCalendarUserEvent} from './calendar-body';\nimport {DateFilterFn} from './datepicker-input-base';\nimport {\n  ExtractDateTypeFromSelection,\n  MatDateSelectionModel,\n  DateRange,\n} from './date-selection-model';\nimport {\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\n  MatDateRangeSelectionStrategy,\n} from './date-range-selection-strategy';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** Possible positions for the datepicker dropdown along the X axis. */\nexport type DatepickerDropdownPositionX = 'start' | 'end';\n\n/** Possible positions for the datepicker dropdown along the Y axis. */\nexport type DatepickerDropdownPositionY = 'above' | 'below';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nconst _MatDatepickerContentMixinBase: CanColorCtor & typeof MatDatepickerContentBase =\n    mixinColor(MatDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  selector: 'mat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '_animationState',\n    '(@transformPanel.done)': '_animationDone.next()',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class MatDatepickerContent<S, D = ExtractDateTypeFromSelection<S>>\n  extends _MatDatepickerContentMixinBase implements AfterViewInit, OnDestroy, CanColor {\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(MatCalendar) _calendar: MatCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: MatDatepickerBase<any, S, D>;\n\n  /** Start of the comparison range. */\n  comparisonStart: D | null;\n\n  /** End of the comparison range. */\n  comparisonEnd: D | null;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  /** Current state of the animation. */\n  _animationState: 'enter' | 'void' = 'enter';\n\n  /** Emits when an animation has finished. */\n  _animationDone = new Subject<void>();\n\n  constructor(\n    elementRef: ElementRef,\n    /**\n     * @deprecated `_changeDetectorRef`, `_model` and `_rangeSelectionStrategy`\n     * parameters to become required.\n     * @breaking-change 11.0.0\n     */\n    private _changeDetectorRef?: ChangeDetectorRef,\n    private _model?: MatDateSelectionModel<S, D>,\n    private _dateAdapter?: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_RANGE_SELECTION_STRATEGY)\n        private _rangeSelectionStrategy?: MatDateRangeSelectionStrategy<D>) {\n    super(elementRef);\n  }\n\n  ngAfterViewInit() {\n    this._calendar.focusActiveCell();\n  }\n\n  ngOnDestroy() {\n    this._animationDone.complete();\n  }\n\n  _handleUserSelection(event: MatCalendarUserEvent<D | null>) {\n    // @breaking-change 11.0.0 Remove null checks for _model,\n    // _rangeSelectionStrategy and _dateAdapter.\n    if (this._model && this._dateAdapter) {\n      const selection = this._model.selection;\n      const value = event.value;\n      const isRange = selection instanceof DateRange;\n\n      // If we're selecting a range and we have a selection strategy, always pass the value through\n      // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n      // A null value when picking a range means that the user cancelled the selection (e.g. by\n      // pressing escape), whereas when selecting a single value it means that the value didn't\n      // change. This isn't very intuitive, but it's here for backwards-compatibility.\n      if (isRange && this._rangeSelectionStrategy) {\n        const newSelection = this._rangeSelectionStrategy.selectionFinished(value,\n            selection as unknown as DateRange<D>, event.event);\n        this._model.updateSelection(newSelection as unknown as S, this);\n      } else if (value && (isRange ||\n                !this._dateAdapter.sameDate(value, selection as unknown as D))) {\n        this._model.add(value);\n      }\n    }\n\n    if (!this._model || this._model.isComplete()) {\n      this.datepicker.close();\n    }\n  }\n\n  _startExitAnimation() {\n    this._animationState = 'void';\n\n    // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n    if (this._changeDetectorRef) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  _getSelected() {\n    // @breaking-change 11.0.0 Remove null check for `_model`.\n    return this._model ? this._model.selection as unknown as D | DateRange<D> | null : null;\n  }\n}\n\n/** Form control that can be associated with a datepicker. */\nexport interface MatDatepickerControl<D> {\n  getStartValue(): D | null;\n  getThemePalette(): ThemePalette;\n  min: D | null;\n  max: D | null;\n  disabled: boolean;\n  dateFilter: DateFilterFn<D>;\n  getConnectedOverlayOrigin(): ElementRef;\n  _disabledChange: Observable<boolean>;\n}\n\n/** Base class for a datepicker. */\n@Directive()\nexport abstract class MatDatepickerBase<C extends MatDatepickerControl<D>, S,\n  D = ExtractDateTypeFromSelection<S>> implements OnDestroy, CanColor, OnChanges {\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** An input indicating the type of the custom header component for the calendar, if set. */\n  @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.getStartValue() : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this._datepickerInput ? this._datepickerInput.getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  private _disabled: boolean;\n\n  /** Preferred position of the datepicker in the X axis. */\n  @Input()\n  xPosition: DatepickerDropdownPositionX = 'start';\n\n  /** Preferred position of the datepicker in the Y axis. */\n  @Input()\n  yPosition: DatepickerDropdownPositionY = 'below';\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : this.close(); }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `mat-datepicker-${datepickerUid++}`;\n\n  /** The minimum selectable date. */\n  get _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): DateFilterFn<D> {\n    return this._datepickerInput && this._datepickerInput.dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  private _popupRef: OverlayRef | null;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<MatDatepickerContent<S, D>> | null;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<MatDatepickerContent<S, D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: C;\n\n  /** Emits when the datepicker is disabled. */\n  readonly _disabledChange = new Subject<boolean>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              private _model: MatDateSelectionModel<S, D>) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const positionChange = changes['xPosition'] || changes['yPosition'];\n\n    if (positionChange && !positionChange.firstChange && this._popupRef) {\n      this._setConnectedPositions(\n          this._popupRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n\n      if (this.opened) {\n        this._popupRef.updatePosition();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyPopup();\n    this.close();\n    this._disabledChange.complete();\n  }\n\n  /** Selects the given date */\n  select(date: D): void {\n    this._model.add(date);\n  }\n\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   * @returns Selection model that the input should hook itself up to.\n   */\n  _registerInput(input: C): MatDateSelectionModel<S, D> {\n    if (this._datepickerInput) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    return this._model;\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupComponentRef && this._popupRef) {\n      const instance = this._popupComponentRef.instance;\n      instance._startExitAnimation();\n      instance._animationDone.pipe(take(1)).subscribe(() => this._destroyPopup());\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this._dialog.open<MatDatepickerContent<S, D>>(MatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n\n      // These values are all the same as the defaults, but we set them explicitly so that the\n      // datepicker dialog behaves consistently even if the user changed the defaults.\n      hasBackdrop: true,\n      disableClose: false,\n      width: '',\n      height: '',\n      minWidth: '',\n      minHeight: '',\n      maxWidth: '80vw',\n      maxHeight: '',\n      position: {},\n      autoFocus: true,\n\n      // `MatDialog` has focus restoration built in, however we want to disable it since the\n      // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n      // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n      // restores focus when the animation is finished, but the datepicker does it immediately.\n      // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n      // inside the `closed` event which is dispatched immediately.\n      restoreFocus: false\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._forwardContentValues(this._dialogRef.componentInstance);\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    const portal = new ComponentPortal<MatDatepickerContent<S, D>>(MatDatepickerContent,\n                                                                   this._viewContainerRef);\n\n    this._destroyPopup();\n    this._createPopup();\n    this._popupComponentRef = this._popupRef!.attach(portal);\n    this._forwardContentValues(this._popupComponentRef.instance);\n\n    // Update the position once the calendar has rendered.\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._popupRef!.updatePosition();\n    });\n  }\n\n  /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n  protected _forwardContentValues(instance: MatDatepickerContent<S, D>) {\n    instance.datepicker = this;\n    instance.color = this.color;\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const positionStrategy = this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition();\n\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._setConnectedPositions(positionStrategy),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE ||\n               (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(event => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.close();\n    });\n  }\n\n  /** Destroys the current popup overlay. */\n  private _destroyPopup() {\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupRef = this._popupComponentRef = null;\n    }\n  }\n\n  /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n  private _setConnectedPositions(strategy: FlexibleConnectedPositionStrategy) {\n    const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n    const secondaryX = primaryX === 'start' ? 'end' : 'start';\n    const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n    const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n\n    return strategy.withPositions([\n      {\n        originX: primaryX,\n        originY: secondaryY,\n        overlayX: primaryX,\n        overlayY: primaryY\n      },\n      {\n        originX: primaryX,\n        originY: primaryY,\n        overlayX: primaryX,\n        overlayY: secondaryY\n      },\n      {\n        originX: secondaryX,\n        originY: secondaryY,\n        overlayX: secondaryX,\n        overlayY: primaryY\n      },\n      {\n        originX: secondaryX,\n        originY: primaryY,\n        overlayX: secondaryX,\n        overlayY: secondaryY\n      }\n    ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_touchUi: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDatepickerBase, MatDatepickerControl} from './datepicker-base';\nimport {MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER} from './date-selection-model';\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  selector: 'mat-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]\n})\nexport class MatDatepicker<D> extends MatDatepickerBase<MatDatepickerControl<D>, D | null, D> {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n} from '@angular/forms';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MatDateFormats,\n} from '@angular/material/core';\nimport {Subscription} from 'rxjs';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {ExtractDateTypeFromSelection, MatDateSelectionModel} from './date-selection-model';\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nexport class MatDatepickerInputEvent<D, S = unknown> {\n  /** The new value for the target datepicker input. */\n  value: D | null;\n\n  constructor(\n      /** Reference to the datepicker input component that emitted the event. */\n      public target: MatDatepickerInputBase<S, D>,\n      /** Reference to the native input element associated with the datepicker input. */\n      public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n/** Function that can be used to filter out dates from a calendar. */\nexport type DateFilterFn<D> = (date: D | null) => boolean;\n\n/** Base class for datepicker inputs. */\n@Directive()\nexport abstract class MatDatepickerInputBase<S, D = ExtractDateTypeFromSelection<S>>\n  implements ControlValueAccessor, AfterViewInit, OnDestroy, Validator {\n\n  /** Whether the component has been initialized. */\n  private _isInitialized: boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): D | null {\n    return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n  }\n  set value(value: D | null) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = this._isValidValue(value);\n    value = this._getValidDateOrNull(value);\n    const oldDate = this.value;\n    this._assignValue(value);\n    this._formatValue(value);\n\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n  protected _model: MatDateSelectionModel<S, D> | undefined;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled || this._parentDisabled(); }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n    // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n    // element has been inserted.\n    if (newValue && this._isInitialized && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<MatDatepickerInputEvent<D, S>> =\n      new EventEmitter<MatDatepickerInputEvent<D, S>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<MatDatepickerInputEvent<D, S>> =\n      new EventEmitter<MatDatepickerInputEvent<D, S>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<D | null>();\n\n  /** Emits when the disabled state has changed */\n  _disabledChange = new EventEmitter<boolean>();\n\n  _onTouched = () => {};\n  _validatorOnChange = () => {};\n\n  protected _cvaOnChange: (value: any) => void = () => {};\n  private _valueChangesSubscription = Subscription.EMPTY;\n  private _localeSubscription = Subscription.EMPTY;\n\n  /**\n   * Since the value is kept on the model which is assigned in an Input,\n   * we might get a value before we have a model. This property keeps track\n   * of the value until we have somewhere to assign it.\n   */\n  private _pendingValue: D | null;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const dateFilter = this._getDateFilter();\n    return !dateFilter || !controlValue || dateFilter(controlValue) ?\n        null : {'matDatepickerFilter': true};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const min = this._getMinDate();\n    return (!min || !controlValue ||\n        this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n        null : {'matDatepickerMin': {'min': min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const max = this._getMaxDate();\n    return (!max || !controlValue ||\n        this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n        null : {'matDatepickerMax': {'max': max, 'actual': controlValue}};\n  }\n\n  /** Gets the base validator functions. */\n  protected _getValidators(): ValidatorFn[] {\n    return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n  }\n\n  /** Gets the minimum date for the input. Used for validation. */\n  abstract _getMinDate(): D | null;\n\n  /** Gets the maximum date for the input. Used for validation. */\n  abstract _getMaxDate(): D | null;\n\n  /** Gets the date filter function. Used for validation. */\n  protected abstract _getDateFilter(): DateFilterFn<D> | undefined;\n\n  /** Registers a date selection model with the input. */\n  _registerModel(model: MatDateSelectionModel<S, D>): void {\n    this._model = model;\n    this._valueChangesSubscription.unsubscribe();\n\n    if (this._pendingValue) {\n      this._assignValue(this._pendingValue);\n    }\n\n    this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n      if (event.source !== this) {\n        const value = this._getValueFromModel(event.selection);\n        this._lastValueValid = this._isValidValue(value);\n        this._cvaOnChange(value);\n        this._onTouched();\n        this._formatValue(value);\n        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n\n        if (this._outsideValueChanged) {\n          this._outsideValueChanged();\n        }\n      }\n    });\n  }\n\n  /** Opens the popup associated with the input. */\n  protected abstract _openPopup(): void;\n\n  /** Assigns a value to the input's model. */\n  protected abstract _assignValueToModel(model: D | null): void;\n\n  /** Converts a value from the model into a native value for the input. */\n  protected abstract _getValueFromModel(modelValue: S): D | null;\n\n  /** Combined form control validator for this input. */\n  protected abstract _validator: ValidatorFn | null;\n\n  /**\n   * Callback that'll be invoked when the selection model is changed\n   * from somewhere that's not the current datepicker input.\n   */\n  protected abstract _outsideValueChanged?: () => void;\n\n  /** Whether the last value set on the input was valid. */\n  protected _lastValueValid = false;\n\n  constructor(\n      protected _elementRef: ElementRef<HTMLInputElement>,\n      @Optional() public _dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngAfterViewInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    this._valueChangesSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._openPopup();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    const lastValueWasValid = this._lastValueValid;\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = this._isValidValue(date);\n    date = this._getValidDateOrNull(date);\n\n    if (!this._dateAdapter.sameDate(date, this.value)) {\n      this._assignValue(date);\n      this._cvaOnChange(date);\n      this._valueChange.emit(date);\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    } else {\n      // Call the CVA change handler for invalid values\n      // since this is what marks the control as dirty.\n      if (value && !this.value) {\n        this._cvaOnChange(date);\n      }\n\n      if (lastValueWasValid !== this._lastValueValid) {\n        this._validatorOnChange();\n      }\n    }\n  }\n\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  /** Formats a value and sets it on the input element. */\n  protected _formatValue(value: D | null) {\n    this._elementRef.nativeElement.value =\n        value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  protected _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Assigns a value to the model. */\n  private _assignValue(value: D | null) {\n    // We may get some incoming values before the model was\n    // assigned. Save the value so that we can assign it later.\n    if (this._model) {\n      this._assignValueToModel(value);\n      this._pendingValue = null;\n    } else {\n      this._pendingValue = value;\n    }\n  }\n\n  /** Whether a value is considered valid. */\n  private _isValidValue(value: D | null): boolean {\n    return !value || this._dateAdapter.isValid(value);\n  }\n\n  /**\n   * Checks whether a parent control is disabled. This is in place so that it can be overridden\n   * by inputs extending this one which can be placed inside of a group that can be disabled.\n   */\n  protected _parentDisabled() {\n    return false;\n  }\n\n  // Accept `any` to avoid conflicts with other directives on `<input>` that\n  // may accept different types.\n  static ngAcceptInputType_value: any;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n} from '@angular/core';\nimport {\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MatDateFormats,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatFormField, MAT_FORM_FIELD} from '@angular/material/form-field';\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\nimport {MatDatepicker} from './datepicker';\nimport {MatDatepickerInputBase, DateFilterFn} from './datepicker-input-base';\nimport {MatDatepickerControl} from './datepicker-base';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** Directive used to connect an input to a MatDatepicker. */\n@Directive({\n  selector: 'input[matDatepicker]',\n  providers: [\n    MAT_DATEPICKER_VALUE_ACCESSOR,\n    MAT_DATEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput},\n  ],\n  host: {\n    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'matDatepickerInput',\n})\nexport class MatDatepickerInput<D> extends MatDatepickerInputBase<D | null, D>\n  implements MatDatepickerControl<D | null> {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set matDatepicker(datepicker: MatDatepicker<D>) {\n    if (datepicker) {\n      this._datepicker = datepicker;\n      this._registerModel(datepicker._registerInput(this));\n    }\n  }\n  _datepicker: MatDatepicker<D>;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _max: D | null;\n\n  /** Function that can be used to filter out dates within the datepicker. */\n  @Input('matDatepickerFilter')\n  get dateFilter() { return this._dateFilter; }\n  set dateFilter(value: DateFilterFn<D | null>) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n  private _dateFilter: DateFilterFn<D | null>;\n\n  /** The combined form control validator for this input. */\n  protected _validator: ValidatorFn | null;\n\n  constructor(\n      elementRef: ElementRef<HTMLInputElement>,\n      @Optional() dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats,\n      @Optional() @Inject(MAT_FORM_FIELD) private _formField: MatFormField) {\n    super(elementRef, dateAdapter, dateFormats);\n    this._validator = Validators.compose(super._getValidators());\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Gets the value at which the calendar should start. */\n  getStartValue(): D | null {\n    return this.value;\n  }\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this.getConnectedOverlayOrigin();\n  }\n\n  /** Opens the associated datepicker. */\n  protected _openPopup(): void {\n    if (this._datepicker) {\n      this._datepicker.open();\n    }\n  }\n\n  protected _getValueFromModel(modelValue: D | null): D | null {\n    return modelValue;\n  }\n\n  protected _assignValueToModel(value: D | null): void {\n    if (this._model) {\n      this._model.updateSelection(value, this);\n    }\n  }\n\n  /** Gets the input's minimum date. */\n  _getMinDate() {\n    return this._min;\n  }\n\n  /** Gets the input's maximum date. */\n  _getMaxDate() {\n    return this._max;\n  }\n\n  /** Gets the input's date filtering function. */\n  protected _getDateFilter() {\n    return this._dateFilter;\n  }\n\n  // Unnecessary when selecting a single date.\n  protected _outsideValueChanged: undefined;\n\n  // Accept `any` to avoid conflicts with other directives on `<input>` that\n  // may accept different types.\n  static ngAcceptInputType_value: any;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {MatButton} from '@angular/material/button';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerBase, MatDatepickerControl} from './datepicker-base';\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n  selector: '[matDatepickerToggleIcon]'\n})\nexport class MatDatepickerToggleIcon {}\n\n\n@Component({\n  selector: 'mat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.css'],\n  host: {\n    'class': 'mat-datepicker-toggle',\n    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n    // consumer may have provided, while still being able to receive focus.\n    '[attr.tabindex]': 'disabled ? null : -1',\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n    '(focus)': '_button.focus()',\n  },\n  exportAs: 'matDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') datepicker: MatDatepickerBase<MatDatepickerControl<any>, D>;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input() disableRipple: boolean;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(MatDatepickerToggleIcon) _customIcon: MatDatepickerToggleIcon;\n\n  /** Underlying button element. */\n  @ViewChild('button') _button: MatButton;\n\n  constructor(\n    public _intl: MatDatepickerIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string) {\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n        this.datepicker._datepickerInput._disabledChange : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerDisabled,\n      inputDisabled,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  InjectionToken,\n  Inject,\n  OnInit,\n  Injector,\n  InjectFlags,\n  DoCheck,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  NgForm,\n  FormGroupDirective,\n  NgControl,\n  ValidatorFn,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  mixinErrorState,\n  MAT_DATE_FORMATS,\n  DateAdapter,\n  MatDateFormats,\n  ErrorStateMatcher,\n} from '@angular/material/core';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {BACKSPACE} from '@angular/cdk/keycodes';\nimport {MatDatepickerInputBase, DateFilterFn} from './datepicker-input-base';\nimport {DateRange} from './date-selection-model';\n\n/** Parent component that should be wrapped around `MatStartDate` and `MatEndDate`. */\nexport interface MatDateRangeInputParent<D> {\n  id: string;\n  min: D | null;\n  max: D | null;\n  dateFilter: DateFilterFn<D>;\n  rangePicker: {\n    opened: boolean;\n    id: string;\n  };\n  _startInput: MatDateRangeInputPartBase<D>;\n  _endInput: MatDateRangeInputPartBase<D>;\n  _groupDisabled: boolean;\n  _handleChildValueChange(): void;\n  _openDatepicker(): void;\n}\n\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nexport const MAT_DATE_RANGE_INPUT_PARENT =\n    new InjectionToken<MatDateRangeInputParent<unknown>>('MAT_DATE_RANGE_INPUT_PARENT');\n\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\n@Directive()\nabstract class MatDateRangeInputPartBase<D>\n  extends MatDatepickerInputBase<DateRange<D>> implements OnInit, DoCheck {\n\n  /** @docs-private */\n  ngControl: NgControl;\n\n  /** @docs-private */\n  abstract updateErrorState(): void;\n\n  protected abstract _validator: ValidatorFn | null;\n  protected abstract _assignValueToModel(value: D | null): void;\n  protected abstract _getValueFromModel(modelValue: DateRange<D>): D | null;\n\n  constructor(\n    @Inject(MAT_DATE_RANGE_INPUT_PARENT) public _rangeInput: MatDateRangeInputParent<D>,\n    elementRef: ElementRef<HTMLInputElement>,\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    private _injector: Injector,\n    @Optional() public _parentForm: NgForm,\n    @Optional() public _parentFormGroup: FormGroupDirective,\n    @Optional() dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats) {\n    super(elementRef, dateAdapter, dateFormats);\n  }\n\n  ngOnInit() {\n    // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n    // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n    // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n    // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n    // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n    // everything has been resolved.\n    const ngControl = this._injector.get(NgControl, null, InjectFlags.Self);\n\n    if (ngControl) {\n      this.ngControl = ngControl;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  /** Gets whether the input is empty. */\n  isEmpty(): boolean {\n    return this._elementRef.nativeElement.value.length === 0;\n  }\n\n  /** Gets the placeholder of the input. */\n  _getPlaceholder() {\n    return this._elementRef.nativeElement.placeholder;\n  }\n\n  /** Focuses the input. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Handles `input` events on the input element. */\n  _onInput(value: string) {\n    super._onInput(value);\n    this._rangeInput._handleChildValueChange();\n  }\n\n  /** Opens the datepicker associated with the input. */\n  protected _openPopup(): void {\n    this._rangeInput._openDatepicker();\n  }\n\n  /** Gets the minimum date from the range input. */\n  _getMinDate() {\n    return this._rangeInput.min;\n  }\n\n  /** Gets the maximum date from the range input. */\n  _getMaxDate() {\n    return this._rangeInput.max;\n  }\n\n  /** Gets the date filter function from the range input. */\n  protected _getDateFilter() {\n    return this._rangeInput.dateFilter;\n  }\n\n  protected _outsideValueChanged = () => {\n    // Whenever the value changes outside the input we need to revalidate, because\n    // the validation state of each of the inputs depends on the other one.\n    this._validatorOnChange();\n  }\n\n  protected _parentDisabled() {\n    return this._rangeInput._groupDisabled;\n  }\n}\n\nconst _MatDateRangeInputBase:\n    CanUpdateErrorStateCtor & typeof MatDateRangeInputPartBase =\n    // Needs to be `as any`, because the base class is abstract.\n    mixinErrorState(MatDateRangeInputPartBase as any);\n\n/** Input for entering the start date in a `mat-date-range-input`. */\n@Directive({\n  selector: 'input[matStartDate]',\n  host: {\n    'class': 'mat-date-range-input-inner',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(keydown)': '_onKeydown($event)',\n    '[attr.id]': '_rangeInput.id',\n    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n    '(blur)': '_onBlur()',\n    'type': 'text',\n  },\n  providers: [\n    {provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true},\n    {provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true}\n  ]\n})\nexport class MatStartDate<D> extends _MatDateRangeInputBase<D> implements CanUpdateErrorState {\n  /** Validator that checks that the start date isn't after the end date. */\n  private _startValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const start = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const end = this._model ? this._model.selection.end : null;\n    return (!start || !end ||\n        this._dateAdapter.compareDate(start, end) <= 0) ?\n        null : {'matStartDateInvalid': {'end': end, 'actual': start}};\n  }\n\n  constructor(\n    @Inject(MAT_DATE_RANGE_INPUT_PARENT) rangeInput: MatDateRangeInputParent<D>,\n    elementRef: ElementRef<HTMLInputElement>,\n    defaultErrorStateMatcher: ErrorStateMatcher,\n    injector: Injector,\n    @Optional() parentForm: NgForm,\n    @Optional() parentFormGroup: FormGroupDirective,\n    @Optional() dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats) {\n\n    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n    // constructor once ViewEngine is removed.\n    super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup,\n        dateAdapter, dateFormats);\n  }\n\n  protected _validator = Validators.compose([...super._getValidators(), this._startValidator]);\n\n  protected _getValueFromModel(modelValue: DateRange<D>) {\n    return modelValue.start;\n  }\n\n  protected _assignValueToModel(value: D | null) {\n    if (this._model) {\n      const range = new DateRange(value, this._model.selection.end);\n      this._model.updateSelection(range, this);\n      this._cvaOnChange(value);\n    }\n  }\n\n  protected _formatValue(value: D | null) {\n    super._formatValue(value);\n\n    // Any time the input value is reformatted we need to tell the parent.\n    this._rangeInput._handleChildValueChange();\n  }\n\n  /** Gets the value that should be used when mirroring the input's size. */\n  getMirrorValue(): string {\n    const element = this._elementRef.nativeElement;\n    const value = element.value;\n    return value.length > 0 ? value : element.placeholder;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n\n/** Input for entering the end date in a `mat-date-range-input`. */\n@Directive({\n  selector: 'input[matEndDate]',\n  host: {\n    'class': 'mat-date-range-input-inner',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(keydown)': '_onKeydown($event)',\n    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n    '(blur)': '_onBlur()',\n    'type': 'text',\n  },\n  providers: [\n    {provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true},\n    {provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true}\n  ]\n})\nexport class MatEndDate<D> extends _MatDateRangeInputBase<D> implements CanUpdateErrorState {\n  /** Validator that checks that the end date isn't before the start date. */\n  private _endValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const end = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const start = this._model ? this._model.selection.start : null;\n    return (!end || !start ||\n        this._dateAdapter.compareDate(end, start) >= 0) ?\n        null : {'matEndDateInvalid': {'start': start, 'actual': end}};\n  }\n\n  constructor(\n    @Inject(MAT_DATE_RANGE_INPUT_PARENT) rangeInput: MatDateRangeInputParent<D>,\n    elementRef: ElementRef<HTMLInputElement>,\n    defaultErrorStateMatcher: ErrorStateMatcher,\n    injector: Injector,\n    @Optional() parentForm: NgForm,\n    @Optional() parentFormGroup: FormGroupDirective,\n    @Optional() dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats) {\n\n    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n    // constructor once ViewEngine is removed.\n    super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup,\n        dateAdapter, dateFormats);\n  }\n\n  protected _validator = Validators.compose([...super._getValidators(), this._endValidator]);\n\n  protected _getValueFromModel(modelValue: DateRange<D>) {\n    return modelValue.end;\n  }\n\n  protected _assignValueToModel(value: D | null) {\n    if (this._model) {\n      const range = new DateRange(this._model.selection.start, value);\n      this._model.updateSelection(range, this);\n      this._cvaOnChange(value);\n    }\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    // If the user is pressing backspace on an empty end input, move focus back to the start.\n    if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n      this._rangeInput._startInput.focus();\n    }\n\n    super._onKeydown(event);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDatepickerBase, MatDatepickerContent, MatDatepickerControl} from './datepicker-base';\nimport {MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, DateRange} from './date-selection-model';\n\n/**\n * Input that can be associated with a date range picker.\n * @docs-private\n */\nexport interface MatDateRangePickerInput<D> extends MatDatepickerControl<D> {\n  comparisonStart: D|null;\n  comparisonEnd: D|null;\n}\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\n@Component({\n  selector: 'mat-date-range-picker',\n  template: '',\n  exportAs: 'matDateRangePicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER]\n})\nexport class MatDateRangePicker<D> extends MatDatepickerBase<MatDateRangePickerInput<D>,\n  DateRange<D>, D> {\n  protected _forwardContentValues(instance: MatDatepickerContent<DateRange<D>, D>) {\n    super._forwardContentValues(instance);\n\n    const input = this._datepickerInput;\n\n    if (input) {\n      instance.comparisonStart = input.comparisonStart;\n      instance.comparisonEnd = input.comparisonEnd;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Optional,\n  OnDestroy,\n  ContentChild,\n  AfterContentInit,\n  ChangeDetectorRef,\n  Self,\n  ElementRef,\n} from '@angular/core';\nimport {MatFormFieldControl, MatFormField} from '@angular/material/form-field';\nimport {ThemePalette, DateAdapter} from '@angular/material/core';\nimport {NgControl, ControlContainer} from '@angular/forms';\nimport {Subject, merge} from 'rxjs';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {\n  MatStartDate,\n  MatEndDate,\n  MatDateRangeInputParent,\n  MAT_DATE_RANGE_INPUT_PARENT,\n} from './date-range-input-parts';\nimport {MatDatepickerControl} from './datepicker-base';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {DateFilterFn} from './datepicker-input-base';\nimport {MatDateRangePicker, MatDateRangePickerInput} from './date-range-picker';\nimport {DateRange, MatDateSelectionModel} from './date-selection-model';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'mat-date-range-input',\n  templateUrl: 'date-range-input.html',\n  styleUrls: ['date-range-input.css'],\n  exportAs: 'matDateRangeInput',\n  host: {\n    'class': 'mat-date-range-input',\n    '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n    '[attr.id]': 'null',\n    'role': 'group',\n    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n    '[attr.aria-describedby]': '_ariaDescribedBy',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {provide: MatFormFieldControl, useExisting: MatDateRangeInput},\n    {provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput},\n  ]\n})\nexport class MatDateRangeInput<D> implements MatFormFieldControl<DateRange<D>>,\n  MatDatepickerControl<D>, MatDateRangeInputParent<D>, MatDateRangePickerInput<D>,\n  AfterContentInit, OnDestroy {\n  /** Current value of the range input. */\n  get value() {\n    return this._model ? this._model.selection : null;\n  }\n\n  /** Emits when the input's state has changed. */\n  stateChanges = new Subject<void>();\n\n  /** Unique ID for the input. */\n  id = `mat-date-range-input-${nextUniqueId++}`;\n\n  /** Whether the control is focused. */\n  focused = false;\n\n  /** Whether the control's label should float. */\n  get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n\n  /** Name of the form control. */\n  controlType = 'mat-date-range-input';\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n   * @docs-private\n   */\n  get placeholder() {\n    const start = this._startInput?._getPlaceholder() || '';\n    const end = this._endInput?._getPlaceholder() || '';\n    return (start || end) ? `${start} ${this.separator} ${end}` : '';\n  }\n\n  /** The range picker that this input is associated with. */\n  @Input()\n  get rangePicker() { return this._rangePicker; }\n  set rangePicker(rangePicker: MatDateRangePicker<D>) {\n    if (rangePicker) {\n      this._model = rangePicker._registerInput(this);\n      this._rangePicker = rangePicker;\n      this._registerModel(this._model!);\n    }\n  }\n  private _rangePicker: MatDateRangePicker<D>;\n\n  /** Whether the input is required. */\n  @Input()\n  get required(): boolean { return !!this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n  private _required: boolean;\n\n  /** Function that can be used to filter out dates within the date range picker. */\n  @Input()\n  get dateFilter() { return this._dateFilter; }\n  set dateFilter(value: DateFilterFn<D>) {\n    this._dateFilter = value;\n    this._revalidate();\n  }\n  private _dateFilter: DateFilterFn<D>;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._revalidate();\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._revalidate();\n  }\n  private _max: D | null;\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return (this._startInput && this._endInput) ?\n      (this._startInput.disabled && this._endInput.disabled) :\n      this._groupDisabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._groupDisabled) {\n      this._groupDisabled = newValue;\n      this._disabledChange.next(this.disabled);\n    }\n  }\n  _groupDisabled = false;\n\n  /** Whether the input is in an error state. */\n  get errorState(): boolean {\n    if (this._startInput && this._endInput) {\n      return this._startInput.errorState || this._endInput.errorState;\n    }\n\n    return false;\n  }\n\n  /** Whether the datepicker input is empty. */\n  get empty(): boolean {\n    const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n    const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n    return startEmpty && endEmpty;\n  }\n\n  /** Value for the `aria-describedby` attribute of the inputs. */\n  _ariaDescribedBy: string | null = null;\n\n  /** Date selection model currently registered with the input. */\n  private _model: MatDateSelectionModel<DateRange<D>> | undefined;\n\n  /** Separator text to be shown between the inputs. */\n  @Input() separator = 'â';\n\n  /** Start of the comparison range that should be shown in the calendar. */\n  @Input() comparisonStart: D | null = null;\n\n  /** End of the comparison range that should be shown in the calendar. */\n  @Input() comparisonEnd: D | null = null;\n\n  @ContentChild(MatStartDate) _startInput: MatStartDate<D>;\n  @ContentChild(MatEndDate) _endInput: MatEndDate<D>;\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * TODO(crisbeto): change type to `AbstractControlDirective` after #18206 lands.\n   * @docs-private\n   */\n  ngControl: NgControl | null;\n\n  /** Emits when the input's disabled state changes. */\n  _disabledChange = new Subject<boolean>();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Self() control: ControlContainer,\n    @Optional() private _dateAdapter: DateAdapter<D>,\n    @Optional() private _formField?: MatFormField) {\n\n    if (!_dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    // TODO(crisbeto): remove `as any` after #18206 lands.\n    this.ngControl = control as any;\n  }\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]): void {\n    this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n  }\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  onContainerClick(): void {\n    if (!this.focused && !this.disabled) {\n      if (!this._model || !this._model.selection.start) {\n        this._startInput.focus();\n      } else {\n        this._endInput.focus();\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    if (!this._startInput) {\n      throw Error('mat-date-range-input must contain a matStartDate input');\n    }\n\n    if (!this._endInput) {\n      throw Error('mat-date-range-input must contain a matEndDate input');\n    }\n\n    if (this._model) {\n      this._registerModel(this._model);\n    }\n\n    // We don't need to unsubscribe from this, because we\n    // know that the input streams will be completed on destroy.\n    merge(this._startInput._disabledChange, this._endInput._disabledChange).subscribe(() => {\n      this._disabledChange.next(this.disabled);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this._disabledChange.unsubscribe();\n  }\n\n  /** Gets the date at which the calendar should start. */\n  getStartValue(): D | null {\n    return this.value ? this.value.start : null;\n  }\n\n  /** Gets the input's theme palette. */\n  getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Gets the element to which the calendar overlay should be attached. */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  /** Gets the value that is used to mirror the state input. */\n  _getInputMirrorValue() {\n    return this._startInput ? this._startInput.getMirrorValue() : '';\n  }\n\n  /** Whether the input placeholders should be hidden. */\n  _shouldHidePlaceholders() {\n    return this._startInput ? !this._startInput.isEmpty() : false;\n  }\n\n  /** Handles the value in one of the child inputs changing. */\n  _handleChildValueChange() {\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Opens the date range picker associated with the input. */\n  _openDatepicker() {\n    if (this._rangePicker) {\n      this._rangePicker.open();\n    }\n  }\n\n  /** Whether the separate text should be hidden. */\n  _shouldHideSeparator() {\n    return (!this._formField || this._formField._hideControlPlaceholder()) && this.empty;\n  }\n\n  /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n  _getAriaLabelledby() {\n    const formField = this._formField;\n    return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Re-runs the validators on the start/end inputs. */\n  private _revalidate() {\n    if (this._startInput) {\n      this._startInput._validatorOnChange();\n    }\n\n    if (this._endInput) {\n      this._endInput._validatorOnChange();\n    }\n  }\n\n  /** Registers the current date selection model with the start/end inputs. */\n  private _registerModel(model: MatDateSelectionModel<DateRange<D>>) {\n    if (this._startInput) {\n      this._startInput._registerModel(model);\n    }\n\n    if (this._endInput) {\n      this._endInput._registerModel(model);\n    }\n  }\n\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {MatCalendar, MatCalendarHeader} from './calendar';\nimport {MatCalendarBody} from './calendar-body';\nimport {MatDatepicker} from './datepicker';\nimport {\n  MatDatepickerContent,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './datepicker-base';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerToggle, MatDatepickerToggleIcon} from './datepicker-toggle';\nimport {MatMonthView} from './month-view';\nimport {MatMultiYearView} from './multi-year-view';\nimport {MatYearView} from './year-view';\nimport {MatDateRangeInput} from './date-range-input';\nimport {MatStartDate, MatEndDate} from './date-range-input-parts';\nimport {MatDateRangePicker} from './date-range-picker';\nimport {\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\n  DefaultMatCalendarRangeStrategy\n} from './date-range-selection-strategy';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n  ],\n  exports: [\n    CdkScrollableModule,\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n    MatDateRangeInput,\n    MatStartDate,\n    MatEndDate,\n    MatDateRangePicker,\n  ],\n  declarations: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n    MatDateRangeInput,\n    MatStartDate,\n    MatEndDate,\n    MatDateRangePicker,\n  ],\n  providers: [\n    MatDatepickerIntl,\n    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    {\n      provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n      useClass: DefaultMatCalendarRangeStrategy\n    }\n  ],\n  entryComponents: [\n    MatDatepickerContent,\n    MatCalendarHeader,\n  ]\n})\nexport class MatDatepickerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './datepicker-module';\nexport * from './calendar';\nexport * from './calendar-body';\nexport * from './datepicker';\nexport * from './date-range-selection-strategy';\nexport * from './datepicker-animations';\nexport {\n  MAT_DATEPICKER_SCROLL_STRATEGY,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  MatDatepickerContent,\n  DatepickerDropdownPositionX,\n  DatepickerDropdownPositionY,\n} from './datepicker-base';\nexport {MatDatepickerInputEvent, DateFilterFn} from './datepicker-input-base';\nexport {\n  MAT_DATEPICKER_VALUE_ACCESSOR,\n  MAT_DATEPICKER_VALIDATORS,\n  MatDatepickerInput,\n} from './datepicker-input';\nexport * from './datepicker-intl';\nexport * from './datepicker-toggle';\nexport * from './month-view';\nexport * from './year-view';\nexport * from './date-range-input';\nexport {MatDateRangePicker} from './date-range-picker';\nexport * from './date-selection-model';\nexport {MatStartDate, MatEndDate} from './date-range-input-parts';\nexport {MatMultiYearView, yearsPerPage, yearsPerRow} from './multi-year-view';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MAT_DATE_RANGE_INPUT_PARENT as Éµangular_material_src_material_datepicker_datepicker_c} from './date-range-input-parts';\nexport {MatDatepickerBase as Éµangular_material_src_material_datepicker_datepicker_a} from './datepicker-base';\nexport {MatDatepickerInputBase as Éµangular_material_src_material_datepicker_datepicker_b} from './datepicker-input-base';","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef, ComponentFactoryResolver} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ScrollStrategy} from '@angular/cdk/overlay';\n\n/** Valid ARIA roles for a dialog element. */\nexport type DialogRole = 'dialog' | 'alertdialog';\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  /** Override for the dialog's top position. */\n  top?: string;\n\n  /** Override for the dialog's bottom position. */\n  bottom?: string;\n\n  /** Override for the dialog's left position. */\n  left?: string;\n\n  /** Override for the dialog's right position. */\n  right?: string;\n}\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nexport class MatDialogConfig<D = any> {\n\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id?: string;\n\n  /** The ARIA role of the dialog element. */\n  role?: DialogRole = 'dialog';\n\n  /** Custom class for the overlay pane. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop?: boolean = true;\n\n  /** Custom class for the backdrop. */\n  backdropClass?: string = '';\n\n  /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n  disableClose?: boolean = false;\n\n  /** Width of the dialog. */\n  width?: string = '';\n\n  /** Height of the dialog. */\n  height?: string = '';\n\n  /** Min-width of the dialog. If a number is provided, assumes pixel units. */\n  minWidth?: number | string;\n\n  /** Min-height of the dialog. If a number is provided, assumes pixel units. */\n  minHeight?: number | string;\n\n  /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n  maxWidth?: number | string = '80vw';\n\n  /** Max-height of the dialog. If a number is provided, assumes pixel units. */\n  maxHeight?: number | string;\n\n  /** Position overrides. */\n  position?: DialogPosition;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** Layout direction for the dialog's content. */\n  direction?: Direction;\n\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy?: string | null = null;\n\n  /** ID of the element that labels the dialog. */\n  ariaLabelledBy?: string | null = null;\n\n  /** Aria label to assign to the dialog element. */\n  ariaLabel?: string | null = null;\n\n  /** Whether the dialog should focus the first focusable element on open. */\n  autoFocus?: boolean = true;\n\n  /**\n   * Whether the dialog should restore focus to the\n   * previously-focused element, after it's closed.\n   */\n  restoreFocus?: boolean = true;\n\n  /** Scroll strategy to be used for the dialog. */\n  scrollStrategy?: ScrollStrategy;\n\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation?: boolean = true;\n\n  /** Alternate `ComponentFactoryResolver` to use when resolving the associated component. */\n  componentFactoryResolver?: ComponentFactoryResolver;\n\n  // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nexport const matDialogAnimations: {\n  readonly dialogContainer: AnimationTriggerMetadata;\n} = {\n  /** Animation that is applied on the dialog container by defalt. */\n  dialogContainer: trigger('dialogContainer', [\n    // Note: The `enter` animation transitions to `transform: none`, because for some reason\n    // specifying the transform explicitly, causes IE both to blur the dialog content and\n    // decimate the animation performance. Leaving it as `none` solves both issues.\n    state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\n    state('enter', style({transform: 'none'})),\n    transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)',\n        style({transform: 'none', opacity: 1}))),\n    transition('* => void, * => exit',\n        animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  Optional,\n  ChangeDetectorRef,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AnimationEvent} from '@angular/animations';\nimport {matDialogAnimations} from './dialog-animations';\nimport {\n  BasePortalOutlet,\n  ComponentPortal,\n  CdkPortalOutlet,\n  TemplatePortal,\n  DomPortal\n} from '@angular/cdk/portal';\nimport {FocusTrap, FocusMonitor, FocusOrigin, FocusTrapFactory} from '@angular/cdk/a11y';\nimport {MatDialogConfig} from './dialog-config';\n\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nexport function throwMatDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\n@Component({\n  selector: 'mat-dialog-container',\n  templateUrl: 'dialog-container.html',\n  styleUrls: ['dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [matDialogAnimations.dialogContainer],\n  host: {\n    'class': 'mat-dialog-container',\n    'tabindex': '-1',\n    'aria-modal': 'true',\n    '[attr.id]': '_id',\n    '[attr.role]': '_config.role',\n    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n    '[attr.aria-label]': '_config.ariaLabel',\n    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n    '[@dialogContainer]': '_state',\n    '(@dialogContainer.start)': '_onAnimationStart($event)',\n    '(@dialogContainer.done)': '_onAnimationDone($event)',\n  },\n})\nexport class MatDialogContainer extends BasePortalOutlet {\n  private _document: Document;\n\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** The class that traps and manages focus within the dialog. */\n  private _focusTrap: FocusTrap;\n\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n\n  /**\n   * Type of interaction that led to the dialog being closed. This is used to determine\n   * whether the focus style will be applied when returning focus to its original location\n   * after the dialog is closed.\n   */\n  _closeInteractionType: FocusOrigin|null = null;\n\n  /** State of the dialog animation. */\n  _state: 'void' | 'enter' | 'exit' = 'enter';\n\n  /** Emits when an animation state changes. */\n  _animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  /** ID of the element that should be considered as the dialog's label. */\n  _ariaLabelledBy: string | null;\n\n  /** ID for the container DOM element. */\n  _id: string;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _focusTrapFactory: FocusTrapFactory,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(DOCUMENT) _document: any,\n    /** The dialog configuration. */\n    public _config: MatDialogConfig,\n    private _focusMonitor?: FocusMonitor) {\n\n    super();\n    this._ariaLabelledBy = _config.ariaLabelledBy || null;\n    this._document = _document;\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalOutlet.hasAttached()) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    this._setupFocusTrap();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalOutlet.hasAttached()) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    this._setupFocusTrap();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /**\n   * Attaches a DOM portal to the dialog container.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    if (this._portalOutlet.hasAttached()) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    this._setupFocusTrap();\n    return this._portalOutlet.attachDomPortal(portal);\n  }\n\n  /** Moves focus back into the dialog if it was moved out. */\n  _recaptureFocus() {\n    if (!this._containsFocus()) {\n      const focusContainer = !this._config.autoFocus || !this._focusTrap.focusInitialElement();\n\n      if (focusContainer) {\n        this._elementRef.nativeElement.focus();\n      }\n    }\n  }\n\n  /** Moves the focus inside the focus trap. */\n  private _trapFocus() {\n    // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    if (this._config.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    } else if (!this._containsFocus()) {\n      // Otherwise ensure that focus is on the dialog container. It's possible that a different\n      // component tried to move focus while the open animation was running. See:\n      // https://github.com/angular/components/issues/16215. Note that we only want to do this\n      // if the focus isn't inside the dialog already, because it's possible that the consumer\n      // turned off `autoFocus` in order to move focus themselves.\n      this._elementRef.nativeElement.focus();\n    }\n  }\n\n  /** Restores focus to the element that was focused before the dialog opened. */\n  private _restoreFocus() {\n    const previousElement = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this._config.restoreFocus && previousElement &&\n        typeof previousElement.focus === 'function') {\n      const activeElement = this._document.activeElement;\n      const element = this._elementRef.nativeElement;\n\n      // Make sure that focus is still inside the dialog or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n      if (!activeElement || activeElement === this._document.body || activeElement === element ||\n          element.contains(activeElement)) {\n        if (this._focusMonitor) {\n          this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n          this._closeInteractionType = null;\n        } else {\n          previousElement.focus();\n        }\n      }\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n\n  /**\n   * Sets up the focus trand and saves a reference to the\n   * element that was focused before the dialog was opened.\n   */\n  private _setupFocusTrap() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\n\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the dialog immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n\n  /** Returns whether focus is inside the dialog. */\n  private _containsFocus() {\n    const element = this._elementRef.nativeElement;\n    const activeElement = this._document.activeElement;\n    return element === activeElement || element.contains(activeElement);\n  }\n\n  /** Callback, invoked whenever an animation on the host completes. */\n  _onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else if (event.toState === 'exit') {\n      this._restoreFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n  }\n\n  /** Callback, invoked when an animation on the host starts. */\n  _onAnimationStart(event: AnimationEvent) {\n    this._animationStateChanged.emit(event);\n  }\n\n  /** Starts the dialog exit animation. */\n  _startExitAnimation(): void {\n    this._state = 'exit';\n\n    // Mark the container for check so it can react if the\n    // view container is using OnPush change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusOrigin} from '@angular/cdk/a11y';\nimport {ESCAPE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {GlobalPositionStrategy, OverlayRef} from '@angular/cdk/overlay';\nimport {Observable, Subject} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {DialogPosition} from './dialog-config';\nimport {MatDialogContainer} from './dialog-container';\n\n\n// TODO(jelbourn): resizing\n\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n\n/** Possible states of the lifecycle of a dialog. */\nexport const enum MatDialogState {OPEN, CLOSING, CLOSED}\n\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nexport class MatDialogRef<T, R = any> {\n  /** The instance of component opened into the dialog. */\n  componentInstance: T;\n\n  /** Whether the user is allowed to close the dialog. */\n  disableClose: boolean | undefined = this._containerInstance._config.disableClose;\n\n  /** Subject for notifying the user that the dialog has finished opening. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the dialog has finished closing. */\n  private readonly _afterClosed = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the dialog has started closing. */\n  private readonly _beforeClosed = new Subject<R | undefined>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  /** Handle to the timeout that's running as a fallback in case the exit animation doesn't fire. */\n  private _closeFallbackTimeout: number;\n\n  /** Current state of the dialog. */\n  private _state = MatDialogState.OPEN;\n\n  constructor(\n    private _overlayRef: OverlayRef,\n    public _containerInstance: MatDialogContainer,\n    readonly id: string = `mat-dialog-${uniqueId++}`) {\n\n    // Pass the id along to the container.\n    _containerInstance._id = id;\n\n    // Emit when opening animation completes\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'enter'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n\n    // Dispose overlay when closing animation is complete\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'exit'),\n      take(1)\n    ).subscribe(() => {\n      clearTimeout(this._closeFallbackTimeout);\n      this._finishDialogClose();\n    });\n\n    _overlayRef.detachments().subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._afterClosed.next(this._result);\n      this._afterClosed.complete();\n      this.componentInstance = null!;\n      this._overlayRef.dispose();\n    });\n\n    _overlayRef.keydownEvents()\n      .pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }))\n      .subscribe(event => {\n        event.preventDefault();\n        _closeDialogVia(this, 'keyboard');\n      });\n\n    _overlayRef.backdropClick().subscribe(() => {\n      if (this.disableClose) {\n        this._containerInstance._recaptureFocus();\n      } else {\n        _closeDialogVia(this, 'mouse');\n      }\n    });\n  }\n\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult?: R): void {\n    this._result = dialogResult;\n\n    // Transition the backdrop in parallel to the dialog.\n    this._containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'start'),\n      take(1)\n    )\n    .subscribe(event => {\n      this._beforeClosed.next(dialogResult);\n      this._beforeClosed.complete();\n      this._overlayRef.detachBackdrop();\n\n      // The logic that disposes of the overlay depends on the exit animation completing, however\n      // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n      // timeout which will clean everything up if the animation hasn't fired within the specified\n      // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n      // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n      this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(),\n          event.totalTime + 100);\n    });\n\n    this._containerInstance._startExitAnimation();\n    this._state = MatDialogState.CLOSING;\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened(): Observable<void> {\n    return this._afterOpened.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed(): Observable<R | undefined> {\n    return this._afterClosed.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed(): Observable<R | undefined> {\n    return this._beforeClosed.asObservable();\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    return this._overlayRef.backdropClick();\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._overlayRef.keydownEvents();\n  }\n\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position?: DialogPosition): this {\n    let strategy = this._getPositionStrategy();\n\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n\n    this._overlayRef.updatePosition();\n\n    return this;\n  }\n\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width: string = '', height: string = ''): this {\n    this._getPositionStrategy().width(width).height(height);\n    this._overlayRef.updatePosition();\n    return this;\n  }\n\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): this {\n    this._overlayRef.addPanelClass(classes);\n    return this;\n  }\n\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): this {\n    this._overlayRef.removePanelClass(classes);\n    return this;\n  }\n\n  /** Gets the current state of the dialog's lifecycle. */\n  getState(): MatDialogState {\n    return this._state;\n  }\n\n  /**\n   * Finishes the dialog close by updating the state of the dialog\n   * and disposing the overlay.\n   */\n  private _finishDialogClose() {\n    this._state = MatDialogState.CLOSED;\n    this._overlayRef.dispose();\n  }\n\n  /** Fetches the position strategy object from the overlay ref. */\n  private _getPositionStrategy(): GlobalPositionStrategy {\n    return this._overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\n  }\n}\n\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nexport function _closeDialogVia<R>(ref: MatDialogRef<R>, interactionType: FocusOrigin, result?: R) {\n  // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n  // For those, we keep the behavior as is and do not deal with the interaction type.\n  if (ref._containerInstance !== undefined) {\n    ref._containerInstance._closeInteractionType = interactionType;\n  }\n  return ref.close(result);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayContainer,\n  OverlayRef,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, TemplatePortal} from '@angular/cdk/portal';\nimport {Location} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n  StaticProvider,\n} from '@angular/core';\nimport {defer, Observable, of as observableOf, Subject} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {MatDialogConfig} from './dialog-config';\nimport {MatDialogContainer} from './dialog-container';\nimport {MatDialogRef} from './dialog-ref';\n\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nexport const MAT_DIALOG_DATA = new InjectionToken<any>('MatDialogData');\n\n/** Injection token that can be used to specify default dialog options. */\nexport const MAT_DIALOG_DEFAULT_OPTIONS =\n    new InjectionToken<MatDialogConfig>('mat-dialog-default-options');\n\n/** Injection token that determines the scroll handling while the dialog is open. */\nexport const MAT_DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-dialog-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n  () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n\n/**\n * Service to open Material Design modal dialogs.\n */\n@Injectable()\nexport class MatDialog implements OnDestroy {\n  private _openDialogsAtThisLevel: MatDialogRef<any>[] = [];\n  private readonly _afterAllClosedAtThisLevel = new Subject<void>();\n  private readonly _afterOpenedAtThisLevel = new Subject<MatDialogRef<any>>();\n  private _ariaHiddenElements = new Map<Element, string|null>();\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs(): MatDialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened(): Subject<MatDialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n\n  get _afterAllClosed(): Subject<void> {\n    const parent = this._parentDialog;\n    return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n  }\n\n  // TODO (jelbourn): tighten the typing right-hand side of this expression.\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  readonly afterAllClosed: Observable<void> = defer(() => this.openDialogs.length ?\n      this._afterAllClosed :\n      this._afterAllClosed.pipe(startWith(undefined))) as Observable<any>;\n\n  constructor(\n      private _overlay: Overlay,\n      private _injector: Injector,\n      /**\n       * @deprecated `_location` parameter to be removed.\n       * @breaking-change 10.0.0\n       */\n      @Optional() _location: Location,\n      @Optional() @Inject(MAT_DIALOG_DEFAULT_OPTIONS) private _defaultOptions: MatDialogConfig,\n      @Inject(MAT_DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n      @Optional() @SkipSelf() private _parentDialog: MatDialog,\n      private _overlayContainer: OverlayContainer) {\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param componentOrTemplateRef Type of the component to load into the dialog,\n   *     or a TemplateRef to instantiate as the dialog content.\n   * @param config Extra configuration options.\n   * @returns Reference to the newly-opened dialog.\n   */\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n          config?: MatDialogConfig<D>): MatDialogRef<T, R> {\n\n    config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n\n    if (config.id && this.getDialogById(config.id)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const overlayRef = this._createOverlay(config);\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\n    const dialogRef = this._attachDialogContent<T, R>(componentOrTemplateRef,\n                                                      dialogContainer,\n                                                      overlayRef,\n                                                      config);\n\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\n    if (!this.openDialogs.length) {\n      this._hideNonDialogContentFromAssistiveTechnology();\n    }\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n    this.afterOpened.next(dialogRef);\n\n    return dialogRef;\n  }\n\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll(): void {\n    this._closeDialogs(this.openDialogs);\n  }\n\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id: string): MatDialogRef<any> | undefined {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n\n  /**\n   * Creates the overlay into which the dialog will be loaded.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the OverlayRef for the created overlay.\n   */\n  private _createOverlay(config: MatDialogConfig): OverlayRef {\n    const overlayConfig = this._getOverlayConfig(config);\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param dialogConfig The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  private _getOverlayConfig(dialogConfig: MatDialogConfig): OverlayConfig {\n    const state = new OverlayConfig({\n      positionStrategy: this._overlay.position().global(),\n      scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n      panelClass: dialogConfig.panelClass,\n      hasBackdrop: dialogConfig.hasBackdrop,\n      direction: dialogConfig.direction,\n      minWidth: dialogConfig.minWidth,\n      minHeight: dialogConfig.minHeight,\n      maxWidth: dialogConfig.maxWidth,\n      maxHeight: dialogConfig.maxHeight,\n      disposeOnNavigation: dialogConfig.closeOnNavigation\n    });\n\n    if (dialogConfig.backdropClass) {\n      state.backdropClass = dialogConfig.backdropClass;\n    }\n\n    return state;\n  }\n\n  /**\n   * Attaches an MatDialogContainer to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  private _attachDialogContainer(overlay: OverlayRef, config: MatDialogConfig): MatDialogContainer {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = Injector.create({\n      parent: userInjector || this._injector,\n      providers: [{provide: MatDialogConfig, useValue: config}]\n    });\n\n    const containerPortal = new ComponentPortal(MatDialogContainer,\n        config.viewContainerRef, injector, config.componentFactoryResolver);\n    const containerRef = overlay.attach<MatDialogContainer>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  /**\n   * Attaches the user-provided component to the already-created MatDialogContainer.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogContainer Reference to the wrapping MatDialogContainer.\n   * @param overlayRef Reference to the overlay in which the dialog resides.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n   */\n  private _attachDialogContent<T, R>(\n      componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n      dialogContainer: MatDialogContainer,\n      overlayRef: OverlayRef,\n      config: MatDialogConfig): MatDialogRef<T, R> {\n\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const dialogRef =\n        new MatDialogRef<T, R>(overlayRef, dialogContainer, config.id);\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      dialogContainer.attachTemplatePortal(\n        new TemplatePortal<T>(componentOrTemplateRef, null!,\n          <any>{$implicit: config.data, dialogRef}));\n    } else {\n      const injector = this._createInjector<T>(config, dialogRef, dialogContainer);\n      const contentRef = dialogContainer.attachComponentPortal<T>(\n          new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    dialogRef\n      .updateSize(config.width, config.height)\n      .updatePosition(config.position);\n\n    return dialogRef;\n  }\n\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog.\n   * @param container Dialog container element that wraps all of the contents.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  private _createInjector<T>(\n      config: MatDialogConfig,\n      dialogRef: MatDialogRef<T>,\n      dialogContainer: MatDialogContainer): Injector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n    // content are created out of the same ViewContainerRef and as such, are siblings for injector\n    // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n    // added to the injection tokens.\n    const providers: StaticProvider[] = [\n      {provide: MatDialogContainer, useValue: dialogContainer},\n      {provide: MAT_DIALOG_DATA, useValue: config.data},\n      {provide: MatDialogRef, useValue: dialogRef}\n    ];\n\n    if (config.direction &&\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n      providers.push({\n        provide: Directionality,\n        useValue: {value: config.direction, change: observableOf()}\n      });\n    }\n\n    return Injector.create({parent: userInjector || this._injector, providers});\n  }\n\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   */\n  private _removeOpenDialog(dialogRef: MatDialogRef<any>) {\n    const index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n\n        this._ariaHiddenElements.clear();\n        this._afterAllClosed.next();\n      }\n    }\n  }\n\n  /**\n   * Hides all of the content that isn't an overlay from assistive technology.\n   */\n  private _hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this._overlayContainer.getContainerElement();\n\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n\n      for (let i = siblings.length - 1; i > -1; i--) {\n        let sibling = siblings[i];\n\n        if (sibling !== overlayContainer &&\n          sibling.nodeName !== 'SCRIPT' &&\n          sibling.nodeName !== 'STYLE' &&\n          !sibling.hasAttribute('aria-live')) {\n\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n\n  /** Closes all of the dialogs in an array. */\n  private _closeDialogs(dialogs: MatDialogRef<any>[]) {\n    let i = dialogs.length;\n\n    while (i--) {\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\n      // runs on the next microtask, in addition to modifying the array as we're going\n      // through it. We loop through all of them and call close without assuming that\n      // they'll be removed from the list instantaneously.\n      dialogs[i].close();\n    }\n  }\n\n}\n\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(\n    config?: MatDialogConfig, defaultOptions?: MatDialogConfig): MatDialogConfig {\n  return {...defaultOptions, ...config};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ElementRef,\n} from '@angular/core';\nimport {MatDialog} from './dialog';\nimport {_closeDialogVia, MatDialogRef} from './dialog-ref';\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n\n/**\n * Button that will close the current dialog.\n */\n@Directive({\n  selector: '[mat-dialog-close], [matDialogClose]',\n  exportAs: 'matDialogClose',\n  host: {\n    '(click)': '_onButtonClick($event)',\n    '[attr.aria-label]': 'ariaLabel || null',\n    '[attr.type]': 'type',\n  }\n})\nexport class MatDialogClose implements OnInit, OnChanges {\n  /** Screenreader label for the button. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** Default to \"button\" to prevents accidental form submits. */\n  @Input() type: 'submit' | 'button' | 'reset' = 'button';\n\n  /** Dialog close input. */\n  @Input('mat-dialog-close') dialogResult: any;\n\n  @Input('matDialogClose') _matDialogClose: any;\n\n  constructor(\n    @Optional() public dialogRef: MatDialogRef<any>,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialog: MatDialog) {}\n\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n\n  _onButtonClick(event: MouseEvent) {\n    // Determinate the focus origin using the click event, because using the FocusMonitor will\n    // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n    // dialog, and therefore clicking the button won't result in a focus change. This means that\n    // the FocusMonitor won't detect any origin change, and will always output `program`.\n    _closeDialogVia(this.dialogRef,\n        event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n  }\n}\n\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\n@Directive({\n  selector: '[mat-dialog-title], [matDialogTitle]',\n  exportAs: 'matDialogTitle',\n  host: {\n    'class': 'mat-dialog-title',\n    '[id]': 'id',\n  },\n})\nexport class MatDialogTitle implements OnInit {\n  @Input() id: string = `mat-dialog-title-${dialogElementUid++}`;\n\n  constructor(\n    @Optional() private _dialogRef: MatDialogRef<any>,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialog: MatDialog) {}\n\n  ngOnInit() {\n    if (!this._dialogRef) {\n      this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n\n    if (this._dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this._dialogRef._containerInstance;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n\n\n/**\n * Scrollable content container of a dialog.\n */\n@Directive({\n  selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n  host: {'class': 'mat-dialog-content'}\n})\nexport class MatDialogContent {}\n\n\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\n@Directive({\n  selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n  host: {'class': 'mat-dialog-actions'}\n})\nexport class MatDialogActions {}\n\n\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element: ElementRef<HTMLElement>, openDialogs: MatDialogRef<any>[]) {\n  let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n  while (parent && !parent.classList.contains('mat-dialog-container')) {\n    parent = parent.parentElement;\n  }\n\n  return parent ? openDialogs.find(dialog => dialog.id === parent!.id) : null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MatDialog} from './dialog';\nimport {MatDialogContainer} from './dialog-container';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n} from './dialog-content-directives';\n\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    PortalModule,\n    MatCommonModule,\n  ],\n  exports: [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n  ],\n  providers: [\n    MatDialog,\n    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n  ],\n  entryComponents: [MatDialogContainer],\n})\nexport class MatDialogModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './dialog-module';\nexport * from './dialog';\nexport * from './dialog-container';\nexport * from './dialog-content-directives';\nexport * from './dialog-config';\nexport * from './dialog-ref';\nexport * from './dialog-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {CdkAccordion} from '@angular/cdk/accordion';\n\n/** MatAccordion's display modes. */\nexport type MatAccordionDisplayMode = 'default' | 'flat';\n\n/** MatAccordion's toggle positions. */\nexport type MatAccordionTogglePosition = 'before' | 'after';\n\n/**\n * Base interface for a `MatAccordion`.\n * @docs-private\n */\nexport interface MatAccordionBase extends CdkAccordion {\n  /** Whether the expansion indicator should be hidden. */\n  hideToggle: boolean;\n\n  /** Display mode used for all expansion panels in the accordion. */\n  displayMode: MatAccordionDisplayMode;\n\n  /** The position of the expansion indicator. */\n  togglePosition: MatAccordionTogglePosition;\n\n  /** Handles keyboard events coming in from the panel headers. */\n  _handleHeaderKeydown: (event: KeyboardEvent) => void;\n\n  /** Handles focus events on the panel headers. */\n  _handleHeaderFocus: (header: any) => void;\n}\n\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nexport const MAT_ACCORDION = new InjectionToken<MatAccordionBase>('MAT_ACCORDION');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nexport const matExpansionAnimations: {\n  readonly indicatorRotate: AnimationTriggerMetadata;\n  readonly bodyExpansion: AnimationTriggerMetadata;\n} = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [\n    state('collapsed, void', style({transform: 'rotate(0deg)'})),\n    state('expanded', style({transform: 'rotate(180deg)'})),\n    transition('expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ]),\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [\n    state('collapsed, void', style({height: '0px', visibility: 'hidden'})),\n    state('expanded', style({height: '*', visibility: 'visible'})),\n    transition('expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n@Directive({\n  selector: 'ng-template[matExpansionPanelContent]'\n})\nexport class MatExpansionPanelContent {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEvent} from '@angular/animations';\nimport {CdkAccordionItem} from '@angular/cdk/accordion';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  ElementRef,\n  Input,\n  Inject,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf,\n  ViewContainerRef,\n  ViewEncapsulation,\n  ViewChild,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {Subject} from 'rxjs';\nimport {filter, startWith, take, distinctUntilChanged} from 'rxjs/operators';\nimport {matExpansionAnimations} from './expansion-animations';\nimport {MatExpansionPanelContent} from './expansion-panel-content';\nimport {MAT_ACCORDION, MatAccordionBase, MatAccordionTogglePosition} from './accordion-base';\n\n/** MatExpansionPanel's states. */\nexport type MatExpansionPanelState = 'expanded' | 'collapsed';\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n */\nexport interface MatExpansionPanelDefaultOptions {\n  /** Height of the header while the panel is expanded. */\n  expandedHeight: string;\n\n  /** Height of the header while the panel is collapsed. */\n  collapsedHeight: string;\n\n  /** Whether the toggle indicator should be hidden. */\n  hideToggle: boolean;\n}\n\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nexport const MAT_EXPANSION_PANEL_DEFAULT_OPTIONS =\n    new InjectionToken<MatExpansionPanelDefaultOptions>('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\n@Component({\n  styleUrls: ['./expansion-panel.css'],\n  selector: 'mat-expansion-panel',\n  exportAs: 'matExpansionPanel',\n  templateUrl: './expansion-panel.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled', 'expanded'],\n  outputs: ['opened', 'closed', 'expandedChange'],\n  animations: [matExpansionAnimations.bodyExpansion],\n  providers: [\n    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n    // to the same accordion.\n    {provide: MAT_ACCORDION, useValue: undefined},\n  ],\n  host: {\n    'class': 'mat-expansion-panel',\n    '[class.mat-expanded]': 'expanded',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n  }\n})\nexport class MatExpansionPanel extends CdkAccordionItem implements AfterContentInit, OnChanges,\n  OnDestroy {\n  private _document: Document;\n  private _hideToggle = false;\n  private _togglePosition: MatAccordionTogglePosition;\n\n  /** Whether the toggle indicator should be hidden. */\n  @Input()\n  get hideToggle(): boolean {\n    return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n  }\n  set hideToggle(value: boolean) {\n    this._hideToggle = coerceBooleanProperty(value);\n  }\n\n  /** The position of the expansion indicator. */\n  @Input()\n  get togglePosition(): MatAccordionTogglePosition {\n    return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n  }\n  set togglePosition(value: MatAccordionTogglePosition) {\n    this._togglePosition = value;\n  }\n\n  /** An event emitted after the body's expansion animation happens. */\n  @Output() afterExpand = new EventEmitter<void>();\n\n  /** An event emitted after the body's collapse animation happens. */\n  @Output() afterCollapse = new EventEmitter<void>();\n\n  /** Stream that emits for changes in `@Input` properties. */\n  readonly _inputChanges = new Subject<SimpleChanges>();\n\n  /** Optionally defined accordion the expansion panel belongs to. */\n  accordion: MatAccordionBase;\n\n  /** Content that will be rendered lazily. */\n  @ContentChild(MatExpansionPanelContent) _lazyContent: MatExpansionPanelContent;\n\n  /** Element containing the panel's user-provided content. */\n  @ViewChild('body') _body: ElementRef<HTMLElement>;\n\n  /** Portal holding the user's content. */\n  _portal: TemplatePortal;\n\n  /** ID for the associated header element. Used for a11y labelling. */\n  _headerId = `mat-expansion-panel-header-${uniqueId++}`;\n\n  /** Stream of body animation done events. */\n  _bodyAnimationDone = new Subject<AnimationEvent>();\n\n  constructor(@Optional() @SkipSelf() @Inject(MAT_ACCORDION) accordion: MatAccordionBase,\n              _changeDetectorRef: ChangeDetectorRef,\n              _uniqueSelectionDispatcher: UniqueSelectionDispatcher,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(DOCUMENT) _document: any,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode: string,\n              @Inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS) @Optional()\n                  defaultOptions?: MatExpansionPanelDefaultOptions) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this.accordion = accordion;\n    this._document = _document;\n\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      if (event.fromState !== 'void') {\n        if (event.toState === 'expanded') {\n          this.afterExpand.emit();\n        } else if (event.toState === 'collapsed') {\n          this.afterCollapse.emit();\n        }\n      }\n    });\n\n    if (defaultOptions) {\n      this.hideToggle = defaultOptions.hideToggle;\n    }\n  }\n\n  /** Determines whether the expansion panel should have spacing between it and its siblings. */\n  _hasSpacing(): boolean {\n    if (this.accordion) {\n      return this.expanded && this.accordion.displayMode === 'default';\n    }\n    return false;\n  }\n\n  /** Gets the expanded state string. */\n  _getExpandedState(): MatExpansionPanelState {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n\n  /** Toggles the expanded state of the expansion panel. */\n  toggle(): void {\n    this.expanded = !this.expanded;\n  }\n\n  /** Sets the expanded state of the expansion panel to false. */\n  close(): void {\n    this.expanded = false;\n  }\n\n  /** Sets the expanded state of the expansion panel to true. */\n  open(): void {\n    this.expanded = true;\n  }\n\n  ngAfterContentInit() {\n    if (this._lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(\n        startWith(null!),\n        filter(() => this.expanded && !this._portal),\n        take(1)\n      ).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._inputChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._bodyAnimationDone.complete();\n    this._inputChanges.complete();\n  }\n\n  /** Checks whether the expansion panel's content contains the currently-focused element. */\n  _containsFocus(): boolean {\n    if (this._body) {\n      const focusedElement = this._document.activeElement;\n      const bodyElement = this._body.nativeElement;\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n    }\n\n    return false;\n  }\n\n  static ngAcceptInputType_hideToggle: BooleanInput;\n  static ngAcceptInputType_expanded: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n@Directive({\n  selector: 'mat-action-row',\n  host: {\n    class: 'mat-action-row'\n  }\n})\nexport class MatExpansionPanelActionRow {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusableOption, FocusOrigin} from '@angular/cdk/a11y';\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Host,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  AfterViewInit,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {merge, Subscription, EMPTY} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {matExpansionAnimations} from './expansion-animations';\nimport {\n  MatExpansionPanel,\n  MatExpansionPanelDefaultOptions,\n  MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,\n} from './expansion-panel';\nimport {MatAccordionTogglePosition} from './accordion-base';\n\n\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\n@Component({\n  selector: 'mat-expansion-panel-header',\n  styleUrls: ['./expansion-panel-header.css'],\n  templateUrl: './expansion-panel-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    matExpansionAnimations.indicatorRotate,\n  ],\n  host: {\n    'class': 'mat-expansion-panel-header mat-focus-indicator',\n    'role': 'button',\n    '[attr.id]': 'panel._headerId',\n    '[attr.tabindex]': 'disabled ? -1 : 0',\n    '[attr.aria-controls]': '_getPanelId()',\n    '[attr.aria-expanded]': '_isExpanded()',\n    '[attr.aria-disabled]': 'panel.disabled',\n    '[class.mat-expanded]': '_isExpanded()',\n    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    '[style.height]': '_getHeaderHeight()',\n    '(click)': '_toggle()',\n    '(keydown)': '_keydown($event)',\n  },\n})\nexport class MatExpansionPanelHeader implements AfterViewInit, OnDestroy, FocusableOption {\n  private _parentChangeSubscription = Subscription.EMPTY;\n\n  constructor(\n      @Host() public panel: MatExpansionPanel,\n      private _element: ElementRef,\n      private _focusMonitor: FocusMonitor,\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS) @Optional()\n          defaultOptions?: MatExpansionPanelDefaultOptions,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    const accordionHideToggleChange = panel.accordion ?\n        panel.accordion._stateChanges.pipe(\n            filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n        EMPTY;\n\n    // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n    this._parentChangeSubscription =\n        merge(\n            panel.opened, panel.closed, accordionHideToggleChange,\n            panel._inputChanges.pipe(filter(\n                changes => {\n                  return !!(\n                    changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n                  })))\n    .subscribe(() => this._changeDetectorRef.markForCheck());\n\n    // Avoids focus being lost if the panel contained the focused element and was closed.\n    panel.closed\n      .pipe(filter(() => panel._containsFocus()))\n      .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n\n    if (defaultOptions) {\n      this.expandedHeight = defaultOptions.expandedHeight;\n      this.collapsedHeight = defaultOptions.collapsedHeight;\n    }\n  }\n\n  /** Height of the header while the panel is expanded. */\n  @Input() expandedHeight: string;\n\n  /** Height of the header while the panel is collapsed. */\n  @Input() collapsedHeight: string;\n\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * @docs-private\n   */\n  get disabled() {\n    return this.panel.disabled;\n  }\n\n  /** Toggles the expanded state of the panel. */\n  _toggle(): void {\n    if (!this.disabled) {\n      this.panel.toggle();\n    }\n  }\n\n  /** Gets whether the panel is expanded. */\n  _isExpanded(): boolean {\n    return this.panel.expanded;\n  }\n\n  /** Gets the expanded state string of the panel. */\n  _getExpandedState(): string {\n    return this.panel._getExpandedState();\n  }\n\n  /** Gets the panel id. */\n  _getPanelId(): string {\n    return this.panel.id;\n  }\n\n  /** Gets the toggle position for the header. */\n  _getTogglePosition(): MatAccordionTogglePosition {\n    return this.panel.togglePosition;\n  }\n\n  /** Gets whether the expand indicator should be shown. */\n  _showToggle(): boolean {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n\n  /**\n   * Gets the current height of the header. Null if no custom height has been\n   * specified, and if the default height from the stylesheet should be used.\n   */\n  _getHeaderHeight(): string|null {\n    const isExpanded = this._isExpanded();\n    if (isExpanded && this.expandedHeight) {\n      return this.expandedHeight;\n    } else if (!isExpanded && this.collapsedHeight) {\n      return this.collapsedHeight;\n    }\n    return null;\n  }\n\n  /** Handle keydown event calling to toggle() if appropriate. */\n  _keydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this._toggle();\n        }\n\n        break;\n      default:\n        if (this.panel.accordion) {\n          this.panel.accordion._handleHeaderKeydown(event);\n        }\n\n        return;\n    }\n  }\n\n  /**\n   * Focuses the panel header. Implemented as a part of `FocusableOption`.\n   * @param origin Origin of the action that triggered the focus.\n   * @docs-private\n   */\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions) {\n    this._focusMonitor.focusVia(this._element, origin, options);\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._element).subscribe(origin => {\n      if (origin && this.panel.accordion) {\n        this.panel.accordion._handleHeaderFocus(this);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._element);\n  }\n}\n\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n@Directive({\n  selector: 'mat-panel-description',\n  host: {\n    class: 'mat-expansion-panel-header-description'\n  }\n})\nexport class MatExpansionPanelDescription {}\n\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n@Directive({\n  selector: 'mat-panel-title',\n  host: {\n    class: 'mat-expansion-panel-header-title'\n  }\n})\nexport class MatExpansionPanelTitle {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, ContentChildren, QueryList, AfterContentInit} from '@angular/core';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CdkAccordion} from '@angular/cdk/accordion';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {HOME, END, hasModifierKey} from '@angular/cdk/keycodes';\nimport {startWith} from 'rxjs/operators';\nimport {\n  MAT_ACCORDION,\n  MatAccordionBase,\n  MatAccordionDisplayMode,\n  MatAccordionTogglePosition\n} from './accordion-base';\nimport {MatExpansionPanelHeader} from './expansion-panel-header';\n\n/**\n * Directive for a Material Design Accordion.\n */\n@Directive({\n  selector: 'mat-accordion',\n  exportAs: 'matAccordion',\n  inputs: ['multi'],\n  providers: [{\n    provide: MAT_ACCORDION,\n    useExisting: MatAccordion\n  }],\n  host: {\n    class: 'mat-accordion',\n    // Class binding which is only used by the test harness as there is no other\n    // way for the harness to detect if multiple panel support is enabled.\n    '[class.mat-accordion-multi]': 'this.multi',\n  }\n})\nexport class MatAccordion extends CdkAccordion implements MatAccordionBase, AfterContentInit {\n  private _keyManager: FocusKeyManager<MatExpansionPanelHeader>;\n\n  /** Headers belonging to this accordion. */\n  private _ownHeaders = new QueryList<MatExpansionPanelHeader>();\n\n  /** All headers inside the accordion. Includes headers inside nested accordions. */\n  @ContentChildren(MatExpansionPanelHeader, {descendants: true})\n  _headers: QueryList<MatExpansionPanelHeader>;\n\n  /** Whether the expansion indicator should be hidden. */\n  @Input()\n  get hideToggle(): boolean { return this._hideToggle; }\n  set hideToggle(show: boolean) { this._hideToggle = coerceBooleanProperty(show); }\n  private _hideToggle: boolean = false;\n\n  /**\n   * Display mode used for all expansion panels in the accordion. Currently two display\n   * modes exist:\n   *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n   *     panel at a different elevation from the rest of the accordion.\n   *  flat - no spacing is placed around expanded panels, showing all panels at the same\n   *     elevation.\n   */\n  @Input() displayMode: MatAccordionDisplayMode = 'default';\n\n  /** The position of the expansion indicator. */\n  @Input() togglePosition: MatAccordionTogglePosition = 'after';\n\n  ngAfterContentInit() {\n    this._headers.changes\n      .pipe(startWith(this._headers))\n      .subscribe((headers: QueryList<MatExpansionPanelHeader>) => {\n        this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n        this._ownHeaders.notifyOnChanges();\n      });\n\n    this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap();\n  }\n\n  /** Handles keyboard events coming in from the panel headers. */\n  _handleHeaderKeydown(event: KeyboardEvent) {\n    const {keyCode} = event;\n    const manager = this._keyManager;\n\n    if (keyCode === HOME) {\n      if (!hasModifierKey(event)) {\n        manager.setFirstItemActive();\n        event.preventDefault();\n      }\n    } else if (keyCode === END) {\n      if (!hasModifierKey(event)) {\n        manager.setLastItemActive();\n        event.preventDefault();\n      }\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  _handleHeaderFocus(header: MatExpansionPanelHeader) {\n    this._keyManager.updateActiveItem(header);\n  }\n\n  static ngAcceptInputType_hideToggle: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatAccordion} from './accordion';\nimport {MatExpansionPanel, MatExpansionPanelActionRow} from './expansion-panel';\nimport {MatExpansionPanelContent} from './expansion-panel-content';\nimport {\n  MatExpansionPanelDescription,\n  MatExpansionPanelHeader,\n  MatExpansionPanelTitle,\n} from './expansion-panel-header';\n\n\n@NgModule({\n  imports: [CommonModule, CdkAccordionModule, PortalModule],\n  exports: [\n    MatAccordion,\n    MatExpansionPanel,\n    MatExpansionPanelActionRow,\n    MatExpansionPanelHeader,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatExpansionPanelContent,\n  ],\n  declarations: [\n    MatAccordion,\n    MatExpansionPanel,\n    MatExpansionPanelActionRow,\n    MatExpansionPanelHeader,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatExpansionPanelContent,\n  ],\n})\nexport class MatExpansionModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './expansion-module';\nexport * from './accordion';\nexport * from './accordion-base';\nexport * from './expansion-panel';\nexport * from './expansion-panel-header';\nexport * from './expansion-panel-content';\nexport * from './expansion-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n\n/** Default `mat-slide-toggle` options that can be overridden. */\nexport interface MatSlideToggleDefaultOptions {\n  /** Whether toggle action triggers value changes in slide toggle. */\n  disableToggleValue?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nexport const MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS =\n  new InjectionToken<MatSlideToggleDefaultOptions>('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({disableToggleValue: false})\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor, CanColorCtor,\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {\n  MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,\n  MatSlideToggleDefaultOptions\n} from './slide-toggle-config';\n\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n\n/** @docs-private */\nexport const MAT_SLIDE_TOGGLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlideToggle),\n  multi: true\n};\n\n/** Change event object emitted by a MatSlideToggle. */\nexport class MatSlideToggleChange {\n  constructor(\n    /** The source MatSlideToggle of the event. */\n    public source: MatSlideToggle,\n    /** The new `checked` value of the MatSlideToggle. */\n    public checked: boolean) { }\n}\n\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatSlideToggleMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableRippleCtor &\n    CanDisableCtor &\n    typeof MatSlideToggleBase =\n        mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\n@Component({\n  selector: 'mat-slide-toggle',\n  exportAs: 'matSlideToggle',\n  host: {\n    'class': 'mat-slide-toggle',\n    '[id]': 'id',\n    // Needs to be `-1` so it can still receive programmatic focus.\n    '[attr.tabindex]': 'disabled ? null : -1',\n    '[attr.aria-label]': 'null',\n    '[attr.aria-labelledby]': 'null',\n    '[class.mat-checked]': 'checked',\n    '[class.mat-disabled]': 'disabled',\n    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n  templateUrl: 'slide-toggle.html',\n  styleUrls: ['slide-toggle.css'],\n  providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n  inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatSlideToggle extends _MatSlideToggleMixinBase implements OnDestroy, AfterContentInit,\n                                                                        ControlValueAccessor,\n                                                                        CanDisable, CanColor,\n                                                                        HasTabIndex,\n                                                                        CanDisableRipple {\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  private _uniqueId: string = `mat-slide-toggle-${++nextUniqueId}`;\n  private _required: boolean = false;\n  private _checked: boolean = false;\n\n  /** Reference to the thumb HTMLElement. */\n  @ViewChild('thumbContainer') _thumbEl: ElementRef;\n\n  /** Reference to the thumb bar HTMLElement. */\n  @ViewChild('toggleBar') _thumbBarEl: ElementRef;\n\n  /** Name value will be applied to the input element if present. */\n  @Input() name: string | null = null;\n\n  /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n  @Input() id: string = this._uniqueId;\n\n  /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n  @Input() labelPosition: 'before' | 'after' = 'after';\n\n  /** Used to set the aria-label attribute on the underlying input element. */\n  @Input('aria-label') ariaLabel: string | null = null;\n\n  /** Used to set the aria-labelledby attribute on the underlying input element. */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  /** Whether the slide-toggle is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n\n  /** Whether the slide-toggle element is checked or not. */\n  @Input()\n  get checked(): boolean { return this._checked; }\n  set checked(value) {\n    this._checked = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** An event will be dispatched each time the slide-toggle changes its value. */\n  @Output() readonly change: EventEmitter<MatSlideToggleChange> =\n      new EventEmitter<MatSlideToggleChange>();\n\n  /**\n   * An event will be dispatched each time the slide-toggle input is toggled.\n   * This event is always emitted when the user toggles the slide toggle, but this does not mean\n   * the slide toggle's value has changed.\n   */\n  @Output() readonly toggleChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Returns the unique id for the visual hidden input. */\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n  /** Reference to the underlying input element. */\n  @ViewChild('input') _inputElement: ElementRef<HTMLInputElement>;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Attribute('tabindex') tabIndex: string,\n              @Inject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS)\n                  public defaults: MatSlideToggleDefaultOptions,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n    this.tabIndex = parseInt(tabIndex) || 0;\n  }\n\n  ngAfterContentInit() {\n    this._focusMonitor\n      .monitor(this._elementRef, true)\n      .subscribe(focusOrigin => {\n        // Only forward focus manually when it was received programmatically or through the\n        // keyboard. We should not do this for mouse/touch focus for two reasons:\n        // 1. It can prevent clicks from landing in Chrome (see #18269).\n        // 2. They're already handled by the wrapping `label` element.\n        if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n          this._inputElement.nativeElement.focus();\n        } else if (!focusOrigin) {\n          // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n          // Angular does not expect events to be raised during change detection, so any state\n          // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n          // error. See https://github.com/angular/angular/issues/17793. To work around this,\n          // we defer telling the form control it has been touched until the next tick.\n          Promise.resolve().then(() => this._onTouched());\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Method being called whenever the underlying input emits a change event. */\n  _onChangeEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the component's `change` output.\n    event.stopPropagation();\n    this.toggleChange.emit();\n\n    // When the slide toggle's config disables toggle change event by setting\n    // `disableToggleValue: true`, the slide toggle's value does not change, and the\n    // checked state of the underlying input needs to be changed back.\n    if (this.defaults.disableToggleValue) {\n      this._inputElement.nativeElement.checked = this.checked;\n      return;\n    }\n\n    // Sync the value from the underlying input element with the component instance.\n    this.checked = this._inputElement.nativeElement.checked;\n\n    // Emit our custom change event only if the underlying input emitted one. This ensures that\n    // there is no change event, when the checked state changes programmatically.\n    this._emitChangeEvent();\n  }\n\n  /** Method being called whenever the slide-toggle has been clicked. */\n  _onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `slide-toggle` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  writeValue(value: any): void {\n    this.checked = !!value;\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** Implemented as a part of ControlValueAccessor. */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the slide-toggle. */\n  focus(options?: FocusOptions): void {\n    this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n  }\n\n  /** Toggles the checked state of the slide-toggle. */\n  toggle(): void {\n    this.checked = !this.checked;\n    this._onChange(this.checked);\n  }\n\n  /**\n   * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n   */\n  private _emitChangeEvent() {\n    this._onChange(this.checked);\n    this.change.emit(new MatSlideToggleChange(this, this.checked));\n  }\n\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n    // slide-toggle component will be only marked for check, but no actual change detection runs\n    // automatically. Instead of going back into the zone in order to trigger a change detection\n    // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n    // we only trigger an explicit change detection for the slide-toggle view and its children.\n    this._changeDetectorRef.detectChanges();\n  }\n\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_checked: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  forwardRef,\n  Provider,\n} from '@angular/core';\nimport {\n  CheckboxRequiredValidator,\n  NG_VALIDATORS,\n} from '@angular/forms';\n\nexport const MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n  multi: true\n};\n\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\n@Directive({\n  selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n  providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n})\nexport class MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatSlideToggle} from './slide-toggle';\nimport {MatSlideToggleRequiredValidator} from './slide-toggle-required-validator';\n\n/** This module is used by both original and MDC-based slide-toggle implementations. */\n@NgModule({\n  exports: [MatSlideToggleRequiredValidator],\n  declarations: [MatSlideToggleRequiredValidator],\n})\nexport class _MatSlideToggleRequiredValidatorModule {}\n\n@NgModule({\n  imports: [\n    _MatSlideToggleRequiredValidatorModule,\n    MatRippleModule,\n    MatCommonModule,\n    ObserversModule,\n  ],\n  exports: [\n    _MatSlideToggleRequiredValidatorModule,\n    MatSlideToggle,\n    MatCommonModule\n  ],\n  declarations: [MatSlideToggle],\n})\nexport class MatSlideToggleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './slide-toggle-module';\nexport * from './slide-toggle';\nexport * from './slide-toggle-config';\nexport * from './slide-toggle-required-validator';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef, InjectionToken} from '@angular/core';\nimport {AriaLivePoliteness} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nexport const MAT_SNACK_BAR_DATA = new InjectionToken<any>('MatSnackBarData');\n\n/** Possible values for horizontalPosition on MatSnackBarConfig. */\nexport type MatSnackBarHorizontalPosition = 'start' | 'center' | 'end' | 'left' | 'right';\n\n/** Possible values for verticalPosition on MatSnackBarConfig. */\nexport type MatSnackBarVerticalPosition = 'top' | 'bottom';\n\n/**\n * Configuration used when opening a snack-bar.\n */\nexport class MatSnackBarConfig<D = any> {\n  /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n  politeness?: AriaLivePoliteness = 'assertive';\n\n  /**\n   * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n   * component or template, the announcement message will default to the specified message.\n   */\n  announcementMessage?: string = '';\n\n  /**\n   * The view container that serves as the parent for the snackbar for the purposes of dependency\n   * injection. Note: this does not affect where the snackbar is inserted in the DOM.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n  duration?: number = 0;\n\n  /** Extra CSS classes to be added to the snack bar container. */\n  panelClass?: string | string[];\n\n  /** Text layout direction for the snack bar. */\n  direction?: Direction;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** The horizontal position to place the snack bar. */\n  horizontalPosition?: MatSnackBarHorizontalPosition = 'center';\n\n  /** The vertical position to place the snack bar. */\n  verticalPosition?: MatSnackBarVerticalPosition = 'bottom';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {Observable, Subject} from 'rxjs';\nimport {_SnackBarContainer} from './snack-bar-container';\n\n\n/** Event that is emitted when a snack bar is dismissed. */\nexport interface MatSnackBarDismiss {\n  /** Whether the snack bar was dismissed using the action button. */\n  dismissedByAction: boolean;\n}\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nexport class MatSnackBarRef<T> {\n  /** The instance of the component making up the content of the snack bar. */\n  instance: T;\n\n  /**\n   * The instance of the component making up the content of the snack bar.\n   * @docs-private\n   */\n  containerInstance: _SnackBarContainer;\n\n  /** Subject for notifying the user that the snack bar has been dismissed. */\n  private readonly _afterDismissed = new Subject<MatSnackBarDismiss>();\n\n  /** Subject for notifying the user that the snack bar has opened and appeared. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the snack bar action was called. */\n  private readonly _onAction = new Subject<void>();\n\n  /**\n   * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n   * dismissed before the duration passes.\n   */\n  private _durationTimeoutId: number;\n\n  /** Whether the snack bar was dismissed using the action button. */\n  private _dismissedByAction = false;\n\n  constructor(containerInstance: _SnackBarContainer,\n              private _overlayRef: OverlayRef) {\n    this.containerInstance = containerInstance;\n    // Dismiss snackbar on action.\n    this.onAction().subscribe(() => this.dismiss());\n    containerInstance._onExit.subscribe(() => this._finishDismiss());\n  }\n\n  /** Dismisses the snack bar. */\n  dismiss(): void {\n    if (!this._afterDismissed.closed) {\n      this.containerInstance.exit();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n\n  /** Marks the snackbar action clicked. */\n  dismissWithAction(): void {\n    if (!this._onAction.closed) {\n      this._dismissedByAction = true;\n      this._onAction.next();\n      this._onAction.complete();\n    }\n  }\n\n\n  /**\n   * Marks the snackbar action clicked.\n   * @deprecated Use `dismissWithAction` instead.\n   * @breaking-change 8.0.0\n   */\n  closeWithAction(): void {\n    this.dismissWithAction();\n  }\n\n  /** Dismisses the snack bar after some duration */\n  _dismissAfter(duration: number): void {\n    // Note that we need to cap the duration to the maximum value for setTimeout, because\n    // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n    this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n  }\n\n  /** Marks the snackbar as opened */\n  _open(): void {\n    if (!this._afterOpened.closed) {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    }\n  }\n\n  /** Cleans up the DOM after closing. */\n  private _finishDismiss(): void {\n    this._overlayRef.dispose();\n\n    if (!this._onAction.closed) {\n      this._onAction.complete();\n    }\n\n    this._afterDismissed.next({dismissedByAction: this._dismissedByAction});\n    this._afterDismissed.complete();\n    this._dismissedByAction = false;\n  }\n\n  /** Gets an observable that is notified when the snack bar is finished closing. */\n  afterDismissed(): Observable<MatSnackBarDismiss> {\n    return this._afterDismissed.asObservable();\n  }\n\n  /** Gets an observable that is notified when the snack bar has opened and appeared. */\n  afterOpened(): Observable<void> {\n    return this.containerInstance._onEnter;\n  }\n\n  /** Gets an observable that is notified when the snack bar action is called. */\n  onAction(): Observable<void> {\n    return this._onAction.asObservable();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_SNACK_BAR_DATA} from './snack-bar-config';\nimport {MatSnackBarRef} from './snack-bar-ref';\n\n\n/**\n * Interface for a simple snack bar component that has a message and a single action.\n */\nexport interface TextOnlySnackBar {\n  data: {message: string, action: string};\n  snackBarRef: MatSnackBarRef<TextOnlySnackBar>;\n  action: () => void;\n  hasAction: boolean;\n}\n\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\n@Component({\n  selector: 'simple-snack-bar',\n  templateUrl: 'simple-snack-bar.html',\n  styleUrls: ['simple-snack-bar.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-simple-snackbar',\n  }\n})\nexport class SimpleSnackBar implements TextOnlySnackBar {\n  /** Data that was injected into the snack bar. */\n  data: {message: string, action: string};\n\n  constructor(\n    public snackBarRef: MatSnackBarRef<SimpleSnackBar>,\n    @Inject(MAT_SNACK_BAR_DATA) data: any) {\n    this.data = data;\n  }\n\n  /** Performs the action on the snack bar. */\n  action(): void {\n    this.snackBarRef.dismissWithAction();\n  }\n\n  /** If the action button should be shown. */\n  get hasAction(): boolean {\n    return !!this.data.action;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nexport const matSnackBarAnimations: {\n  readonly snackBarState: AnimationTriggerMetadata;\n} = {\n  /** Animation that shows and hides a snack bar. */\n  snackBarState: trigger('state', [\n    state('void, hidden', style({\n      transform: 'scale(0.8)',\n      opacity: 0,\n    })),\n    state('visible', style({\n      transform: 'scale(1)',\n      opacity: 1,\n    })),\n    transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n      opacity: 0\n    }))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  TemplatePortal,\n  DomPortal,\n} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {matSnackBarAnimations} from './snack-bar-animations';\nimport {MatSnackBarConfig} from './snack-bar-config';\n\n/**\n * Internal interface for a snack bar container.\n * @docs-private\n */\n// tslint:disable-next-line:class-name\nexport interface _SnackBarContainer {\n  snackBarConfig: MatSnackBarConfig;\n  _onExit: Subject<any>;\n  _onEnter: Subject<any>;\n  enter: () => void;\n  exit: () => Observable<void>;\n  attachTemplatePortal: <C>(portal: TemplatePortal<C>) => EmbeddedViewRef<C>;\n  attachComponentPortal: <T>(portal: ComponentPortal<T>) => ComponentRef<T>;\n}\n\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\n@Component({\n  selector: 'snack-bar-container',\n  templateUrl: 'snack-bar-container.html',\n  styleUrls: ['snack-bar-container.css'],\n  // In Ivy embedded views will be change detected from their declaration place, rather than\n  // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n  // because it might cause snack bars that were opened from a template not to be out of date.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  animations: [matSnackBarAnimations.snackBarState],\n  host: {\n    '[attr.role]': '_role',\n    'class': 'mat-snack-bar-container',\n    '[@state]': '_animationState',\n    '(@state.done)': 'onAnimationEnd($event)'\n  },\n})\nexport class MatSnackBarContainer extends BasePortalOutlet\n    implements OnDestroy, _SnackBarContainer {\n  /** Whether the component has been destroyed. */\n  private _destroyed = false;\n\n  /** The portal outlet inside of this container into which the snack bar content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** Subject for notifying that the snack bar has exited from view. */\n  readonly _onExit: Subject<void> = new Subject();\n\n  /** Subject for notifying that the snack bar has finished entering the view. */\n  readonly _onEnter: Subject<void> = new Subject();\n\n  /** The state of the snack bar animations. */\n  _animationState = 'void';\n\n  /** ARIA role for the snack bar container. */\n  _role: 'alert' | 'status' | null;\n\n  constructor(\n    private _ngZone: NgZone,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    /** The snack bar configuration. */\n    public snackBarConfig: MatSnackBarConfig) {\n\n    super();\n\n    // Based on the ARIA spec, `alert` and `status` roles have an\n    // implicit `assertive` and `polite` politeness respectively.\n    if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n      this._role = 'alert';\n    } else if (snackBarConfig.politeness === 'off') {\n      this._role = null;\n    } else {\n      this._role = 'status';\n    }\n  }\n\n  /** Attach a component portal as content to this snack bar container. */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /** Attach a template portal as content to this snack bar container. */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /**\n   * Attaches a DOM portal to the snack bar container.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachDomPortal(portal);\n  }\n\n  /** Handle end of animations, updating the state of the snackbar. */\n  onAnimationEnd(event: AnimationEvent) {\n    const {fromState, toState} = event;\n\n    if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n      this._completeExit();\n    }\n\n    if (toState === 'visible') {\n      // Note: we shouldn't use `this` inside the zone callback,\n      // because it can cause a memory leak.\n      const onEnter = this._onEnter;\n\n      this._ngZone.run(() => {\n        onEnter.next();\n        onEnter.complete();\n      });\n    }\n  }\n\n  /** Begin animation of snack bar entrance into view. */\n  enter(): void {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Begin animation of the snack bar exiting from view. */\n  exit(): Observable<void> {\n    // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n    // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n    // `MatSnackBar.open`).\n    this._animationState = 'hidden';\n\n    // Mark this element with an 'exit' attribute to indicate that the snackbar has\n    // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n    // test harness.\n    this._elementRef.nativeElement.setAttribute('mat-exit', '');\n\n    return this._onExit;\n  }\n\n  /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n  ngOnDestroy() {\n    this._destroyed = true;\n    this._completeExit();\n  }\n\n  /**\n   * Waits for the zone to settle before removing the element. Helps prevent\n   * errors where we end up removing an element which is in the middle of an animation.\n   */\n  private _completeExit() {\n    this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n      this._onExit.next();\n      this._onExit.complete();\n    });\n  }\n\n  /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n  private _applySnackBarClasses() {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const panelClasses = this.snackBarConfig.panelClass;\n\n    if (panelClasses) {\n      if (Array.isArray(panelClasses)) {\n        // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n        panelClasses.forEach(cssClass => element.classList.add(cssClass));\n      } else {\n        element.classList.add(panelClasses);\n      }\n    }\n\n    if (this.snackBarConfig.horizontalPosition === 'center') {\n      element.classList.add('mat-snack-bar-center');\n    }\n\n    if (this.snackBarConfig.verticalPosition === 'top') {\n      element.classList.add('mat-snack-bar-top');\n    }\n  }\n\n  /** Asserts that no content is already attached to the container. */\n  private _assertNotAttached() {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Attempting to attach snack bar content after content is already attached');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {SimpleSnackBar} from './simple-snack-bar';\nimport {MatSnackBarContainer} from './snack-bar-container';\n\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    PortalModule,\n    CommonModule,\n    MatButtonModule,\n    MatCommonModule,\n  ],\n  exports: [MatSnackBarContainer, MatCommonModule],\n  declarations: [MatSnackBarContainer, SimpleSnackBar],\n  entryComponents: [MatSnackBarContainer, SimpleSnackBar],\n})\nexport class MatSnackBarModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ComponentRef,\n  EmbeddedViewRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n  OnDestroy, Type,\n} from '@angular/core';\nimport {takeUntil} from 'rxjs/operators';\nimport {TextOnlySnackBar, SimpleSnackBar} from './simple-snack-bar';\nimport {MAT_SNACK_BAR_DATA, MatSnackBarConfig} from './snack-bar-config';\nimport {MatSnackBarContainer, _SnackBarContainer} from './snack-bar-container';\nimport {MatSnackBarModule} from './snack-bar-module';\nimport {MatSnackBarRef} from './snack-bar-ref';\n\n\n/** Injection token that can be used to specify default snack bar. */\nexport const MAT_SNACK_BAR_DEFAULT_OPTIONS =\n    new InjectionToken<MatSnackBarConfig>('mat-snack-bar-default-options', {\n      providedIn: 'root',\n      factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n    });\n\n/** @docs-private */\nexport function MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY(): MatSnackBarConfig {\n  return new MatSnackBarConfig();\n}\n\n/**\n * Service to dispatch Material Design snack bar messages.\n */\n@Injectable({providedIn: MatSnackBarModule})\nexport class MatSnackBar implements OnDestroy {\n  /**\n   * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n   * If there is a parent snack-bar service, all operations should delegate to that parent\n   * via `_openedSnackBarRef`.\n   */\n  private _snackBarRefAtThisLevel: MatSnackBarRef<any> | null = null;\n\n  /** The component that should be rendered as the snack bar's simple component. */\n  protected simpleSnackBarComponent: Type<TextOnlySnackBar> = SimpleSnackBar;\n\n  /** The container component that attaches the provided template or component. */\n  protected snackBarContainerComponent: Type<_SnackBarContainer> = MatSnackBarContainer;\n\n  /** The CSS class to applie for handset mode. */\n  protected handsetCssClass = 'mat-snack-bar-handset';\n\n  /** Reference to the currently opened snackbar at *any* level. */\n  get _openedSnackBarRef(): MatSnackBarRef<any> | null {\n    const parent = this._parentSnackBar;\n    return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n  }\n\n  set _openedSnackBarRef(value: MatSnackBarRef<any> | null) {\n    if (this._parentSnackBar) {\n      this._parentSnackBar._openedSnackBarRef = value;\n    } else {\n      this._snackBarRefAtThisLevel = value;\n    }\n  }\n\n  constructor(\n      private _overlay: Overlay,\n      private _live: LiveAnnouncer,\n      private _injector: Injector,\n      private _breakpointObserver: BreakpointObserver,\n      @Optional() @SkipSelf() private _parentSnackBar: MatSnackBar,\n      @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS) private _defaultConfig: MatSnackBarConfig) {}\n\n  /**\n   * Creates and dispatches a snack bar with a custom component for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param component Component to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromComponent<T>(component: ComponentType<T>, config?: MatSnackBarConfig):\n      MatSnackBarRef<T> {\n    return this._attach(component, config) as MatSnackBarRef<T>;\n  }\n\n  /**\n   * Creates and dispatches a snack bar with a custom template for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param template Template to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromTemplate(template: TemplateRef<any>, config?: MatSnackBarConfig):\n      MatSnackBarRef<EmbeddedViewRef<any>> {\n    return this._attach(template, config);\n  }\n\n  /**\n   * Opens a snackbar with a message and an optional action.\n   * @param message The message to show in the snackbar.\n   * @param action The label for the snackbar action.\n   * @param config Additional configuration options for the snackbar.\n   */\n  open(message: string, action: string = '', config?: MatSnackBarConfig):\n      MatSnackBarRef<TextOnlySnackBar> {\n    const _config = {...this._defaultConfig, ...config};\n\n    // Since the user doesn't have access to the component, we can\n    // override the data to pass in our own message and action.\n    _config.data = {message, action};\n\n    if (!_config.announcementMessage) {\n      _config.announcementMessage = message;\n    }\n\n    return this.openFromComponent(this.simpleSnackBarComponent, _config);\n  }\n\n  /**\n   * Dismisses the currently-visible snack bar.\n   */\n  dismiss(): void {\n    if (this._openedSnackBarRef) {\n      this._openedSnackBarRef.dismiss();\n    }\n  }\n\n  ngOnDestroy() {\n    // Only dismiss the snack bar at the current level on destroy.\n    if (this._snackBarRefAtThisLevel) {\n      this._snackBarRefAtThisLevel.dismiss();\n    }\n  }\n\n  /**\n   * Attaches the snack bar container component to the overlay.\n   */\n  private _attachSnackBarContainer(overlayRef: OverlayRef,\n                                     config: MatSnackBarConfig): _SnackBarContainer {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n      [MatSnackBarConfig, config]\n    ]));\n\n    const containerPortal =\n        new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n    const containerRef: ComponentRef<_SnackBarContainer> =\n        overlayRef.attach(containerPortal);\n    containerRef.instance.snackBarConfig = config;\n    return containerRef.instance;\n  }\n\n  /**\n   * Places a new component or a template as the content of the snack bar container.\n   */\n  private _attach<T>(content: ComponentType<T> | TemplateRef<T>, userConfig?: MatSnackBarConfig):\n      MatSnackBarRef<T | EmbeddedViewRef<any>> {\n\n    const config = {...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig};\n    const overlayRef = this._createOverlay(config);\n    const container = this._attachSnackBarContainer(overlayRef, config);\n    const snackBarRef = new MatSnackBarRef<T | EmbeddedViewRef<any>>(container, overlayRef);\n\n    if (content instanceof TemplateRef) {\n      const portal = new TemplatePortal(content, null!, {\n        $implicit: config.data,\n        snackBarRef\n      } as any);\n\n      snackBarRef.instance = container.attachTemplatePortal(portal);\n    } else {\n      const injector = this._createInjector(config, snackBarRef);\n      const portal = new ComponentPortal(content, undefined, injector);\n      const contentRef = container.attachComponentPortal<T>(portal);\n\n      // We can't pass this via the injector, because the injector is created earlier.\n      snackBarRef.instance = contentRef.instance;\n    }\n\n    // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n    // appropriate. This class is applied to the overlay element because the overlay must expand to\n    // fill the width of the screen for full width snackbars.\n    this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(\n        takeUntil(overlayRef.detachments())\n    ).subscribe(state => {\n      const classList = overlayRef.overlayElement.classList;\n      state.matches ? classList.add(this.handsetCssClass) : classList.remove(this.handsetCssClass);\n    });\n\n    this._animateSnackBar(snackBarRef, config);\n    this._openedSnackBarRef = snackBarRef;\n    return this._openedSnackBarRef;\n  }\n\n  /** Animates the old snack bar out and the new one in. */\n  private _animateSnackBar(snackBarRef: MatSnackBarRef<any>, config: MatSnackBarConfig) {\n    // When the snackbar is dismissed, clear the reference to it.\n    snackBarRef.afterDismissed().subscribe(() => {\n      // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n      if (this._openedSnackBarRef == snackBarRef) {\n        this._openedSnackBarRef = null;\n      }\n\n      if (config.announcementMessage) {\n        this._live.clear();\n      }\n    });\n\n    if (this._openedSnackBarRef) {\n      // If a snack bar is already in view, dismiss it and enter the\n      // new snack bar after exit animation is complete.\n      this._openedSnackBarRef.afterDismissed().subscribe(() => {\n        snackBarRef.containerInstance.enter();\n      });\n      this._openedSnackBarRef.dismiss();\n    } else {\n      // If no snack bar is in view, enter the new snack bar.\n      snackBarRef.containerInstance.enter();\n    }\n\n    // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n    if (config.duration && config.duration > 0) {\n      snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration!));\n    }\n\n    if (config.announcementMessage) {\n      this._live.announce(config.announcementMessage, config.politeness);\n    }\n  }\n\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified snack bar config.\n   */\n  private _createOverlay(config: MatSnackBarConfig): OverlayRef {\n    const overlayConfig = new OverlayConfig();\n    overlayConfig.direction = config.direction;\n\n    let positionStrategy = this._overlay.position().global();\n    // Set horizontal position.\n    const isRtl = config.direction === 'rtl';\n    const isLeft = (\n        config.horizontalPosition === 'left' ||\n        (config.horizontalPosition === 'start' && !isRtl) ||\n        (config.horizontalPosition === 'end' && isRtl));\n    const isRight = !isLeft && config.horizontalPosition !== 'center';\n    if (isLeft) {\n      positionStrategy.left('0');\n    } else if (isRight) {\n      positionStrategy.right('0');\n    } else {\n      positionStrategy.centerHorizontally();\n    }\n    // Set horizontal position.\n    if (config.verticalPosition === 'top') {\n      positionStrategy.top('0');\n    } else {\n      positionStrategy.bottom('0');\n    }\n\n    overlayConfig.positionStrategy = positionStrategy;\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an injector to be used inside of a snack bar component.\n   * @param config Config that was used to create the snack bar.\n   * @param snackBarRef Reference to the snack bar.\n   */\n  private _createInjector<T>(\n      config: MatSnackBarConfig,\n      snackBarRef: MatSnackBarRef<T>): PortalInjector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    return new PortalInjector(userInjector || this._injector, new WeakMap<any, any>([\n      [MatSnackBarRef, snackBarRef],\n      [MAT_SNACK_BAR_DATA, config.data]\n    ]));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './snack-bar-module';\nexport * from './snack-bar';\nexport * from './snack-bar-container';\nexport * from './snack-bar-config';\nexport * from './snack-bar-ref';\nexport * from './simple-snack-bar';\nexport * from './snack-bar-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface HighlightLibrary {\r\n\r\n  /**\r\n   * Core highlighting function.\r\n   * @param name Accepts a language name, or an alias\r\n   * @param value A string with the code to highlight.\r\n   * @param ignore_illegals When present and evaluates to a true value, forces highlighting to finish\r\n   * even in case of detecting illegal syntax for the language instead of throwing an exception.\r\n   * @param continuation An optional mode stack representing unfinished parsing.\r\n   * When present, the function will restart parsing from this state instead of initializing a new one\r\n   */\r\n  highlight(name: string, value: string, ignore_illegals: boolean, continuation?: any): HighlightResult;\r\n\r\n  /**\r\n   * Highlighting with language detection.\r\n   * @param value Accepts a string with the code to highlight\r\n   * @param languageSubset An optional array of language names and aliases restricting detection to only those languages.\r\n   * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n   */\r\n  highlightAuto(value: string, languageSubset: string[]): HighlightResult;\r\n\r\n  /**\r\n   * Post-processing of the highlighted markup.\r\n   * Currently consists of replacing indentation TAB characters and using <br> tags instead of new-line characters.\r\n   * Options are set globally with configure.\r\n   * @param value Accepts a string with the highlighted markup\r\n   */\r\n  fixMarkup(value: string): string;\r\n\r\n  /**\r\n   * Applies highlighting to a DOM node containing code.\r\n   * The function uses language detection by default but you can specify the language in the class attribute of the DOM node.\r\n   * See the class reference for all available language names and aliases.\r\n   * @param block The element to apply highlight on.\r\n   */\r\n  highlightBlock(block: HTMLElement): void;\r\n\r\n  /**\r\n   * Configures global options:\r\n   * @param config HighlightJs configuration argument\r\n   */\r\n  configure(config: HighlightConfig): void;\r\n\r\n  /**\r\n   * Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\r\n   */\r\n  initHighlighting(): void;\r\n\r\n  /**\r\n   * Adds new language to the library under the specified name. Used mostly internally.\r\n   * @param name A string with the name of the language being registered\r\n   * @param language A function that returns an object which represents the language definition.\r\n   * The function is passed the hljs object to be able to use common regular expressions defined within it.\r\n   */\r\n  registerLanguage(name: string, language: () => any): void;\r\n\r\n  /**\r\n   * @return The languages names list.\r\n   */\r\n  listLanguages(): string[];\r\n\r\n  /**\r\n   * Looks up a language by name or alias.\r\n   * @param name Language name\r\n   * @return The language object if found, undefined otherwise.\r\n   */\r\n  getLanguage(name: string): any;\r\n\r\n  /**\r\n   * Add line numbers to code element\r\n   * @param el Code element\r\n   */\r\n  lineNumbersBlock(el: Element): void;\r\n}\r\n\r\nexport interface HighlightConfig {\r\n  /** tabReplace: a string used to replace TAB characters in indentation. */\r\n  tabReplace?: string;\r\n  /** useBR: a flag to generate <br> tags instead of new-line characters in the output, useful when code is marked up using a non-<pre> container. */\r\n  useBR?: boolean;\r\n  /** classPrefix: a string prefix added before class names in the generated markup, used for backwards compatibility with stylesheets. */\r\n  classPrefix?: string;\r\n  /** languages: an array of language names and aliases restricting auto detection to only these languages. */\r\n  languages?: string[];\r\n}\r\n\r\nexport interface HighlightResult {\r\n  language?: string;\r\n  second_best?: any;\r\n  top?: any;\r\n  value?: string;\r\n  relevance?: number;\r\n}\r\n\r\nexport interface HighlightOptions {\r\n  config?: HighlightConfig;\r\n  languages?: { [name: string]: () => Promise<any> };\r\n  lineNumbers?: boolean;\r\n}\r\n\r\nexport const HIGHLIGHT_OPTIONS = new InjectionToken<HighlightOptions>('HIGHLIGHT_OPTIONS');\r\n","import { Injectable, Inject, PLATFORM_ID, Optional } from '@angular/core';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\nimport { BehaviorSubject, Observable, from, EMPTY, zip } from 'rxjs';\r\nimport { catchError, tap, map, switchMap, filter, take } from 'rxjs/operators';\r\nimport { HIGHLIGHT_OPTIONS, HighlightLibrary, HighlightOptions } from './highlight.model';\r\n\r\n// @dynamic\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HighlightLoader {\r\n  // Stream that emits when hljs library is loaded and ready to use\r\n  private readonly _ready = new BehaviorSubject(null);\r\n  readonly ready = this._ready.asObservable().pipe(\r\n    filter((hljs: HighlightLibrary) => !!hljs),\r\n    take(1)\r\n  );\r\n\r\n  constructor(@Inject(DOCUMENT) doc: any,\r\n              @Inject(PLATFORM_ID) platformId: object,\r\n              @Optional() @Inject(HIGHLIGHT_OPTIONS) private _options: HighlightOptions) {\r\n    // Check if hljs is already available\r\n    if (isPlatformBrowser(platformId) && doc.defaultView.hljs) {\r\n      this._ready.next(doc.defaultView.hljs);\r\n    } else {\r\n      // Load hljs library\r\n      this._loadLibrary().pipe(\r\n        switchMap((hljs: HighlightLibrary) => {\r\n          if (this._options && this._options.lineNumbers) {\r\n            // Make hljs available on window object (required for the line numbers library)\r\n            doc.defaultView.hljs = hljs;\r\n            // Load line numbers library\r\n            return loadLineNumbers().pipe(tap(() => this._ready.next(hljs)));\r\n          } else {\r\n            this._ready.next(hljs);\r\n            return EMPTY;\r\n          }\r\n        }),\r\n        catchError((e: any) => {\r\n          console.error('Unable to load hljs library', e);\r\n          return EMPTY;\r\n        })\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lazy-Load highlight.js library\r\n   */\r\n  private _loadLibrary(): Observable<any> {\r\n    return (this._options && this._options.languages && Object.keys(this._options.languages).length)\r\n      ? from(loadCoreLibrary()).pipe(switchMap((hljs: HighlightLibrary) => this._loadLanguages(hljs)))\r\n      : from(loadAllLibrary());\r\n  }\r\n\r\n  /**\r\n   * Lazy-load highlight.js languages\r\n   */\r\n  private _loadLanguages(hljs: HighlightLibrary): Observable<any> {\r\n    const languages = Object.entries(this._options.languages).map(([langName, langLoader]) =>\r\n      importModule(langLoader()).pipe(\r\n        tap((langFunc: any) => hljs.registerLanguage(langName, langFunc))\r\n      )\r\n    );\r\n    return zip(...languages).pipe(map(() => hljs));\r\n  }\r\n}\r\n\r\n/**\r\n * Import highlight.js core library\r\n */\r\nfunction loadCoreLibrary(): Observable<HighlightLibrary> {\r\n  return importModule(import('highlight.js/lib/highlight'));\r\n}\r\n\r\n/**\r\n * Import highlight.js library with all languages\r\n */\r\nfunction loadAllLibrary(): Observable<HighlightLibrary> {\r\n  return importModule(import('highlight.js'));\r\n}\r\n\r\n/**\r\n * Import line numbers library\r\n */\r\nfunction loadLineNumbers(): Observable<any> {\r\n  return importModule(import('highlightjs-line-numbers.js'));\r\n}\r\n\r\n/**\r\n * Map loader response to module object\r\n */\r\nconst importModule = (moduleLoader: Promise<any>): Observable<any> => {\r\n  return from(moduleLoader).pipe(\r\n    filter((module: any) => !!module && !!module.default),\r\n    map((module: any) => module.default)\r\n  );\r\n};\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\nimport { HighlightConfig, HighlightResult, HighlightLibrary, HighlightOptions, HIGHLIGHT_OPTIONS } from './highlight.model';\r\nimport { HighlightLoader } from './highlight.loader';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HighlightJS {\r\n\r\n  private _hljs!: HighlightLibrary;\r\n\r\n  // A reference for hljs library\r\n  get hljs(): HighlightLibrary | null {\r\n    return this._hljs;\r\n  }\r\n\r\n  constructor(private _loader: HighlightLoader, @Optional() @Inject(HIGHLIGHT_OPTIONS) options: HighlightOptions) {\r\n    // Load highlight.js library on init\r\n    _loader.ready.pipe().subscribe((hljs: HighlightLibrary) => {\r\n      this._hljs = hljs;\r\n      if (options && options.config) {\r\n        // Set global config if present\r\n        hljs.configure(options.config);\r\n        if (hljs.listLanguages().length < 1) {\r\n          console.error('[HighlightJS]: No languages were registered!');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Core highlighting function.\r\n   * @param name Accepts a language name, or an alias\r\n   * @param value A string with the code to highlight.\r\n   * @param ignore_illegals When present and evaluates to a true value, forces highlighting to finish\r\n   * even in case of detecting illegal syntax for the language instead of throwing an exception.\r\n   * @param continuation An optional mode stack representing unfinished parsing.\r\n   * When present, the function will restart parsing from this state instead of initializing a new one\r\n   */\r\n  highlight(name: string, value: string, ignore_illegals: boolean, continuation?: any): Observable<HighlightResult> {\r\n    return this._loader.ready.pipe(\r\n      map((hljs: HighlightLibrary) => hljs.highlight(name, value, ignore_illegals, continuation))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Highlighting with language detection.\r\n   * @param value Accepts a string with the code to highlight\r\n   * @param languageSubset An optional array of language names and aliases restricting detection to only those languages.\r\n   * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n   */\r\n  highlightAuto(value: string, languageSubset: string[]): Observable<HighlightResult> {\r\n    return this._loader.ready.pipe(\r\n      map((hljs: HighlightLibrary) => hljs.highlightAuto(value, languageSubset))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Post-processing of the highlighted markup.\r\n   * Currently consists of replacing indentation TAB characters and using <br> tags instead of new-line characters.\r\n   * Options are set globally with configure.\r\n   * @param value Accepts a string with the highlighted markup\r\n   */\r\n  fixMarkup(value: string): Observable<string> {\r\n    return this._loader.ready.pipe(\r\n      map((hljs: HighlightLibrary) => hljs.fixMarkup(value))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Applies highlighting to a DOM node containing code.\r\n   * The function uses language detection by default but you can specify the language in the class attribute of the DOM node.\r\n   * See the class reference for all available language names and aliases.\r\n   * @param block The element to apply highlight on.\r\n   */\r\n  highlightBlock(block: HTMLElement): Observable<void> {\r\n    return this._loader.ready.pipe(\r\n      map((hljs: HighlightLibrary) => hljs.highlightBlock(block))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Configures global options:\r\n   * @param config HighlightJs configuration argument\r\n   */\r\n  configure(config: HighlightConfig): Observable<void> {\r\n    return this._loader.ready.pipe(\r\n      map((hljs: HighlightLibrary) => hljs.configure(config))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\r\n   */\r\n  initHighlighting(): Observable<void> {\r\n    return this._loader.ready.pipe(\r\n      map((hljs: HighlightLibrary) => hljs.initHighlighting())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Adds new language to the library under the specified name. Used mostly internally.\r\n   * @param name A string with the name of the language being registered\r\n   * @param language A function that returns an object which represents the language definition.\r\n   * The function is passed the hljs object to be able to use common regular expressions defined within it.\r\n   */\r\n  registerLanguage(name: string, language: () => any): Observable<HighlightLibrary> {\r\n    return this._loader.ready.pipe(\r\n      tap((hljs: HighlightLibrary) => hljs.registerLanguage(name, language))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return The languages names list.\r\n   */\r\n  listLanguages(): Observable<string[]> {\r\n    return this._loader.ready.pipe(\r\n      map((hljs: HighlightLibrary) => hljs.listLanguages())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Looks up a language by name or alias.\r\n   * @param name Language name\r\n   * @return The language object if found, undefined otherwise.\r\n   */\r\n  getLanguage(name: string): Observable<any> {\r\n    return this._loader.ready.pipe(\r\n      map((hljs: HighlightLibrary) => hljs.getLanguage(name))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Display line numbers\r\n   * @param el Code element\r\n   */\r\n  lineNumbersBlock(el: HTMLElement): Observable<any> {\r\n    return this._loader.ready.pipe(\r\n      filter((hljs: HighlightLibrary) => !!hljs.lineNumbersBlock),\r\n      tap((hljs: HighlightLibrary) => hljs.lineNumbersBlock(el))\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  Inject,\r\n  Optional,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  ElementRef,\r\n  SecurityContext\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { animationFrameScheduler } from 'rxjs';\r\nimport { HighlightJS } from './highlight.service';\r\nimport { HIGHLIGHT_OPTIONS, HighlightOptions, HighlightResult } from './highlight.model';\r\n\r\n@Directive({\r\n  host: {\r\n    '[class.hljs]': 'true'\r\n  },\r\n  selector: '[highlight]'\r\n})\r\nexport class Highlight implements OnChanges {\r\n\r\n  // Highlighted Code\r\n  private readonly _nativeElement: HTMLElement;\r\n\r\n  // Temp observer to observe when line numbers has been added to code element\r\n  private _lineNumbersObs: any;\r\n\r\n  // Highlight code input\r\n  @Input('highlight') code!: string;\r\n\r\n  // An optional array of language names and aliases restricting detection to only those languages.\r\n  // The subset can also be set with configure, but the local parameter overrides the option if set.\r\n  @Input() languages!: string[];\r\n\r\n  // Show line numbers\r\n  @Input() lineNumbers!: boolean;\r\n\r\n  // Stream that emits when code string is highlighted\r\n  @Output() highlighted = new EventEmitter<HighlightResult>();\r\n\r\n  constructor(el: ElementRef,\r\n              private _hljs: HighlightJS,\r\n              private _sanitizer: DomSanitizer,\r\n              @Optional() @Inject(HIGHLIGHT_OPTIONS) private _options: HighlightOptions) {\r\n    this._nativeElement = el.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (\r\n      changes.code &&\r\n      changes.code.currentValue &&\r\n      changes.code.currentValue !== changes.code.previousValue\r\n    ) {\r\n      this.highlightElement(this.code, this.languages);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Highlighting with language detection and fix markup.\r\n   * @param code Accepts a string with the code to highlight\r\n   * @param languages An optional array of language names and aliases restricting detection to only those languages.\r\n   * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n   */\r\n  highlightElement(code: string, languages?: string[]): void {\r\n    // Set code text before highlighting\r\n    this.setTextContent(code);\r\n    this._hljs.highlightAuto(code, languages).subscribe((res: any) => {\r\n      // Set highlighted code\r\n      this.setInnerHTML(res.value);\r\n      // Check if user want to show line numbers\r\n      if (this.lineNumbers && this._options && this._options.lineNumbers) {\r\n        this.addLineNumbers();\r\n      }\r\n      // Forward highlight response to the highlighted output\r\n      this.highlighted.emit(res);\r\n    });\r\n  }\r\n\r\n  private addLineNumbers() {\r\n    // Clean up line numbers observer\r\n    this.destroyLineNumbersObserver();\r\n    animationFrameScheduler.schedule(() => {\r\n      // Add line numbers\r\n      this._hljs.lineNumbersBlock(this._nativeElement).subscribe();\r\n      // If lines count is 1, the line numbers library will not add numbers\r\n      // Observe changes to add 'hljs-line-numbers' class only when line numbers is added to the code element\r\n      this._lineNumbersObs = new MutationObserver(() => {\r\n        if (this._nativeElement.firstElementChild && this._nativeElement.firstElementChild.tagName.toUpperCase() === 'TABLE') {\r\n          this._nativeElement.classList.add('hljs-line-numbers');\r\n        }\r\n        this.destroyLineNumbersObserver();\r\n      });\r\n      this._lineNumbersObs.observe(this._nativeElement, { childList: true });\r\n    });\r\n  }\r\n\r\n  private destroyLineNumbersObserver() {\r\n    if (this._lineNumbersObs) {\r\n      this._lineNumbersObs.disconnect();\r\n      this._lineNumbersObs = null;\r\n    }\r\n  }\r\n\r\n  private setTextContent(content: string) {\r\n    animationFrameScheduler.schedule(() =>\r\n      this._nativeElement.textContent = content\r\n    );\r\n  }\r\n\r\n  private setInnerHTML(content: string) {\r\n    animationFrameScheduler.schedule(() =>\r\n      this._nativeElement.innerHTML = this._sanitizer.sanitize(SecurityContext.HTML, content)\r\n    );\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Highlight } from './highlight';\r\n\r\n@NgModule({\r\n  declarations: [Highlight],\r\n  exports: [Highlight]\r\n})\r\nexport class HighlightModule {\r\n}\r\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\"></div>\\n  <div class=\\\"col-8\\\">\\n  \\n    <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n      style=\\\"max-height:800px;height:90vh;width:100%\\\" viewBox=\\\"0 0 400 400\\\" xml:space=\\\"preserve\\\">\\n      <defs>\\n        <filter id=\\\"glow\\\" width=\\\"20\\\" x=\\\"-10\\\">\\n          <feGaussianBlur id=\\\"GaussianBlur\\\" stdDeviation=\\\"2\\\" in=\\\"SourceGraphic\\\" result=\\\"BlurResult\\\" />\\n          <feComposite in2=\\\"BlurResult\\\" in=\\\"SourceGraphic\\\" operator=\\\"over\\\" />\\n        </filter>\\n        <linearGradient id=\\\"chrome\\\">\\n          <stop style=\\\"stop-color:#000000;stop-opacity:1;\\\" offset=\\\"0\\\" id=\\\"stop3816\\\" />\\n          <stop id=\\\"stop3822\\\" offset=\\\"0.612\\\" style=\\\"stop-color:#e2e2e2;stop-opacity:1\\\" />\\n          <stop style=\\\"stop-color:#d9d9d9;stop-opacity:1;\\\" offset=\\\"0.734\\\" id=\\\"stop3824\\\" />\\n          <stop id=\\\"stop3826\\\" offset=\\\"0.734\\\" style=\\\"stop-color:#242424;stop-opacity:1;\\\" />\\n          <stop style=\\\"stop-color:#444444;stop-opacity:1\\\" offset=\\\"0.8174\\\" id=\\\"stop3830\\\" />\\n          <stop style=\\\"stop-color:#d5d5d5;stop-opacity:1;\\\" offset=\\\"0.8348\\\" id=\\\"stop3828\\\" />\\n          <stop style=\\\"stop-color:#a7a7a7;stop-opacity:1;\\\" offset=\\\"1\\\" id=\\\"stop3818\\\" />\\n        </linearGradient>\\n        <linearGradient id=\\\"linearGradient5090\\\">\\n          <stop style=\\\"stop-color:#b38443;stop-opacity:1;\\\" offset=\\\"0\\\" id=\\\"stop5092\\\" />\\n          <stop id=\\\"stop5098\\\" offset=\\\"0.5\\\" style=\\\"stop-color:#694d27;stop-opacity:1;\\\" />\\n          <stop style=\\\"stop-color:#4f3a1e;stop-opacity:1;\\\" offset=\\\"1\\\" id=\\\"stop5094\\\" />\\n        </linearGradient>\\n        <linearGradient id=\\\"linearGradient5072\\\">\\n          <stop style=\\\"stop-color:#888888;stop-opacity:1;\\\" offset=\\\"0\\\" id=\\\"stop5074\\\" />\\n          <stop id=\\\"stop5086\\\" offset=\\\"0.2385\\\" style=\\\"stop-color:#707070;stop-opacity:1;\\\" />\\n          <stop id=\\\"stop5080\\\" offset=\\\"0.3664\\\" style=\\\"stop-color:#ababab;stop-opacity:1;\\\" />\\n          <stop style=\\\"stop-color:#9d9d9d;stop-opacity:1;\\\" offset=\\\"0.8549\\\" id=\\\"stop5082\\\" />\\n          <stop style=\\\"stop-color:#cbcbcb;stop-opacity:1;\\\" offset=\\\"1\\\" id=\\\"stop5076\\\" />\\n        </linearGradient>\\n        <radialGradient xlink:href=\\\"#linearGradient5072\\\" id=\\\"radialGradient5088\\\" cx=\\\"-0.2604\\\" cy=\\\"-10.11\\\" fx=\\\"-0.2604\\\"\\n          fy=\\\"-10.11\\\" r=\\\"4.361\\\" gradientTransform=\\\"matrix(1.778,-0.4014,0.7006,3.099,7.308,20.75)\\\"\\n          gradientUnits=\\\"userSpaceOnUse\\\"></radialGradient>\\n        <linearGradient xlink:href=\\\"#linearGradient5090\\\" id=\\\"linearGradient5096\\\" x1=\\\"-0.3107\\\" y1=\\\"-5.068\\\" x2=\\\"2.185\\\"\\n          y2=\\\"-5.068\\\" gradientUnits=\\\"userSpaceOnUse\\\" />\\n      </defs>\\n    \\n      <path style=\\\"fill:black;stroke:none;fill-rule:nonzero\\\" id=\\\"bras1\\\"\\n        d=\\\"M 217.8,126.9 C 208.4,120.7 202.2,122 190.6,126.9 179,131.9 168.3,136.3 166.1,141.2 163.8,146.1 149.1,175.6 147.3,176.5 145.5,177.4 140.6,181.9 137,187.7 133.5,193.5 129.4,204.2 137,201.9 144.6,199.7 145.1,195.7 149.5,190.8 154,185.9 153.1,182.8 157.6,177.8 162,172.9 168,152.4 175.3,149.3 182.6,146.1 192,141.7 200,142.6 208,143.5 227.2,133.2 217.8,126.9 z\\\">\\n        <animate attributeName=\\\"d\\\" attributeType=\\\"XML\\\" repeatCount=\\\"indefinite\\\" fill=\\\"freeze\\\" dur=\\\"1s\\\"\\n          values=\\\"\\n                         M 217.8,126.9 C 208.4,120.7 202.2,122 190.6,126.9 179,131.9 168.3,136.3 166.1,141.2 163.8,146.1 149.1,175.6 147.3,176.5 145.5,177.4 140.6,181.9 137,187.7 133.5,193.5 129.4,204.2 137,201.9 144.6,199.7 145.1,195.7 149.5,190.8 154,185.9 153.1,182.8 157.6,177.8 162,172.9 168,152.4 175.3,149.3 182.6,146.1 192,141.7 200,142.6 208,143.5 227.2,133.2 217.8,126.9 z;\\n                         M 216.5,128.2 C 205.6,125.4 202.2,126 190.6,130.9 179,135.9 153.3,149.3 151.1,154.2 148.8,159.1 148.3,170 148.3,175.5 148.3,182.7 144,182.8 146,189.4 149.2,199.9 153.7,199.1 161.3,196.8 168.9,194.6 164.2,189.3 162.7,186.3 159.6,180.4 154.4,184.3 156.5,178 159.3,169.3 163.5,161.8 166,156.8 166.6,155.4 177.1,151 185.2,149.6 201.7,146.7 219.3,138.8 216.5,128.2 z;\\n                         M 221.8,122.7 C 212.9,115.8 204.3,125.1 192.6,135.7 183.3,144.2 170.3,172.1 168.1,177 165.8,181.9 163.3,192.7 163.3,198.3 163.3,205.4 163,206.6 165,213.1 168.2,223.7 170.7,221.8 178.3,219.6 185.9,217.4 181.2,212 179.7,209.1 176.6,203.1 172.7,203.2 174.8,196.9 177.6,188.3 180.3,181.8 182.8,176.8 183.4,175.4 189.7,158.8 196.5,154.3 206.3,147.7 235.3,133 221.8,122.7 z;\\n                         M 221.8,125.7 C 212.9,118.8 203,136.8 192.5,148.9 184.2,158.4 180.3,178.5 181.2,183.9 182.1,189.2 192.1,224.6 195.2,229.2 199.2,235.1 199.6,239.2 204.9,243.5 213.5,250.5 214.5,247.5 219.6,241.4 224.6,235.3 217.7,233.6 214.8,232 208.9,228.8 205.8,231 204,224.6 201.5,215.9 200.1,203 199.3,197.5 199.1,196 193.7,182.7 202.1,168.1 210.5,153.3 235.3,136 221.8,125.7 z;\\n                         M221.839,124.362c-8.955-6.88-12.366,6.424-16.506,21.971   c-3.242,12.178-3.122,32.129,2.053,33.657c5.173,1.526,34.2,6.306,39.664,6.962c5.95,0.714,7.354,4.548,14.168,4.571   c8.782,0.028,17.704-0.602,22.449-7.19c2.596-3.604-14.699-5.901-20.468-7.776c-6.36-2.067-9.817,0.688-16.354-0.475   c-8.976-1.601-22.131-6.991-27.488-8.708c-1.426-0.458-4.64-0.543,1.976-16.04C228.46,134.636,235.25,134.667,221.839,124.362z;\\n                         M 218.5,123.7 C 209.8,126.5 214.4,132.6 219.2,148 222.9,160 233.8,175 239,173.5 245.7,171.7 263.3,160.7 266,157.8 270.7,153 272,149.4 277.8,145.8 285.3,141.2 284.8,136.4 285.3,128.3 285.6,123.9 274.5,131.7 268.7,135.2 262.9,138.6 265.3,146.3 259.3,150 251.5,154.7 244.5,159.5 239,160.8 237.6,161.2 238.5,161.1 234.7,144.7 232,133.3 226.5,121.7 218.5,123.7 z;\\n                         M 226.3,128.7 C 224.7,136.1 231.5,140.3 245.3,142.1 257.8,143.7 274.9,153.1 278.9,149.4 284,144.7 294.7,126.9 295.8,123.2 297.8,116.8 297.4,113 300.9,107.1 305.5,99.62 302.9,95.6 299.7,88.14 297.9,84.06 291.6,96.02 287.9,101.8 284.3,107.4 290,113.3 286.3,119.2 281.5,127 278.9,129.6 274.7,133.3 273.5,134.3 269.4,136.1 253,129.5 242.4,124.8 231.2,118.5 226.3,128.7 z;\\n                         M 220.4,144 C 220.3,150.5 226,153.3 248.7,158.7 271.3,164 281,164.3 283,162.5 285,160.7 289.3,152 292,135.7 294.7,119.3 293.3,118.3 294.3,115 295.3,111.7 299,99.33 298,94.33 297,89.33 290,80.34 288.7,83.33 287.3,86.33 283,109.3 283.7,117.7 284.3,126 281.3,132 277.7,139.7 271.5,152.8 271.3,150.7 256.7,143.7 225.3,128.7 220.4,140 220.4,144 z;\\n                         M 217.5,140.5 C 215.2,146.5 218.5,150.9 237.1,164.9 255,178.3 261,179.9 263.6,178.9 266.1,177.9 271.9,173 281.3,159.4 289.1,148 292.8,154.2 294.9,151.5 297.1,148.7 305.8,135.5 306.7,130.4 307.5,125.4 304.1,114.5 301.8,116.8 283.2,137.1 282.4,129.9 279.2,148.8 275.5,153.6 272.6,154.8 268.4,156.6 254.9,162.9 260.1,159.6 251.9,151 245.1,143.6 224.4,123.9 217.5,140.5 z;\\n                         M 214.3,127.7 C 208.2,129.8 208,135.2 209.2,158.4 210.4,180.8 216.7,189.7 217.7,192.2 218.7,194.7 227.6,208.5 241.2,217.9 252.6,225.7 250.3,228.4 253.1,230.6 255.9,232.7 263.1,238.5 268.1,239.3 273.2,240.1 284.1,237.7 281.7,235.4 263.1,214.2 267.5,220.1 251.8,215.9 247,212.1 238.8,198.2 236.9,194 229.9,181.6 227.3,172.7 228.4,160.8 228,147.7 234.2,121 214.3,127.7 z;\\n                         M 214.3,126.7 C 208.2,128.8 204.3,137.8 199.2,158.4 193.9,180.2 195.5,187.7 196.5,190.3 197.5,192.8 203.3,203.5 212.8,222 219.1,234.3 217.3,237.3 217,240.8 216.8,244.3 223.1,252.3 227.8,257.5 231.1,261.3 240.5,261.2 240.5,257.9 232.8,234.5 242.8,244.4 226.7,228 223.3,222.9 219.1,204.2 217.3,200 208.6,181.1 206.5,176.9 215,162.7 221.9,153.6 237.8,119.1 214.3,126.7 z;   \\n                         M 209.3,121.7 C 203.2,123.8 196.1,138 190.2,158.4 186.5,171.6 185.7,171.3 184,180.3 183.5,183 180,190.6 179.7,211.7 179.5,225.5 175.7,224.1 174.7,227.5 172.8,234 172.9,238 172.4,244.9 172.1,250 176.8,256.5 179.2,254.2 188.3,233.6 189.3,251 189.5,220.3 190.8,214.3 192.9,205.8 194,201.3 195.6,179.5 197.6,184.1 207,162.8 209.3,158 230.4,114.9 209.3,121.7 z;\\n                         M 215.3,119 C 209.1,121.1 205.5,125.2 192.8,136 182.3,144.8 177.4,147.8 175.8,156.8 175.3,159.4 175.2,161.2 167,180.2 160.2,195.9 158.4,208.2 157.8,210 154,220.8 146.4,221.8 146,228.8 145.7,233.8 146,238.7 152.3,235.2 165.1,218.1 166.5,235.7 168.5,202.2 169.7,196.2 174.1,190 176.9,186.3 187.2,173 187.7,158.2 204.3,147 222.2,134.9 230.9,114.6 215.3,119 z;\\n                         M 224.3,120 C 218.1,122.1 208.5,121.2 195.8,132 185.3,140.8 173.4,138.8 171.8,147.8 171.3,150.4 171.2,152.2 163,171.2 156.2,186.9 156.4,196.2 155.8,198 152,208.8 144.4,214.8 144,221.8 143.7,226.8 144,231.7 150.3,228.2 162.9,210.9 166.7,226 165.5,193.2 166.7,187.2 170.1,181 172.9,177.3 186.2,161.1 178.2,159.8 205.3,147 231,140.4 238.7,120.5 224.3,120 z;\\n                         M 217.8,126.9 C 208.4,120.7 202.2,122 190.6,126.9 179,131.9 168.3,136.3 166.1,141.2 163.8,146.1 149.1,175.6 147.3,176.5 145.5,177.4 140.6,181.9 137,187.7 133.5,193.5 129.4,204.2 137,201.9 144.6,199.7 145.1,195.7 149.5,190.8 154,185.9 153.1,182.8 157.6,177.8 162,172.9 168,152.4 175.3,149.3 182.6,146.1 192,141.7 200,142.6 208,143.5 227.2,133.2 217.8,126.9 z\\\" />\\n      </path>\\n      <path style=\\\"fill:black;stroke:none;fill-rule:nonzero\\\" id=\\\"leg1\\\"\\n        d=\\\"M 198.1,209.3 C 187.3,210 178.3,210.7 178,218 177.7,225.3 185,236.6 200,236.3 215,236 235.3,236.6 245.7,236.3 256,236 257.3,236 256,239 254.7,242 251.3,253.3 250,268.3 248.7,283.3 252.7,303 253.3,310 254,317 251,326.7 261,324.3 271,322 280.7,318.7 289.3,311.7 298,304.7 298.2,301 298.2,301 298.2,301 283,306 276.7,306.7 270.3,307.3 259.5,307 259.3,304.3 259,301.7 258.3,288.3 265.3,269 272.3,249.7 275.7,240.7 277.3,234.7 279,228.7 280.7,222 268,218.7 255.3,215.3 238.4,212 220.4,211 202.3,210 205.3,208.9 198.1,209.3 z\\\">\\n        <animate attributeName=\\\"d\\\" attributeType=\\\"XML\\\" repeatCount=\\\"indefinite\\\" fill=\\\"freeze\\\" dur=\\\"1s\\\" values=\\\"\\n                         M 198.1,209.3 C 187.3,210 178.3,210.7 178,218 177.7,225.3 185,236.6 200,236.3 215,236 235.3,236.6 245.7,236.3 256,236 257.3,236 256,239 254.7,242 251.3,253.3 250,268.3 248.7,283.3 252.7,303 253.3,310 254,317 251,326.7 261,324.3 271,322 280.7,318.7 289.3,311.7 298,304.7 298.2,301 298.2,301 298.2,301 283,306 276.7,306.7 270.3,307.3 259.5,307 259.3,304.3 259,301.7 258.3,288.3 265.3,269 272.3,249.7 275.7,240.7 277.3,234.7 279,228.7 280.7,222 268,218.7 255.3,215.3 238.4,212 220.4,211 202.3,210 205.3,208.9 198.1,209.3 z;\\n                         M 188.8,223 C 178,223.6 169,224.3 168.7,231.7 168.3,239 172.9,249.1 187.7,252 206.7,255.7 222,254.9 232.3,254 246.7,252.7 248,249.7 246.7,252.7 245.3,255.7 249.3,271 256.7,285 263.7,298.3 289.3,335.7 290,342.7 290.7,349.7 292.3,354.2 301.7,350 314.9,344 317.3,342.3 326,335.3 334.7,328.3 332.8,321.7 332.8,321.7 332.8,321.7 319.7,330.7 313.3,331.3 307,332 301.3,332.3 299.9,330 295.6,322.4 286.4,312 279,282.7 274,262.7 271.6,257 270,248.3 267.2,233.3 271.3,235.7 258.7,232.3 246,229 229.1,225.7 211,224.7 193,223.7 195.9,222.6 188.8,223 z;\\n                         M 190.7,203.2 C 180,203.8 178.6,208.4 178.3,215.8 177.9,223.1 182.6,222.3 191.8,234.1 203.1,248.6 219.5,261.9 227,269 231.5,273.3 230.9,275.5 231.6,278.8 232.6,283.3 231.6,288.5 231.6,309.8 231.6,324.8 234.8,344 233,351.6 231.4,358.5 225.7,365.4 236,365.4 250.5,365.4 260.6,365.4 271.8,365.4 286.5,365.4 285,358.8 285,358.8 285,358.8 271.5,356.8 262.3,354 256.1,352.2 243.8,346.3 242.5,344 238.2,336.4 241.8,325.4 248.4,295.8 251.6,281.6 253.3,278.8 254.5,272 255.4,266.9 253.1,261.5 244.3,254 234.2,245.6 223.8,231.8 213,217.8 202,203.4 197.9,202.8 190.7,203.2 z;\\n                         M 199.7,207.2 C 189,207.8 188.6,208.4 188.3,215.8 187.9,223.1 186.1,226.2 193.8,239.1 202.8,254.2 210.5,269.5 218,282.3 221.1,287.6 217.8,287 216.3,289.3 213,294.7 210.7,293.9 203.3,313.9 198,328.4 197.5,342 195.7,349.6 194.1,356.5 185.7,365.4 196,365.4 210.5,365.4 220.6,365.4 231.8,365.4 246.5,365.4 245,358.8 245,358.8 245,358.8 231.9,358.9 222.7,356.1 216.5,354.3 205.9,352.7 205.5,350 204.1,341.4 216.8,318.6 220.8,311 225.2,302.7 230.3,292.5 234.5,288 238,284.3 237.4,274.5 233.3,264 228.5,251.8 223.8,231.8 213,217.8 202,203.4 206.9,206.8 199.7,207.2 z;\\n                         M 193.7,204.2 C 183,204.8 180.7,206.7 180.3,214 180,221.3 180.5,226.6 184.7,241 189.3,257.3 191.3,264.7 196.7,282.3 198.5,288.3 195.9,288.1 193,289.7 187.4,292.7 187.4,292.7 181.3,307 175.3,321.2 168.1,335.2 166.4,342.8 164.8,349.7 157.7,350.3 166.5,355.6 175.8,361.2 185.6,365.4 196.7,365.4 211.5,365.4 211,358.8 211,358.8 211,358.8 201.3,357.9 192,355.1 185.9,353.3 175.8,343.6 176.5,341 178,335.3 184.9,322.4 194.9,311.6 205.9,299.9 209.8,291 214.1,286.5 217.6,282.8 215.6,274.3 215,263 214.4,251.3 212.7,243.9 210.3,231.7 207.4,216.8 200.9,203.8 193.7,204.2 z;\\n                         M 196.5,209.6 C 186.4,205.8 183.7,208.5 180.3,214 176.5,220.2 178.4,218.6 178.2,233.7 178,248.9 178.8,261.1 179.5,281.2 179.7,287.3 178.1,287.4 176,289.9 172.3,294.3 174.3,294 163.3,301.8 157.2,306.1 145,324.1 138.4,328.2 132.4,331.9 126.9,331.3 129.4,341.3 132,351.8 142.4,365.3 153.5,365.4 168.9,365.5 168.8,365 168.8,365 168.8,365 156,358.8 151.4,350.3 148.4,344.7 147.1,333.1 149.6,332.2 153.4,330.7 169.6,314.8 177.5,310.3 192.3,301.9 195.4,298.5 199.5,293.9 202.5,290.4 203.2,284.8 203.8,273.5 204.5,257.8 206.7,245.8 204.3,233.6 201.4,218.7 200.8,211.2 196.5,209.6 z;\\n                         M 194.5,207.3 C 184.2,203.9 180.7,206.7 180.3,214 180,221.3 181.3,217.4 176.7,231.7 174.3,239 170.9,258.4 167.2,272.1 165.6,278 165.6,278.1 162.1,284.1 159.2,289.2 146.5,287.3 136,295.8 123.9,305.5 110.1,318.5 103.5,322.6 97.52,326.3 86.77,319 89.25,329 91.88,339.5 91.74,360.5 102.4,363.6 110.6,366 118.5,365 118.5,365 118.5,365 105.5,358 106.2,348.4 107.1,336.1 107.1,331.5 110,328.6 112.9,325.8 129.8,314.3 154.7,307.2 167.9,303.4 173.7,303.8 178.3,297.6 182.7,291.7 187.7,279.6 192,269.1 200.4,248.5 206.6,238.9 205.7,224.2 204.7,209.1 203.3,210.1 194.5,207.3 z;\\n                         \\n                         \\n                         M 189.2,225.2 C 187,214.6 182.5,214 178.8,213 171.8,211 170.2,209.3 159.3,217.1 153,221.5 151,224.8 143,235.2 139.2,240.1 124.2,252.6 120.7,258.6 117.8,263.7 104.3,257.8 93.83,266.3 81.75,276 63.89,303.3 57.29,307.4 51.31,311.1 44.58,307.6 44.05,313.3 43.03,324.1 42.76,323.4 39.52,334.1 35.95,345.8 31.12,354.6 31.12,354.6 31.12,354.6 40.29,345.5 46.1,337.8 54.07,327.3 58.59,321.9 62.78,315.5 64.98,312.1 80.56,299.2 104.2,283.7 115.7,276.2 122.4,270.6 130.1,270.1 138.2,269.5 149.6,262.7 154.7,259.7 159.5,256.9 171.9,248.5 179.9,242.4 185.8,237.9 190.7,232.4 189.2,225.2 z;\\n                         M 189.2,225.2 C 188.3,219.1 182.5,216 178.8,215 171.8,213 162.9,215.1 159,219.9 154.2,225.9 154,233.9 149.3,244.8 146.9,250.5 138.6,286.4 135.1,292.4 132.2,297.5 129.6,289.6 111.5,293.3 96.33,296.4 67.93,306.8 60.07,309.4 53.39,311.6 43.82,306.3 43.29,312 42.27,322.8 42.76,323.4 39.52,334.1 35.95,345.8 31.12,354.6 31.12,354.6 31.12,354.6 40.29,345.5 46.1,337.8 54.07,327.3 58.59,321.9 62.78,315.5 64.98,312.1 84.31,311.7 112.5,313.2 123.3,313.8 133.4,311.9 141,313.3 148.8,314.7 148.6,303.6 153.7,300.6 158.5,297.8 174.2,275.2 179.1,266.4 184.8,256.3 190.3,232.5 189.2,225.2 z;\\n                         M 201.4,216.1 C 199.2,205.5 192.6,206.1 188.9,205.1 181.9,203.1 176.8,207 172.9,211.8 168.1,217.8 171.5,233.4 166.8,244.3 164.4,250 166.7,256.1 163.2,262.1 160.3,267.2 163.2,260.1 142.9,253.9 128,249.5 116.4,253 107.8,251.1 100.9,249.5 99.38,241.4 93.29,248.9 86.44,257.3 87.72,264.3 82.2,272 75.06,281.9 72.03,285.9 72.03,285.9 72.03,285.9 82.64,286.2 89.54,279.5 100,269.3 100.3,267 108,262.3 111.1,260.3 122.5,266.6 147.6,279.9 162,287.5 164.4,292.3 171.3,288.8 176.1,286.4 179.1,279.1 182.3,274.1 188.8,264 190.9,254.7 195.8,245.9 201.5,235.8 202.9,223.3 201.4,216.1 z;\\n                         M 210.5,222.4 C 208,215.3 200.9,215.9 197.2,214.9 190.2,212.9 186.4,213.8 182.5,218.6 177.7,224.6 180.4,226.6 181.7,240 182.7,250.5 183.8,259.1 184.9,269.9 185.5,275.7 179.1,268.5 172.4,266.8 157.3,263.1 145.2,261.8 136.6,259.9 129.7,258.3 127.7,249.2 121.6,256.7 114.7,265.1 113.7,271.1 108.2,278.8 101.1,288.7 95.01,291.5 95.01,291.5 95.01,291.5 105.6,291.8 112.5,285.1 123,274.9 123.3,272.6 131,267.9 134.1,265.9 143.5,269.1 168.6,282.4 183,290 189.1,298.9 196,295.4 200.8,293 203.6,284.3 205.5,278.6 210,265.3 210.3,259.9 211.7,249.9 214.1,231.7 212.9,229.3 210.5,222.4 z;\\n                         M 209.9,222.8 C 207.4,215.7 203.6,212.2 200,210.5 193.4,207.3 188.8,209.6 184.9,214.4 180.1,220.4 183.7,234.5 188.3,247.2 193.1,260.3 199.6,262.5 203.3,273.2 205.3,278.7 199.8,273.6 193.1,271.9 178,268.2 170.9,272.8 162.1,272.5 152.7,272.2 151.4,265.9 147.6,270.3 140.5,278.6 145.8,283 145.3,294.5 144.6,312 150.8,314.2 150.8,314.2 150.8,314.2 150.7,308 154.2,296.2 156.8,287.3 156.4,284.7 159.5,281.3 162,278.6 167.2,281 192.3,285.9 208.3,289.1 215.9,296.9 220.5,290.6 223.5,286.4 222.3,277.1 221.4,271.2 220.5,264.8 219.1,261 217,251.2 213.1,232.5 212.3,229.7 209.9,222.8 z;\\n                         M 216.6,217.8 C 212.3,214.1 210.3,212.6 206.4,211.5 199.8,209.6 195.6,209.3 191.7,214.1 186.9,220.1 189.8,225.2 196.6,234.3 205,245.5 213,249 218.7,257.5 222,262.4 221.7,261.2 214.8,261.8 198.2,263.1 191.5,274.9 182.7,274.6 173.3,274.3 174,267.2 170.5,271.9 166.2,277.8 170.1,280.4 162.4,293.8 156.8,303.4 155.5,307.4 155.5,307.4 155.5,307.4 166.2,305.8 172.8,295.4 176.8,289 177.3,287.7 180.4,284.3 182.9,281.6 195.7,279.2 221.2,277.7 236.5,276.8 241.5,273.6 243.9,266.1 246.2,258.9 244.2,257.8 241.7,252.4 238.1,244.6 232.6,239.9 226.7,231.7 220,222.4 220.7,221.3 216.6,217.8 z;\\n                         M 224.9,202.7 C 218.3,201.3 210,199.5 206,200.1 197.8,201.2 191.9,206.1 192.4,215 193.1,226.6 207.4,226.3 217.1,231.2 227.2,236.4 246.6,235.1 252.3,243.6 255.6,248.5 255.9,244.6 249.4,247.2 235.7,252.6 231.8,269.8 224.6,271.4 219.5,272.6 214.5,270.4 213.7,278.3 213,285.6 219.9,290.7 223.4,307 225.8,317.9 232.8,322 232.8,322 232.8,322 230.3,303.3 230.1,295.6 229.9,285 227.8,281.4 230.9,278 233.4,275.3 238.2,269.8 263.9,259.1 277.7,253.4 276.2,251.8 277.3,244 278.4,236.8 265,226.9 260.3,223.1 256.2,219.8 250.8,216.9 242.7,210.8 236.5,206.2 231.5,204.2 224.9,202.7 z;\\n                         \\n                         M 198.1,209.3 C 187.3,210 178.3,210.7 178,218 177.7,225.3 185,236.6 200,236.3 215,236 235.3,236.6 245.7,236.3 256,236 257.3,236 256,239 254.7,242 251.3,253.3 250,268.3 248.7,283.3 252.7,303 253.3,310 254,317 251,326.7 261,324.3 271,322 280.7,318.7 289.3,311.7 298,304.7 298.2,301 298.2,301 298.2,301 283,306 276.7,306.7 270.3,307.3 259.5,307 259.3,304.3 259,301.7 258.3,288.3 265.3,269 272.3,249.7 275.7,240.7 277.3,234.7 279,228.7 280.7,222 268,218.7 255.3,215.3 238.4,212 220.4,211 202.3,210 205.3,208.9 198.1,209.3 z\\n                         \\\" />\\n      </path>\\n    \\n      <path style=\\\"fill:#111;stroke:none;fill-rule:nonzero\\\" id=\\\"tete\\\"\\n        d=\\\"M 222,128.8 C 226.5,124.3 230,126.6 231.3,122.7 232.7,118.8 228.7,112.5 231.3,102.7 234,92.83 235.7,86.33 244.3,86.33 253,86.33 266.8,90.17 265.3,108.3 263.8,126.5 258.8,128 255,131.2 251.2,134.3 242.7,134.2 240.3,132.2 238,130.2 237.7,126.5 237.7,126.5 237.7,126.5 239.7,132.2 239.3,134.5 239,136.8 234.2,139.5 231.5,138.8 228.8,138.2 220.3,130.5 222,128.8 z\\\">\\n        <animate attributeName=\\\"d\\\" attributeType=\\\"XML\\\" repeatCount=\\\"indefinite\\\" fill=\\\"freeze\\\" dur=\\\"0.5s\\\" values=\\\"\\n                         M 222,128.8 C 226.5,124.3 230,126.6 231.3,122.7 232.7,118.8 228.7,112.5 231.3,102.7 234,92.83 235.7,86.33 244.3,86.33 253,86.33 266.8,90.17 265.3,108.3 263.8,126.5 258.8,128 255,131.2 251.2,134.3 242.7,134.2 240.3,132.2 238,130.2 237.7,126.5 237.7,126.5 237.7,126.5 239.7,132.2 239.3,134.5 239,136.8 234.2,139.5 231.5,138.8 228.8,138.2 220.3,130.5 222,128.8 z;\\n                         M 222,128.8 C 226.5,124.3 229,126.6 230.3,122.7 231.9,118.1 228.8,111.9 231.3,102.7 234,92.83 235.7,86.33 244.3,86.33 253,86.33 265.8,86.67 264.3,104.8 262.8,123 257.4,127.9 253,130.2 247.8,132.8 242.7,132.2 240.3,130.2 238,128.2 236.7,125.5 236.7,125.5 236.7,125.5 237.7,132.2 237.3,134.5 237,136.8 234.2,139.5 231.5,138.8 228.8,138.2 220.3,130.5 222,128.8 z;\\n                         M 218,126.8 C 222.5,122.3 227,128.6 228.3,124.7 229.9,120.1 224.8,114.9 227.3,105.7 230,95.83 234.7,87.33 243.3,87.33 252,87.33 263.8,86.67 262.3,104.8 260.8,123 255.4,126.9 251,129.2 245.8,131.8 242.7,132.2 240.3,130.2 238,128.2 237.7,128.5 237.7,128.5 237.7,128.5 233.7,131.2 233.3,133.5 233,135.8 230.2,138.5 227.5,137.8 224.8,137.2 216.3,128.5 218,126.8 z;\\n                         M 218,126.8 C 222.5,122.3 222,125.6 223.3,121.7 224.9,117.1 219.8,111.9 222.3,102.7 225,92.83 229.7,84.33 238.3,84.33 247,84.33 258.8,83.67 257.3,101.8 255.8,120 250.4,123.9 246,126.2 240.8,128.8 237.7,129.2 235.3,127.2 233,125.2 232.7,125.5 232.7,125.5 232.7,125.5 230.7,130.2 230.3,132.5 230,134.8 227.2,137.5 224.5,136.8 221.8,136.2 216.3,128.5 218,126.8 z;\\n                         M 218,126.8 C 222.5,122.3 222,125.6 223.3,121.7 224.9,117.1 223.8,111.9 226.3,102.7 229,92.83 234.7,85.33 243.3,85.33 252,85.33 260.3,88.33 260.3,102.8 260.3,119.7 256.4,122.9 252,125.2 246.8,127.8 240.7,129.2 238.3,127.2 236,125.2 235.7,125.5 235.7,125.5 235.7,125.5 230.7,130.2 230.3,132.5 230,134.8 227.2,137.5 224.5,136.8 221.8,136.2 216.3,128.5 218,126.8 z;\\n                         M 218,126.8 C 222.5,122.3 225.4,125.3 226.7,121.4 228.3,116.8 223.8,111.9 226.3,102.7 229,92.83 234.7,85.33 243.3,85.33 252,85.33 260.3,88.33 260.3,102.8 260.3,119.7 256.4,122.9 252,125.2 246.8,127.8 240.7,129.2 238.3,127.2 236,125.2 235.7,125.5 235.7,125.5 235.7,125.5 230.7,130.2 230.3,132.5 230,134.8 227.2,137.5 224.5,136.8 221.8,136.2 216.3,128.5 218,126.8 z;\\n                         M 223,123.8 C 227.5,119.3 228.1,123.1 229.4,119.2 231,114.6 228.8,108.9 231.3,99.67 234,89.83 239.7,82.33 248.3,82.33 257,82.33 265.3,85.33 265.3,99.83 265.3,116.7 261.4,119.9 257,122.2 251.8,124.8 245.7,126.2 243.3,124.2 241,122.2 240.7,122.5 240.7,122.5 240.7,122.5 235.7,127.2 235.3,129.5 235,131.8 232.2,134.5 229.5,133.8 226.8,133.2 221.3,125.5 223,123.8 z;\\n                         M 222,128.8 C 226.5,124.3 230,126.6 231.3,122.7 232.7,118.8 228.7,112.5 231.3,102.7 234,92.83 235.7,86.33 244.3,86.33 253,86.33 266.8,90.17 265.3,108.3 263.8,126.5 258.8,128 255,131.2 251.2,134.3 242.7,134.2 240.3,132.2 238,130.2 237.7,126.5 237.7,126.5 237.7,126.5 239.7,132.2 239.3,134.5 239,136.8 234.2,139.5 231.5,138.8 228.8,138.2 220.3,130.5 222,128.8 z\\n                         \\\" />\\n      </path>\\n      <path style=\\\"fill:#111;stroke:none;fill-rule:nonzero\\\" id=\\\"corps\\\"\\n        d=\\\"M 225.3,128.7 C 214.6,125.2 214.3,123.3 203.7,132.3 193,141.3 177.3,157.7 169,180.7 160.7,203.7 166,208.3 160.7,215.7 155.3,223 182,245.7 193,232 204,218.3 203,214.3 205.3,198.3 207.7,182.3 222,161 228.7,152.7 235.3,144.3 243.2,134.5 225.3,128.7 z\\\">\\n        <animate attributeName=\\\"d\\\" attributeType=\\\"XML\\\" repeatCount=\\\"indefinite\\\" fill=\\\"freeze\\\" dur=\\\"0.5s\\\" values=\\\"\\n                         M 225.3,128.7 C 214.6,125.2 214.3,123.3 203.7,132.3 193,141.3 177.3,157.7 169,180.7 160.7,203.7 166,208.3 160.7,215.7 155.3,223 182,245.7 193,232 204,218.3 203,214.3 205.3,198.3 207.7,182.3 222,161 228.7,152.7 235.3,144.3 243.2,134.5 225.3,128.7 z;\\n                         M 229.3,126.7 C 219,122.1 214.3,123.3 203.7,132.3 193,141.3 177.3,157.7 169,180.7 160.7,203.7 156.6,226.8 160.7,235.7 165.5,246.3 182,245.7 193,232 204,218.3 203,214.3 205.3,198.3 207.7,182.3 225,162 231.7,153.7 238.3,145.3 245.3,133.8 229.3,126.7 z;\\n                         M 223.3,124.7 C 213.4,120.3 207.7,125.3 200.7,131.3 190.1,140.4 177.3,157.7 169,180.7 161.8,200.4 164.1,220.1 166.7,225.7 171.5,236.3 186,245.7 197,232 208,218.3 198,214.3 200.3,198.3 202.7,182.3 215,162 221.7,153.7 228.3,145.3 240.4,132.1 223.3,124.7 z;\\n                         M 223.3,124.7 C 215.4,123.4 208.8,125.3 201.7,135.3 193.6,146.7 187.8,154.5 181,183.7 176.3,204.1 179.1,220.1 181.7,225.7 186.5,236.3 202.5,247.8 212,233 220,220.5 213,210 214.3,198.3 216.2,182.3 220,165 226.7,156.7 233.3,148.3 240.5,127.5 223.3,124.7 z;\\n                         M 221.3,120.7 C 213.4,119.4 206.8,121.3 199.7,131.3 191.6,142.7 184.8,149.5 178,178.7 173.3,199.1 177.1,215.1 179.7,220.7 184.5,231.3 193.5,243.8 203,229 211,216.5 206,205 207.3,193.3 209.2,177.3 214,159 220.7,150.7 227.3,142.3 238.5,123.5 221.3,120.7 z;\\n                         M 222.3,121.7 C 214.4,120.4 208.8,122.3 201.7,132.3 193.6,143.7 187.8,149.5 181,178.7 176.3,199.1 181.1,215.1 183.7,220.7 188.5,231.3 197.5,243.8 207,229 215,216.5 210,205 211.3,193.3 213.2,177.3 219,159 225.7,150.7 232.3,142.3 239.5,124.5 222.3,121.7 z;\\n                         M 233.3,119.7 C 225.4,118.4 218.8,120.3 211.7,130.3 203.6,141.7 187.8,151.5 181,180.7 176.3,201.1 181.1,215.1 183.7,220.7 188.5,231.3 197.5,243.8 207,229 215,216.5 211.8,204.8 214.3,193.3 218.3,175.3 230,157 236.7,148.7 243.3,140.3 250.5,122.5 233.3,119.7 z;\\n                         M 225.3,128.7 C 214.6,125.2 214.3,123.3 203.7,132.3 193,141.3 177.3,157.7 169,180.7 160.7,203.7 166,208.3 160.7,215.7 155.3,223 182,245.7 193,232 204,218.3 203,214.3 205.3,198.3 207.7,182.3 222,161 228.7,152.7 235.3,144.3 243.2,134.5 225.3,128.7 z\\n                                             \\n                         \\\" />\\n      </path>\\n    \\n      <path style=\\\"fill:#222;stroke:none;fill-rule:nonzero\\\" id=\\\"leg2\\\"\\n        d=\\\"M 189.2,225.2 C 187,214.6 182.5,214 178.8,213 171.8,211 170.2,209.3 159.3,217.1 153,221.5 151,224.8 143,235.2 139.2,240.1 124.2,252.6 120.7,258.6 117.8,263.7 104.3,257.8 93.83,266.3 81.75,276 63.89,303.3 57.29,307.4 51.31,311.1 44.58,307.6 44.05,313.3 43.03,324.1 42.76,323.4 39.52,334.1 35.95,345.8 31.12,354.6 31.12,354.6 31.12,354.6 40.29,345.5 46.1,337.8 54.07,327.3 58.59,321.9 62.78,315.5 64.98,312.1 80.56,299.2 104.2,283.7 115.7,276.2 122.4,270.6 130.1,270.1 138.2,269.5 149.6,262.7 154.7,259.7 159.5,256.9 171.9,248.5 179.9,242.4 185.8,237.9 190.7,232.4 189.2,225.2 z\\\">\\n        <animate attributeName=\\\"d\\\" attributeType=\\\"XML\\\" repeatCount=\\\"indefinite\\\" fill=\\\"freeze\\\" dur=\\\"1s\\\"\\n          values=\\\"\\n                         M 189.2,225.2 C 187,214.6 182.5,214 178.8,213 171.8,211 170.2,209.3 159.3,217.1 153,221.5 151,224.8 143,235.2 139.2,240.1 124.2,252.6 120.7,258.6 117.8,263.7 104.3,257.8 93.83,266.3 81.75,276 63.89,303.3 57.29,307.4 51.31,311.1 44.58,307.6 44.05,313.3 43.03,324.1 42.76,323.4 39.52,334.1 35.95,345.8 31.12,354.6 31.12,354.6 31.12,354.6 40.29,345.5 46.1,337.8 54.07,327.3 58.59,321.9 62.78,315.5 64.98,312.1 80.56,299.2 104.2,283.7 115.7,276.2 122.4,270.6 130.1,270.1 138.2,269.5 149.6,262.7 154.7,259.7 159.5,256.9 171.9,248.5 179.9,242.4 185.8,237.9 190.7,232.4 189.2,225.2 z;\\n                         M 189.2,225.2 C 188.3,219.1 182.5,216 178.8,215 171.8,213 162.9,215.1 159,219.9 154.2,225.9 154,233.9 149.3,244.8 146.9,250.5 138.6,286.4 135.1,292.4 132.2,297.5 129.6,289.6 111.5,293.3 96.33,296.4 67.93,306.8 60.07,309.4 53.39,311.6 43.82,306.3 43.29,312 42.27,322.8 42.76,323.4 39.52,334.1 35.95,345.8 31.12,354.6 31.12,354.6 31.12,354.6 40.29,345.5 46.1,337.8 54.07,327.3 58.59,321.9 62.78,315.5 64.98,312.1 84.31,311.7 112.5,313.2 123.3,313.8 133.4,311.9 141,313.3 148.8,314.7 148.6,303.6 153.7,300.6 158.5,297.8 174.2,275.2 179.1,266.4 184.8,256.3 190.3,232.5 189.2,225.2 z;\\n                         M 201.4,216.1 C 199.2,205.5 192.6,206.1 188.9,205.1 181.9,203.1 176.8,207 172.9,211.8 168.1,217.8 171.5,233.4 166.8,244.3 164.4,250 166.7,256.1 163.2,262.1 160.3,267.2 163.2,260.1 142.9,253.9 128,249.5 116.4,253 107.8,251.1 100.9,249.5 99.38,241.4 93.29,248.9 86.44,257.3 87.72,264.3 82.2,272 75.06,281.9 72.03,285.9 72.03,285.9 72.03,285.9 82.64,286.2 89.54,279.5 100,269.3 100.3,267 108,262.3 111.1,260.3 122.5,266.6 147.6,279.9 162,287.5 164.4,292.3 171.3,288.8 176.1,286.4 179.1,279.1 182.3,274.1 188.8,264 190.9,254.7 195.8,245.9 201.5,235.8 202.9,223.3 201.4,216.1 z;\\n                         M 210.5,222.4 C 208,215.3 200.9,215.9 197.2,214.9 190.2,212.9 186.4,213.8 182.5,218.6 177.7,224.6 180.4,226.6 181.7,240 182.7,250.5 183.8,259.1 184.9,269.9 185.5,275.7 179.1,268.5 172.4,266.8 157.3,263.1 145.2,261.8 136.6,259.9 129.7,258.3 127.7,249.2 121.6,256.7 114.7,265.1 113.7,271.1 108.2,278.8 101.1,288.7 95.01,291.5 95.01,291.5 95.01,291.5 105.6,291.8 112.5,285.1 123,274.9 123.3,272.6 131,267.9 134.1,265.9 143.5,269.1 168.6,282.4 183,290 189.1,298.9 196,295.4 200.8,293 203.6,284.3 205.5,278.6 210,265.3 210.3,259.9 211.7,249.9 214.1,231.7 212.9,229.3 210.5,222.4 z;\\n                         M 209.9,222.8 C 207.4,215.7 203.6,212.2 200,210.5 193.4,207.3 188.8,209.6 184.9,214.4 180.1,220.4 183.7,234.5 188.3,247.2 193.1,260.3 199.6,262.5 203.3,273.2 205.3,278.7 199.8,273.6 193.1,271.9 178,268.2 170.9,272.8 162.1,272.5 152.7,272.2 151.4,265.9 147.6,270.3 140.5,278.6 145.8,283 145.3,294.5 144.6,312 150.8,314.2 150.8,314.2 150.8,314.2 150.7,308 154.2,296.2 156.8,287.3 156.4,284.7 159.5,281.3 162,278.6 167.2,281 192.3,285.9 208.3,289.1 215.9,296.9 220.5,290.6 223.5,286.4 222.3,277.1 221.4,271.2 220.5,264.8 219.1,261 217,251.2 213.1,232.5 212.3,229.7 209.9,222.8 z;\\n                         M 216.6,217.8 C 212.3,214.1 210.3,212.6 206.4,211.5 199.8,209.6 195.6,209.3 191.7,214.1 186.9,220.1 189.8,225.2 196.6,234.3 205,245.5 213,249 218.7,257.5 222,262.4 221.7,261.2 214.8,261.8 198.2,263.1 191.5,274.9 182.7,274.6 173.3,274.3 174,267.2 170.5,271.9 166.2,277.8 170.1,280.4 162.4,293.8 156.8,303.4 155.5,307.4 155.5,307.4 155.5,307.4 166.2,305.8 172.8,295.4 176.8,289 177.3,287.7 180.4,284.3 182.9,281.6 195.7,279.2 221.2,277.7 236.5,276.8 241.5,273.6 243.9,266.1 246.2,258.9 244.2,257.8 241.7,252.4 238.1,244.6 232.6,239.9 226.7,231.7 220,222.4 220.7,221.3 216.6,217.8 z;\\n                         M 224.9,202.7 C 218.3,201.3 210,199.5 206,200.1 197.8,201.2 191.9,206.1 192.4,215 193.1,226.6 207.4,226.3 217.1,231.2 227.2,236.4 246.6,235.1 252.3,243.6 255.6,248.5 255.9,244.6 249.4,247.2 235.7,252.6 231.8,269.8 224.6,271.4 219.5,272.6 214.5,270.4 213.7,278.3 213,285.6 219.9,290.7 223.4,307 225.8,317.9 232.8,322 232.8,322 232.8,322 230.3,303.3 230.1,295.6 229.9,285 227.8,281.4 230.9,278 233.4,275.3 238.2,269.8 263.9,259.1 277.7,253.4 276.2,251.8 277.3,244 278.4,236.8 265,226.9 260.3,223.1 256.2,219.8 250.8,216.9 242.7,210.8 236.5,206.2 231.5,204.2 224.9,202.7 z;\\n                         \\n                         M 198.1,209.3 C 187.3,210 178.3,210.7 178,218 177.7,225.3 185,236.6 200,236.3 215,236 235.3,236.6 245.7,236.3 256,236 257.3,236 256,239 254.7,242 251.3,253.3 250,268.3 248.7,283.3 252.7,303 253.3,310 254,317 251,326.7 261,324.3 271,322 280.7,318.7 289.3,311.7 298,304.7 298.2,301 298.2,301 298.2,301 283,306 276.7,306.7 270.3,307.3 259.5,307 259.3,304.3 259,301.7 258.3,288.3 265.3,269 272.3,249.7 275.7,240.7 277.3,234.7 279,228.7 280.7,222 268,218.7 255.3,215.3 238.4,212 220.4,211 202.3,210 205.3,208.9 198.1,209.3 z;\\n                         M 188.8,223 C 178,223.6 169,224.3 168.7,231.7 168.3,239 172.9,249.1 187.7,252 206.7,255.7 222,254.9 232.3,254 246.7,252.7 248,249.7 246.7,252.7 245.3,255.7 249.3,271 256.7,285 263.7,298.3 289.3,335.7 290,342.7 290.7,349.7 292.3,354.2 301.7,350 314.9,344 317.3,342.3 326,335.3 334.7,328.3 332.8,321.7 332.8,321.7 332.8,321.7 319.7,330.7 313.3,331.3 307,332 301.3,332.3 299.9,330 295.6,322.4 286.4,312 279,282.7 274,262.7 271.6,257 270,248.3 267.2,233.3 271.3,235.7 258.7,232.3 246,229 229.1,225.7 211,224.7 193,223.7 195.9,222.6 188.8,223 z;\\n                         M 190.7,203.2 C 180,203.8 178.6,208.4 178.3,215.8 177.9,223.1 182.6,222.3 191.8,234.1 203.1,248.6 219.5,261.9 227,269 231.5,273.3 230.9,275.5 231.6,278.8 232.6,283.3 231.6,288.5 231.6,309.8 231.6,324.8 234.8,344 233,351.6 231.4,358.5 225.7,365.4 236,365.4 250.5,365.4 260.6,365.4 271.8,365.4 286.5,365.4 285,358.8 285,358.8 285,358.8 271.5,356.8 262.3,354 256.1,352.2 243.8,346.3 242.5,344 238.2,336.4 241.8,325.4 248.4,295.8 251.6,281.6 253.3,278.8 254.5,272 255.4,266.9 253.1,261.5 244.3,254 234.2,245.6 223.8,231.8 213,217.8 202,203.4 197.9,202.8 190.7,203.2 z;\\n                         M 199.7,207.2 C 189,207.8 188.6,208.4 188.3,215.8 187.9,223.1 186.1,226.2 193.8,239.1 202.8,254.2 210.5,269.5 218,282.3 221.1,287.6 217.8,287 216.3,289.3 213,294.7 210.7,293.9 203.3,313.9 198,328.4 197.5,342 195.7,349.6 194.1,356.5 185.7,365.4 196,365.4 210.5,365.4 220.6,365.4 231.8,365.4 246.5,365.4 245,358.8 245,358.8 245,358.8 231.9,358.9 222.7,356.1 216.5,354.3 205.9,352.7 205.5,350 204.1,341.4 216.8,318.6 220.8,311 225.2,302.7 230.3,292.5 234.5,288 238,284.3 237.4,274.5 233.3,264 228.5,251.8 223.8,231.8 213,217.8 202,203.4 206.9,206.8 199.7,207.2 z;\\n                         M 193.7,204.2 C 183,204.8 180.7,206.7 180.3,214 180,221.3 180.5,226.6 184.7,241 189.3,257.3 191.3,264.7 196.7,282.3 198.5,288.3 195.9,288.1 193,289.7 187.4,292.7 187.4,292.7 181.3,307 175.3,321.2 168.1,335.2 166.4,342.8 164.8,349.7 157.7,350.3 166.5,355.6 175.8,361.2 185.6,365.4 196.7,365.4 211.5,365.4 211,358.8 211,358.8 211,358.8 201.3,357.9 192,355.1 185.9,353.3 175.8,343.6 176.5,341 178,335.3 184.9,322.4 194.9,311.6 205.9,299.9 209.8,291 214.1,286.5 217.6,282.8 215.6,274.3 215,263 214.4,251.3 212.7,243.9 210.3,231.7 207.4,216.8 200.9,203.8 193.7,204.2 z;\\n                         M 196.5,209.6 C 186.4,205.8 183.7,208.5 180.3,214 176.5,220.2 178.4,218.6 178.2,233.7 178,248.9 178.8,261.1 179.5,281.2 179.7,287.3 178.1,287.4 176,289.9 172.3,294.3 174.3,294 163.3,301.8 157.2,306.1 145,324.1 138.4,328.2 132.4,331.9 126.9,331.3 129.4,341.3 132,351.8 142.4,365.3 153.5,365.4 168.9,365.5 168.8,365 168.8,365 168.8,365 156,358.8 151.4,350.3 148.4,344.7 147.1,333.1 149.6,332.2 153.4,330.7 169.6,314.8 177.5,310.3 192.3,301.9 195.4,298.5 199.5,293.9 202.5,290.4 203.2,284.8 203.8,273.5 204.5,257.8 206.7,245.8 204.3,233.6 201.4,218.7 200.8,211.2 196.5,209.6 z;\\n                         M 194.5,207.3 C 184.2,203.9 180.7,206.7 180.3,214 180,221.3 181.3,217.4 176.7,231.7 174.3,239 170.9,258.4 167.2,272.1 165.6,278 165.6,278.1 162.1,284.1 159.2,289.2 146.5,287.3 136,295.8 123.9,305.5 110.1,318.5 103.5,322.6 97.52,326.3 86.77,319 89.25,329 91.88,339.5 91.74,360.5 102.4,363.6 110.6,366 118.5,365 118.5,365 118.5,365 105.5,358 106.2,348.4 107.1,336.1 107.1,331.5 110,328.6 112.9,325.8 129.8,314.3 154.7,307.2 167.9,303.4 173.7,303.8 178.3,297.6 182.7,291.7 187.7,279.6 192,269.1 200.4,248.5 206.6,238.9 205.7,224.2 204.7,209.1 203.3,210.1 194.5,207.3 z;\\n                         M 189.2,225.2 C 187,214.6 182.5,214 178.8,213 171.8,211 170.2,209.3 159.3,217.1 153,221.5 151,224.8 143,235.2 139.2,240.1 124.2,252.6 120.7,258.6 117.8,263.7 104.3,257.8 93.83,266.3 81.75,276 63.89,303.3 57.29,307.4 51.31,311.1 44.58,307.6 44.05,313.3 43.03,324.1 42.76,323.4 39.52,334.1 35.95,345.8 31.12,354.6 31.12,354.6 31.12,354.6 40.29,345.5 46.1,337.8 54.07,327.3 58.59,321.9 62.78,315.5 64.98,312.1 80.56,299.2 104.2,283.7 115.7,276.2 122.4,270.6 130.1,270.1 138.2,269.5 149.6,262.7 154.7,259.7 159.5,256.9 171.9,248.5 179.9,242.4 185.8,237.9 190.7,232.4 189.2,225.2 z \\\" />\\n      </path>\\n      <g id=\\\"props\\\">\\n        <animateTransform attributeName=\\\"transform\\\" attributeType=\\\"XML\\\" type=\\\"translate\\\" dur=\\\"1s\\\" repeatCount=\\\"indefinite\\\"\\n          fill=\\\"freeze\\\" values=\\\"\\n                                290.9,99.33;\\n                                295.3,133.8;\\n                                266.6,227.7;\\n                                228.9,246.7;\\n                                182.1,237.9;\\n                                155.7,225.9;\\n                                152.9,218.2;\\n                                143.7,188;\\n                                156,188.7;\\n                                182.4,207.7;\\n                                207.4,203.1;\\n                                258.8,185.5;\\n                                275.4,141.5;\\n                                293,106.6;\\n                                290.9,99.33\\\" />\\n        <g id=\\\"rotated_prop\\\">\\n          <animateTransform attributeName=\\\"transform\\\" attributeType=\\\"XML\\\" type=\\\"rotate\\\" dur=\\\"1s\\\" repeatCount=\\\"indefinite\\\"\\n            fill=\\\"freeze\\\" values=\\\"-120;\\n                                50;\\n                                90;\\n                                50;\\n                                -120\\\" />\\n          <!-- Repere pour le prop , red cross\\n    <line style=\\\"fill:none;stroke:red\\\"\\n            x1=\\\"0\\\"\\n            x2=\\\"0\\\"\\n            y1=\\\"-10\\\"\\n            y2=\\\"10\\\" />\\n      <line style=\\\"fill:none;stroke:red\\\"\\n            x1=\\\"-10\\\"\\n            x2=\\\"10\\\"\\n            y1=\\\"0\\\"\\n            y2=\\\"0\\\" /> -->\\n    \\n    \\n          <!-- Here you can change that, by image or path or anything you want, for change the prop. -->\\n    \\n          <g id=\\\"Axe\\\" transform=\\\"scale(5),rotate(60)\\\" visibility=\\\"hidden\\\">\\n            <set attributeName=\\\"visibility\\\" begin=\\\"BtnAxe.click\\\" fill=\\\"freeze\\\" to=\\\"visible\\\" />\\n            <set attributeName=\\\"visibility\\\" begin=\\\"BtnKatana.click;BtnNone.click;BtnLightsaber.click\\\" fill=\\\"freeze\\\"\\n              to=\\\"hidden\\\" />\\n            <path id=\\\"manche\\\"\\n              d=\\\"M 0.2491,-8.598 C 0.2491,-2.371 -0.0623,-0.5029 -0.1868,0.8047 -0.3113,2.112 -0.6227,1.926 0.6849,2.299 1.993,2.673 2.553,2.361 1.93,1.552 1.308,0.7425 1.121,-3.056 1.432,-5.048 1.743,-7.041 2.428,-12.89 1.494,-12.58 0.5604,-12.27 -0.1868,-12.4 0,-11.84 0.1868,-11.28 0.2491,-9.968 0.2491,-8.598 z\\\"\\n              style=\\\"fill:url(#linearGradient5096);fill-opacity:1;fill-rule:nonzero;stroke:none\\\" />\\n            <path id=\\\"blade\\\"\\n              d=\\\"M -0.6849,-11.52 C -0.6849,-11.52 1.868,-12.08 3.3,-13.08 4.732,-14.08 5.542,-15.2 5.48,-15.88 5.417,-16.57 5.48,-17.13 5.48,-17.13 5.48,-17.13 7.161,-16.13 7.597,-13.89 8.032,-11.65 7.97,-11.21 7.97,-11.21 L 7.348,-11.28 7.97,-10.84 C 7.97,-10.84 8.157,-9.905 7.908,-9.158 7.659,-8.411 7.348,-8.162 7.348,-8.162 7.348,-8.162 6.414,-10.22 4.11,-9.781 1.806,-9.345 1.993,-8.971 1.993,-8.971 1.993,-8.971 0.4359,-8.349 0.0623,-8.411 -0.3113,-8.473 -0.2491,-8.722 -0.2491,-8.722 z\\\"\\n              style=\\\"fill:url(#radialGradient5088);fill-opacity:1;fill-rule:nonzero;stroke:none\\\" />\\n          </g>\\n          <g id=\\\"katana\\\" transform=\\\"scale(4),rotate(60)\\\" visibility=\\\"hidden\\\">\\n            <set attributeName=\\\"visibility\\\" begin=\\\"BtnKatana.click\\\" fill=\\\"freeze\\\" to=\\\"visible\\\" />\\n            <set attributeName=\\\"visibility\\\" begin=\\\"BtnAxe.click;BtnNone.click;BtnLightsaber.click\\\" fill=\\\"freeze\\\"\\n              to=\\\"hidden\\\" />\\n    \\n    \\n            <path id=\\\"path5106\\\"\\n              d=\\\"M 0.1321,-3.622 C 0.1321,-3.622 0.4636,-9.192 -1.312,-18.56 -3.781,-31.59 -5.925,-35.54 -5.925,-35.54 L -4.362,-34.02 C -4.362,-34.02 -1.285,-26.66 0.0472,-17.58 1.374,-8.542 1.365,-3.562 1.365,-3.562 z\\\"\\n              style=\\\"fill:url(#radialGradient5088);fill-opacity:1;fill-rule:nonzero;stroke:none\\\" />\\n            <path id=\\\"path5104\\\"\\n              d=\\\"M -0.6165,10.95 C -0.6165,10.95 0.088,10.27 0.088,4.853 0.088,-0.5624 0.044,-3.702 0.044,-3.702 L -1.233,-3.662 -1.233,-3.972 2.598,-4.062 2.598,-3.702 1.409,-3.752 C 1.409,-3.752 1.805,1.444 1.541,5.451 1.277,9.458 0.8365,11.31 0.8365,11.31 z\\\"\\n              style=\\\"fill:#283426;fill-opacity:1;fill-rule:nonzero;stroke:none\\\" />\\n          </g>\\n    \\n          <g id=\\\"lightsaber\\\" visibility=\\\"hidden\\\" transform=\\\"rotate(70)\\\">\\n            <rect style=\\\"fill:#161616;\\\" width=\\\"5.253\\\" height=\\\"24.81\\\" x=\\\"-0.1811\\\" y=\\\"3.294\\\" />\\n            <rect ry=\\\"11.39\\\" y=\\\"-1.5\\\" x=\\\"-1.221\\\" height=\\\"10\\\" width=\\\"4.795\\\" id=\\\"rect3948\\\"\\n              style=\\\"fill:white;stroke:red;stroke-width:1\\\" transform=\\\"scale(1,-1)\\\" filter=\\\"url(#glow)\\\">\\n    \\n              <animate attributeName=\\\"height\\\" begin=\\\"BtnOn.click\\\" to=\\\"175\\\" fill=\\\"freeze\\\" dur=\\\"0.3s\\\" />\\n              <animate attributeName=\\\"height\\\" begin=\\\"BtnOff.click;BtnAxe.click;BtnNone.click;BtnKatana.click\\\" to=\\\"10\\\"\\n                fill=\\\"freeze\\\" dur=\\\"0.3s\\\" />\\n    \\n              <animate attributeName=\\\"stroke\\\" to=\\\"red\\\" begin=\\\"BtnRed.click\\\" dur=\\\"0.5s\\\" fill=\\\"freeze\\\" />\\n              <animate attributeName=\\\"stroke\\\" to=\\\"lime\\\" begin=\\\"BtnGreen.click\\\" dur=\\\"0.5s\\\" fill=\\\"freeze\\\" />\\n              <animate attributeName=\\\"stroke\\\" to=\\\"lightblue\\\" begin=\\\"BtnBlue.click\\\" dur=\\\"0.5s\\\" fill=\\\"freeze\\\" />\\n            </rect>\\n            <path style=\\\"fill:url(#chrome);fill-opacity:1;stroke:none\\\"\\n              d=\\\"M 5.312 -1.469 L -3.344 -1.469 L -3.344 30.66 L 5.312 30.66 L 5.312 27.56 L 3.125 27.56 C 2.496 27.56 1.958 27.34 1.562 26.94 C 1.165 26.54 0.9062 25.94 0.9062 25.34 L 0.9062 6.25 C 0.9062 5.64 1.165 5.066 1.562 4.656 C 1.958 4.246 2.499 4 3.125 4 L 5.312 4 L 5.312 -1.469 z \\\" />\\n            <path style=\\\"fill:#222222;fill-opacity:1;stroke:none\\\" d=\\\"m 5.496,-1.625 -9.039,0 0.199,0.156 8.656,0 z\\\" />\\n            <path style=\\\"fill:url(#chrome);fill-opacity:1.0;stroke:none\\\"\\n              d=\\\"m -3.548,-12.97 0,11.345 9.064,0 0,-11.345 -9.064,0 z\\\" />\\n            <path style=\\\"fill:#5a5a5a;fill-opacity:1;stroke:none\\\" d=\\\"m 5.312,-13.12 -8.656,0 0,0.15 8.656,0 z\\\" />\\n            <path style=\\\"fill:url(#chrome);fill-opacity:1;stroke:none\\\"\\n              d=\\\"M 5.312 -21.03 C 2.424 -21.03 -0.4566 -13.47 -3.344 -13.47 L -3.344 -13.12 L 5.312 -13.12 L 5.312 -21.03 z \\\" />\\n            <path\\n              d=\\\"M 1.498,4.77 C 1.214,5.1 1.023,5.52 0.9586,5.97 l 4.2944,0 c 0.433,0 0.353,-0.29 0.353,-0.61 0,-0.31 0.08,-0.59 -0.353,-0.59 z m -0.5994,1.85 0,1.2 4.3544,0 c 0.433,0 0.353,-0.3 0.353,-0.61 0,-0.31 0.08,-0.59 -0.353,-0.59 z m 0,1.92 0,1.13 4.3544,0 c 0.433,0 0.353,-0.24 0.353,-0.54 0,-0.33 0.08,-0.59 -0.353,-0.59 z m 0,1.97 0,1.15 4.3544,0 c 0.433,0 0.353,-0.24 0.353,-0.54 0,-0.33 0.08,-0.61 -0.353,-0.61 z m 0,2.11 0,1.12 4.3544,0 c 0.433,0 0.353,-0.2 0.353,-0.53 0,-0.31 0.08,-0.59 -0.353,-0.59 z m 0,1.97 0,1.13 4.3544,0 c 0.433,0 0.353,-0.28 0.353,-0.59 0,-0.31 0.08,-0.54 -0.353,-0.54 z m 0,1.78 0,1.21 4.3544,0 c 0.433,0 0.353,-0.29 0.353,-0.6 0,-0.32 0.08,-0.61 -0.353,-0.61 z m 0,1.99 0,1.12 4.3544,0 c 0.433,0 0.353,-0.22 0.353,-0.59 0,-0.3 0.08,-0.53 -0.353,-0.53 z m 0,1.97 0,1.12 4.3544,0 c 0.433,0 0.353,-0.3 0.353,-0.6 0,-0.29 0.08,-0.52 -0.353,-0.52 z m 0,2.02 0,1.1 4.3544,0 c 0.433,0 0.353,-0.2 0.353,-0.5 0,-0.3 0.08,-0.6 -0.353,-0.6 z m 0,1.9 0,1.1 c 0,0 0,0 0,0.1 l 4.3544,0 c 0.433,0 0.353,-0.3 0.353,-0.6 0,-0.3 0.08,-0.6 -0.353,-0.6 z m 0.1204,1.8 c 0.111,0.3 0.287,0.6 0.539,0.9 0.102,0.1 0.243,0.2 0.358,0.2 l 3.337,0 c 0.433,0 0.353,-0.3 0.353,-0.6 0,-0.3 0.08,-0.5 -0.353,-0.5 z\\\"\\n              style=\\\"fill:url(#chrome);fill-opacity:1.0;stroke:none\\\" />\\n            <path style=\\\"fill:#5a1616;fill-opacity:1;stroke:none\\\"\\n              d=\\\"m -1.28,-4.873 a 1.185,1.633 0 1 1 -2.37,0 1.185,1.633 0 1 1 2.37,0 z\\\" />\\n    \\n            <set attributeName=\\\"visibility\\\" begin=\\\"BtnLightsaber.click\\\" fill=\\\"freeze\\\" to=\\\"visible\\\" />\\n            <set attributeName=\\\"visibility\\\" begin=\\\"BtnAxe.click;BtnNone.click;BtnKatana.click\\\" fill=\\\"freeze\\\" to=\\\"hidden\\\" />\\n          </g>\\n    \\n          <!-- End of Prop-->\\n        </g>\\n    \\n      </g>\\n      <path style=\\\"fill:#222;stroke:none;fill-rule:nonzero\\\" id=\\\"bras2\\\"\\n        d=\\\"M 220.4,144 C 220.3,150.5 226,153.3 248.7,158.7 271.3,164 281,164.3 283,162.5 285,160.7 289.3,152 292,135.7 294.7,119.3 293.3,118.3 294.3,115 295.3,111.7 299,99.33 298,94.33 297,89.33 290,80.34 288.7,83.33 287.3,86.33 283,109.3 283.7,117.7 284.3,126 281.3,132 277.7,139.7 271.5,152.8 271.3,150.7 256.7,143.7 225.3,128.7 220.4,140 220.4,144 z\\\">\\n        <animate attributeName=\\\"d\\\" attributeType=\\\"XML\\\" repeatCount=\\\"indefinite\\\" fill=\\\"freeze\\\" dur=\\\"1s\\\"\\n          values=\\\"\\n                         M 220.4,144 C 220.3,150.5 226,153.3 248.7,158.7 271.3,164 281,164.3 283,162.5 285,160.7 289.3,152 292,135.7 294.7,119.3 293.3,118.3 294.3,115 295.3,111.7 299,99.33 298,94.33 297,89.33 290,80.34 288.7,83.33 287.3,86.33 283,109.3 283.7,117.7 284.3,126 281.3,132 277.7,139.7 271.5,152.8 271.3,150.7 256.7,143.7 225.3,128.7 220.4,140 220.4,144 z;\\n                         M 217.5,140.5 C 215.2,146.5 218.5,150.9 237.1,164.9 255,178.3 261,179.9 263.6,178.9 266.1,177.9 271.9,173 281.3,159.4 289.1,148 292.8,154.2 294.9,151.5 297.1,148.7 305.8,135.5 306.7,130.4 307.5,125.4 304.1,114.5 301.8,116.8 283.2,137.1 282.4,129.9 279.2,148.8 275.5,153.6 272.6,154.8 268.4,156.6 254.9,162.9 260.1,159.6 251.9,151 245.1,143.6 224.4,123.9 217.5,140.5 z;\\n                         M 214.3,127.7 C 208.2,129.8 208,135.2 209.2,158.4 210.4,180.8 216.7,189.7 217.7,192.2 218.7,194.7 227.6,208.5 241.2,217.9 252.6,225.7 250.3,228.4 253.1,230.6 255.9,232.7 263.1,238.5 268.1,239.3 273.2,240.1 284.1,237.7 281.7,235.4 263.1,214.2 267.5,220.1 251.8,215.9 247,212.1 238.8,198.2 236.9,194 229.9,181.6 227.3,172.7 228.4,160.8 228,147.7 234.2,121 214.3,127.7 z;\\n                         M 214.3,126.7 C 208.2,128.8 204.3,137.8 199.2,158.4 193.9,180.2 195.5,187.7 196.5,190.3 197.5,192.8 203.3,203.5 212.8,222 219.1,234.3 217.3,237.3 217,240.8 216.8,244.3 223.1,252.3 227.8,257.5 231.1,261.3 240.5,261.2 240.5,257.9 232.8,234.5 242.8,244.4 226.7,228 223.3,222.9 219.1,204.2 217.3,200 208.6,181.1 206.5,176.9 215,162.7 221.9,153.6 237.8,119.1 214.3,126.7 z;   \\n                         M 209.3,121.7 C 203.2,123.8 196.1,138 190.2,158.4 186.5,171.6 185.7,171.3 184,180.3 183.5,183 180,190.6 179.7,211.7 179.5,225.5 175.7,224.1 174.7,227.5 172.8,234 172.9,238 172.4,244.9 172.1,250 176.8,256.5 179.2,254.2 188.3,233.6 189.3,251 189.5,220.3 190.8,214.3 192.9,205.8 194,201.3 195.6,179.5 197.6,184.1 207,162.8 209.3,158 230.4,114.9 209.3,121.7 z;\\n                         M 215.3,119 C 209.1,121.1 205.5,125.2 192.8,136 182.3,144.8 177.4,147.8 175.8,156.8 175.3,159.4 175.2,161.2 167,180.2 160.2,195.9 158.4,208.2 157.8,210 154,220.8 146.4,221.8 146,228.8 145.7,233.8 146,238.7 152.3,235.2 165.1,218.1 166.5,235.7 168.5,202.2 169.7,196.2 174.1,190 176.9,186.3 187.2,173 187.7,158.2 204.3,147 222.2,134.9 230.9,114.6 215.3,119 z;\\n                         M 224.3,120 C 218.1,122.1 208.5,121.2 195.8,132 185.3,140.8 173.4,138.8 171.8,147.8 171.3,150.4 171.2,152.2 163,171.2 156.2,186.9 156.4,196.2 155.8,198 152,208.8 144.4,214.8 144,221.8 143.7,226.8 144,231.7 150.3,228.2 162.9,210.9 166.7,226 165.5,193.2 166.7,187.2 170.1,181 172.9,177.3 186.2,161.1 178.2,159.8 205.3,147 231,140.4 238.7,120.5 224.3,120 z;\\n                         M 217.8,126.9 C 208.4,120.7 202.2,122 190.6,126.9 179,131.9 168.3,136.3 166.1,141.2 163.8,146.1 149.1,175.6 147.3,176.5 145.5,177.4 140.6,181.9 137,187.7 133.5,193.5 129.4,204.2 137,201.9 144.6,199.7 145.1,195.7 149.5,190.8 154,185.9 153.1,182.8 157.6,177.8 162,172.9 168,152.4 175.3,149.3 182.6,146.1 192,141.7 200,142.6 208,143.5 227.2,133.2 217.8,126.9 z;\\n                         M 216.5,128.2 C 205.6,125.4 202.2,126 190.6,130.9 179,135.9 153.3,149.3 151.1,154.2 148.8,159.1 148.3,170 148.3,175.5 148.3,182.7 144,182.8 146,189.4 149.2,199.9 153.7,199.1 161.3,196.8 168.9,194.6 164.2,189.3 162.7,186.3 159.6,180.4 154.4,184.3 156.5,178 159.3,169.3 163.5,161.8 166,156.8 166.6,155.4 177.1,151 185.2,149.6 201.7,146.7 219.3,138.8 216.5,128.2 z;\\n                         M 221.8,122.7 C 212.9,115.8 204.3,125.1 192.6,135.7 183.3,144.2 170.3,172.1 168.1,177 165.8,181.9 163.3,192.7 163.3,198.3 163.3,205.4 163,206.6 165,213.1 168.2,223.7 170.7,221.8 178.3,219.6 185.9,217.4 181.2,212 179.7,209.1 176.6,203.1 172.7,203.2 174.8,196.9 177.6,188.3 180.3,181.8 182.8,176.8 183.4,175.4 189.7,158.8 196.5,154.3 206.3,147.7 235.3,133 221.8,122.7 z;\\n                         M 221.8,125.7 C 212.9,118.8 203,136.8 192.5,148.9 184.2,158.4 180.3,178.5 181.2,183.9 182.1,189.2 192.1,224.6 195.2,229.2 199.2,235.1 199.6,239.2 204.9,243.5 213.5,250.5 214.5,247.5 219.6,241.4 224.6,235.3 217.7,233.6 214.8,232 208.9,228.8 205.8,231 204,224.6 201.5,215.9 200.1,203 199.3,197.5 199.1,196 193.7,182.7 202.1,168.1 210.5,153.3 235.3,136 221.8,125.7 z;\\n                         M221.839,124.362c-8.955-6.88-12.366,6.424-16.506,21.971   c-3.242,12.178-3.122,32.129,2.053,33.657c5.173,1.526,34.2,6.306,39.664,6.962c5.95,0.714,7.354,4.548,14.168,4.571   c8.782,0.028,17.704-0.602,22.449-7.19c2.596-3.604-14.699-5.901-20.468-7.776c-6.36-2.067-9.817,0.688-16.354-0.475   c-8.976-1.601-22.131-6.991-27.488-8.708c-1.426-0.458-4.64-0.543,1.976-16.04C228.46,134.636,235.25,134.667,221.839,124.362z;\\n                         M 218.5,123.7 C 209.8,126.5 214.4,132.6 219.2,148 222.9,160 233.8,175 239,173.5 245.7,171.7 263.3,160.7 266,157.8 270.7,153 272,149.4 277.8,145.8 285.3,141.2 284.8,136.4 285.3,128.3 285.6,123.9 274.5,131.7 268.7,135.2 262.9,138.6 265.3,146.3 259.3,150 251.5,154.7 244.5,159.5 239,160.8 237.6,161.2 238.5,161.1 234.7,144.7 232,133.3 226.5,121.7 218.5,123.7 z;\\n                         M 226.3,128.7 C 224.7,136.1 231.5,140.3 245.3,142.1 257.8,143.7 274.9,153.1 278.9,149.4 284,144.7 294.7,126.9 295.8,123.2 297.8,116.8 297.4,113 300.9,107.1 305.5,99.62 302.9,95.6 299.7,88.14 297.9,84.06 291.6,96.02 287.9,101.8 284.3,107.4 290,113.3 286.3,119.2 281.5,127 278.9,129.6 274.7,133.3 273.5,134.3 269.4,136.1 253,129.5 242.4,124.8 231.2,118.5 226.3,128.7 z;\\n                         M 220.4,144 C 220.3,150.5 226,153.3 248.7,158.7 271.3,164 281,164.3 283,162.5 285,160.7 289.3,152 292,135.7 294.7,119.3 293.3,118.3 294.3,115 295.3,111.7 299,99.33 298,94.33 297,89.33 290,80.34 288.7,83.33 287.3,86.33 283,109.3 283.7,117.7 284.3,126 281.3,132 277.7,139.7 271.5,152.8 271.3,150.7 256.7,143.7 225.3,128.7 220.4,140 220.4,144 z\\\" />\\n      </path>\\n      <line fill=\\\"none\\\" stroke=\\\"black\\\" stroke-dasharray=\\\"50 10\\\" x1=\\\"350\\\" y1=\\\"363.8\\\" x2=\\\"50\\\" y2=\\\"363.8\\\">\\n        <animate attributeName=\\\"stroke-dashoffset\\\" dur=\\\"0.48s\\\" repeatCount=\\\"indefinite\\\" from=\\\"0\\\" to=\\\"-300\\\" />\\n      </line>\\n      <g id=\\\"Buttons\\\" opacity=\\\"0.8\\\">\\n        <g style=\\\"cursor:pointer\\\" id=\\\"BtnKatana\\\">\\n          <rect style=\\\"fill:#848ea6\\\" width=\\\"75\\\" height=\\\"20\\\" x=\\\"300\\\" y=\\\"5\\\" />\\n          <text style=\\\"font-size:.8em;fill:#000000;font-family:font-family: Helvetica, sans-serif\\\" x=\\\"318.28711\\\"\\n            y=\\\"19.224609\\\">Katana</text>\\n        </g>\\n        <g style=\\\"cursor:pointer\\\" id=\\\"BtnAxe\\\">\\n          <rect y=\\\"30\\\" x=\\\"300\\\" height=\\\"20\\\" width=\\\"75\\\" style=\\\"fill:#85a684\\\" />\\n          <text style=\\\"font-size:.8em;fill:#000000;font-family:font-family: Helvetica, sans-serif\\\" x=\\\"327.41309\\\"\\n            y=\\\"44.224609\\\">Axe</text>\\n        </g>\\n        <g>\\n          <g id=\\\"BtnLightsaber\\\" style=\\\"cursor:pointer\\\">\\n            <rect style=\\\"fill:#d27e1f;fill-opacity:1;fill-rule:nonzero;stroke:none\\\" y=\\\"55\\\" x=\\\"300\\\" height=\\\"20\\\" width=\\\"75\\\" />\\n            <text style=\\\"font-size:.8em;fill:#000000;font-family:font-family: Helvetica, sans-serif\\\" x=\\\"307.93359\\\"\\n              y=\\\"68.105469\\\" id=\\\"text4218\\\">LightSaber</text>\\n          </g>\\n          <g id=\\\"properties\\\" visibility=\\\"hidden\\\">\\n            <set attributeName=\\\"visibility\\\" begin=\\\"BtnLightsaber.click\\\" fill=\\\"freeze\\\" to=\\\"visible\\\" />\\n            <set attributeName=\\\"visibility\\\" begin=\\\"BtnAxe.click;BtnNone.click;BtnKatana.click\\\" fill=\\\"freeze\\\" to=\\\"hidden\\\" />\\n            <rect id=\\\"BtnRed\\\" style=\\\"fill:red;fill-opacity:1;stroke:none;cursor:pointer\\\" width=\\\"40.84\\\" height=\\\"5.215\\\"\\n              x=\\\"336.1\\\" y=\\\"280.2\\\" ry=\\\"2.563\\\" />\\n            <rect id=\\\"BtnBlue\\\" ry=\\\"2.563\\\" y=\\\"287\\\" x=\\\"336.1\\\" height=\\\"5.215\\\" width=\\\"40.84\\\"\\n              style=\\\"fill:#00a3f7;fill-opacity:1;stroke:none;cursor:pointer\\\" />\\n            <rect id=\\\"BtnGreen\\\" style=\\\"fill:lime;fill-opacity:1;stroke:none;cursor:pointer\\\" width=\\\"40.84\\\" height=\\\"5.215\\\"\\n              x=\\\"336.1\\\" y=\\\"293.9\\\" ry=\\\"2.563\\\" />\\n            <g transform=\\\"matrix(1.976,0,0,1.976,-215.1,137.2)\\\">\\n              <g id=\\\"BtnOff\\\" style=\\\"cursor:pointer\\\">\\n                <path transform=\\\"matrix(0.5061,0,0,0.5061,108.9,-69.43)\\\"\\n                  d=\\\"m 355.1,273 13.3,0 c 3.9,0 6.9,-3.1 6.9,-6.9 0,-3.8 -3,-6.9 -6.9,-6.9 l -13.3,0\\\"\\n                  style=\\\"fill:#e0a146;fill-opacity:1;stroke:#996800;stroke-width:0.8\\\" />\\n                <text\\n                  style=\\\"font-size:4px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans\\\"\\n                  x=\\\"290.05609\\\" y=\\\"66.664116\\\">OFF</text>\\n              </g>\\n              <g id=\\\"BtnOn\\\" style=\\\"cursor:pointer\\\">\\n                <path\\n                  style=\\\"fill:#e0a146;fill-opacity:1;stroke:#996800;stroke-width:0.4044;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n                  d=\\\"m 288.9,61.75 -7.1,0 c -2,0 -3.6,1.57 -3.6,3.49 0,1.93 1.6,3.49 3.6,3.49 l 7.1,0\\\" />\\n                <text\\n                  style=\\\"font-size:4px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans\\\"\\n                  x=\\\"280.75006\\\" y=\\\"66.664116\\\" id=\\\"text4745\\\">ON</text>\\n              </g>\\n              <rect ry=\\\"3\\\" y=\\\"62.11\\\" x=\\\"287.2\\\" height=\\\"6\\\" width=\\\"11.12\\\" style=\\\"fill:#b07700;fill-opacity:1;stroke:none\\\">\\n                <animate attributeName=\\\"x\\\" begin=\\\"BtnOn.click\\\" values=\\\"287.2;\\n                             279\\\" dur=\\\"0.3s\\\" fill=\\\"freeze\\\" />\\n                <animate attributeName=\\\"x\\\" begin=\\\"BtnOff.click;BtnAxe.click;BtnNone.click;BtnKatana.click\\\"\\n                  values=\\\"279; 287.2\\\" dur=\\\"0.3s\\\" fill=\\\"freeze\\\" />\\n              </rect>\\n            </g>\\n          </g>\\n          <g style=\\\"cursor:pointer\\\" id=\\\"BtnNone\\\">\\n            <rect style=\\\"fill:#ee3d36;fill-opacity:1;fill-rule:nonzero;stroke:none\\\" y=\\\"80\\\" x=\\\"300\\\" height=\\\"20\\\" width=\\\"75\\\" />\\n            <text style=\\\"font-size:.8em;fill:#000000;font-family:font-family: Helvetica, sans-serif\\\" x=\\\"322.93945\\\"\\n              y=\\\"94.224609\\\">Ninguno</text>\\n          </g>\\n        </g>\\n      </g>\\n    </svg>\\n    \\n    \\n  </div>\\n  <div class=\\\"col-2\\\"></div>\\n</div>\";","export default \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-2\\\"></div>\\n  <div class=\\\"col-8\\\">\\n    <!-- <span><img src=\\\"./assets/app/media/img/products/en-contruccion3.png\\\" alt=\\\"\\\"> </span> -->\\n<div id=\\\"coffee-wrap\\\">\\n\\n  <span class=\\\"stars star1\\\"></span>\\n  <span class=\\\"stars star2\\\"></span>\\n  <span class=\\\"stars star3\\\"></span>\\n\\n  <div class=\\\"machine\\\">\\n    <svg class=\\\"svg-machine\\\" preserveAspectRatio=\\\"none\\\" viewBox=\\\"0 0 172.562 284.959\\\"\\n      enable-background=\\\"new 0 0 172.562 284.959\\\">\\n      <g id=\\\"base\\\">\\n        <polyline fill=\\\"none\\\" stroke=\\\"#000000\\\" stroke-width=\\\"12\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" points=\\\"31.58,278.213 \\n                        5.646,278.213 5.646,240.035 165.396,240.035 165.396,278.213 72.332,278.213  \\\" />\\n\\n        <line fill=\\\"none\\\" stroke=\\\"#000000\\\" stroke-width=\\\"12\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" x1=\\\"48.896\\\"\\n          y1=\\\"278\\\" x2=\\\"55.896\\\" y2=\\\"278\\\" />\\n      </g>\\n      <g id=\\\"body-machine\\\">\\n        <path fill=\\\"#FFFFFF\\\" d=\\\"M30.896,238.75c-3.313,0-6-2.687-6-6v-154c0-33.222,27.028-60.25,60.25-60.25s60.25,27.028,60.25,60.25v154\\n                        c0,3.313-2.687,6-6,6H30.896z\\\" />\\n        <path d=\\\"M85.146,24.5c29.961,0,54.25,24.289,54.25,54.25v154h-108.5v-154C30.896,48.788,55.185,24.5,85.146,24.5 M85.146,12.5\\n                        c-36.53,0-66.25,29.72-66.25,66.25v154c0,6.627,5.373,12,12,12h108.5c6.627,0,12-5.373,12-12v-154\\n                        C151.396,42.219,121.677,12.5,85.146,12.5L85.146,12.5z\\\" />\\n      </g>\\n      <path id=\\\"alca-machine\\\"\\n        d=\\\"M99.562,10v6c0,0-11.25-2-15-2c-3.5,0-14,2-14,2v-6H99.562 M99.562,0h-29c-5.523,0-10,4.477-10,10v6\\n                    c0,2.979,1.329,5.804,3.625,7.704C65.995,25.2,68.255,26,70.563,26c0.622,0,1.248-0.058,1.869-0.176\\n                    C77.486,24.862,83.156,24.01,84.565,24c1.713,0,8.233,0.954,13.247,1.846C98.395,25.949,98.98,26,99.562,26\\n                    c2.33,0,4.608-0.815,6.423-2.335c2.268-1.9,3.577-4.707,3.577-7.665v-6C109.562,4.477,105.085,0,99.562,0L99.562,0z\\\" />\\n      <g id=\\\"top-machine\\\">\\n        <g>\\n          <path fill=\\\"#F52929\\\" d=\\\"M28.896,106.896V80.271c0-31.02,25.146-56.167,56.166-56.167l0,0c31.021,0,56.168,25.146,56.168,56.167\\n                            v26.624H28.896z\\\" />\\n        </g>\\n\\n        <rect x=\\\"46.563\\\" y=\\\"33.999\\\" transform=\\\"matrix(0.8093 -0.5874 0.5874 0.8093 -17.8288 42.0796)\\\" fill=\\\"#FFFFFF\\\"\\n          width=\\\"18.667\\\" height=\\\"29\\\" />\\n        <path fill=\\\"#A4001F\\\"\\n          d=\\\"M120.562,35.333c0,0-40.332,17-27.666,73.667l50.334,1.333L142.562,69l-7.332-20.333L120.562,35.333z\\\" />\\n        <g>\\n          <g>\\n            <path d=\\\"M85.062,25.333c30.1,0,54.5,24.4,54.5,54.5v25.834h-109V79.833C30.562,49.733,54.963,25.333,85.062,25.333\\n                                 M85.062,17.333c-34.463,0-62.5,28.038-62.5,62.5v25.834v8h8h109h8v-8V79.833C147.562,45.371,119.525,17.333,85.062,17.333\\n                                L85.062,17.333z\\\" />\\n          </g>\\n        </g>\\n      </g>\\n      <g id=\\\"deco-blue\\\">\\n        <rect x=\\\"26.896\\\" y=\\\"221.524\\\" fill=\\\"#66CCFF\\\" width=\\\"116.526\\\" height=\\\"17.809\\\" />\\n        <g>\\n          <path d=\\\"M139.422,225.524v9.809H30.896v-9.809H139.422 M147.422,217.524h-8H30.896h-8v8v9.809v8h8h108.526h8v-8v-9.809V217.524\\n                            L147.422,217.524z\\\" />\\n        </g>\\n      </g>\\n\\n      <g id=\\\"head-machine\\\">\\n        <g>\\n          <path fill=\\\"#FFFFFF\\\" d=\\\"M129.308,83.719c0,7.271-2.324,16.378-7.902,23.886c-12.729,17.135-35.302,30.91-35.302,30.91\\n                            s-24.663-14.388-37.057-32.666c-4.511-6.652-6.147-15.762-6.147-22.13c0-23.861,19.343-43.204,43.204-43.204\\n                            S129.308,59.858,129.308,83.719z\\\" />\\n        </g>\\n        <path fill=\\\"#66CCFF\\\" d=\\\"M91.062,39.166c0,0,7.769,4.807,14.5,13.25c6.137,7.698,11.309,18.519,11,29.5c-0.75,26.75-16,41-22.75,49\\n                        c0,0,28.75-19.5,32-30s7-28.25-0.25-40.75S91.062,39.166,91.062,39.166z\\\" />\\n        <g>\\n          <path\\n            d=\\\"M85.229,41.249c22.644,0,41,18.356,41,41c0,6.899-2.206,15.542-7.499,22.667c-12.079,16.261-33.501,29.333-33.501,29.333\\n                            s-23.404-13.654-35.166-31c-4.281-6.313-5.834-14.958-5.834-21C44.229,59.605,62.585,41.249,85.229,41.249 M85.229,33.249\\n                            c-27.019,0-49,21.981-49,49c0,3.485,0.521,15.622,7.213,25.491c12.637,18.635,36.736,32.824,37.756,33.419\\n                            c1.246,0.727,2.64,1.09,4.031,1.09c1.445,0,2.889-0.391,4.167-1.171c0.929-0.567,22.897-14.082,35.756-31.392\\n                            c5.769-7.765,9.077-17.766,9.077-27.438C134.229,55.23,112.247,33.249,85.229,33.249L85.229,33.249z\\\" />\\n        </g>\\n        <circle class=\\\"olhos\\\" cx=\\\"66.396\\\" cy=\\\"78.666\\\" r=\\\"4.167\\\" />\\n        <circle class=\\\"olhos\\\" cx=\\\"103.396\\\" cy=\\\"78.666\\\" r=\\\"4.167\\\" />\\n        <g id=\\\"boca-pronto\\\">\\n          <path d=\\\"M85.646,109.833c-6.167,0-10.417-5.25-10.417-10.833c0-1.657,1.343-3,3-3h14c1.657,0,3,1.343,3,3\\n                            C95.229,104.167,92.062,109.833,85.646,109.833z\\\" />\\n          <path fill=\\\"#FE4242\\\" d=\\\"M85.463,107.5c-3.449,0-5.828-1.676-5.828-3.459c0-0.529,0.751-0.958,1.68-0.958h7.83\\n                            c0.929,0,1.68,0.429,1.68,0.958C90.824,105.691,89.053,107.5,85.463,107.5z\\\" />\\n        </g>\\n        <circle id=\\\"boca-encher\\\" cx=\\\"85.229\\\" cy=\\\"104.333\\\" r=\\\"2.666\\\" />\\n        <g id=\\\"boca-sopro\\\">\\n          <path display=\\\"inline\\\" d=\\\"M89.086,104.413c-1.794,0-3.2-0.697-3.954-1.857c-0.784,1.103-2.181,1.776-3.91,1.776\\n                            c-2.618,0-4.31-1.595-4.31-4.064c0-0.359,0.291-0.65,0.65-0.65s0.65,0.291,0.65,0.65c0,1.731,1.125,2.764,3.009,2.764\\n                            c1.522,0,3.301-0.712,3.301-2.718c0-0.359,0.291-0.65,0.65-0.65s0.65,0.291,0.65,0.65c0,2.087,1.758,2.799,3.263,2.799\\n                            c1.906,0,3.091-1.08,3.091-2.818c0-0.359,0.291-0.65,0.65-0.65s0.65,0.291,0.65,0.65\\n                            C93.478,102.758,91.713,104.413,89.086,104.413z\\\" />\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n\\n  <div id=\\\"hot-coffee-wrap\\\">\\n    <svg preserveAspectRatio=\\\"none\\\" width=\\\"20px\\\" height=\\\"100px\\\" enable-background=\\\"new 0 0 24 98\\\">\\n      <path id=\\\"hot-coffee-down\\\" fill=\\\"#AB4D37\\\" d=\\\"M16-432.954v-0.38c0-0.885,0-1.672-1-2.221v-11.779c0-0.504,0-0.958,0-1.31v-9.19c0-0.442,0-0.836-1-1.111\\n                v-9.389c0-0.552-0.447-1-1-1c-0.552,0-1,0.448-1,1v9.389c0,0.274,0,0.668,0,1.111v9.19c0,0.352-1,0.806-1,1.31v11.779\\n                c0,0.549-1,1.336-1,2.221v0.38c0,0.703-1,1.613-1,2.62v341.75c0,1.518,1,2.821,2,3.5v7.156c0,0.189,0,0.386,0,0.595v49.75\\n                c0,0.504,1,0.958,1,1.31v11.69c0,0.442,0,0.836,0,1.111v11.889c0,0.553,0.448,1,1,1c0.553,0,1-0.447,1-1v-11.89\\n                c1-0.274,1-0.668,1-1.11v-11.69c0-0.352,0-0.806,0-1.31v-49.75c0-0.208,0-0.404,0-0.593v-7.158c1-0.678,2-1.982,2-3.499v-341.75\\n                C17-431.341,17-432.251,16-432.954z\\\" />\\n    </svg>\\n\\n    <span class=\\\"last-drop\\\"></span>\\n\\n  </div>\\n\\n  <div class=\\\"mug mug1 mug-empty\\\">\\n    <svg class=\\\"svg-mug\\\" preserveAspectRatio=\\\"none\\\" viewBox=\\\"0 0 72 77\\\" enable-background=\\\"new 0 0 72 77\\\">\\n\\n      <g opacity=\\\"0.6\\\">\\n        <polygon fill=\\\"#9999D1\\\" points=\\\"52.5,5 48.834,70 57.5,70 67,8.5 62.667,3.834 53.667,3.667   \\\" />\\n      </g>\\n      <path fill=\\\"#FFFFFF\\\" d=\\\"M23.452,47.76c0.176,1.276-0.717,2.454-1.994,2.63l0,0c-1.276,0.176-2.454-0.717-2.629-1.994l-4.225-30.711\\n                    c-0.176-1.275,0.717-2.453,1.994-2.629l0,0c1.276-0.176,2.454,0.717,2.629,1.993L23.452,47.76z\\\" />\\n      <path fill=\\\"#FFFFFF\\\" d=\\\"M25.349,59.106c0.201,1.459-0.819,2.806-2.278,3.006l0,0c-1.458,0.201-2.804-0.819-3.005-2.278l-0.272-1.981\\n                    c-0.201-1.459,0.819-2.804,2.278-3.005l0,0c1.459-0.2,2.805,0.819,3.005,2.278L25.349,59.106z\\\" />\\n      <path d=\\\"M61,8c1.656,0,3,1.343,3,3l-7,54.667c0,1.657-1.344,3-3,3H19c-1.657,0-3-1.343-3-3L8,11c0-1.657,1.343-3,3-3H61 M61,0H11\\n                    C4.934,0,0,4.935,0,11v0.582l0.084,0.576l7.941,54.269c0.392,5.712,5.164,10.24,10.974,10.24h35c5.842,0,10.635-4.578,10.98-10.334\\n                    l6.955-54.317L72,11.51V11C72,4.935,67.065,0,61,0L61,0z\\\" />\\n    </svg>\\n  </div>\\n  <div class=\\\"mug mug2\\\">\\n    <svg class=\\\"svg-mug\\\" preserveAspectRatio=\\\"none\\\" viewBox=\\\"0 0 72 77\\\" enable-background=\\\"new 0 0 72 77\\\">\\n      <g opacity=\\\"0.6\\\">\\n        <polygon fill=\\\"#9999D1\\\" points=\\\"52.5,5 48.834,70 57.5,70 67,8.5 62.667,3.834 53.667,3.667   \\\" />\\n      </g>\\n      <path fill=\\\"#FFFFFF\\\" d=\\\"M23.452,47.76c0.176,1.276-0.717,2.454-1.994,2.63l0,0c-1.276,0.176-2.454-0.717-2.629-1.994l-4.225-30.711\\n                    c-0.176-1.275,0.717-2.453,1.994-2.629l0,0c1.276-0.176,2.454,0.717,2.629,1.993L23.452,47.76z\\\" />\\n      <path fill=\\\"#FFFFFF\\\" d=\\\"M25.349,59.106c0.201,1.459-0.819,2.806-2.278,3.006l0,0c-1.458,0.201-2.804-0.819-3.005-2.278l-0.272-1.981\\n                    c-0.201-1.459,0.819-2.804,2.278-3.005l0,0c1.459-0.2,2.805,0.819,3.005,2.278L25.349,59.106z\\\" />\\n      <path d=\\\"M61,8c1.656,0,3,1.343,3,3l-7,54.667c0,1.657-1.344,3-3,3H19c-1.657,0-3-1.343-3-3L8,11c0-1.657,1.343-3,3-3H61 M61,0H11\\n                    C4.934,0,0,4.935,0,11v0.582l0.084,0.576l7.941,54.269c0.392,5.712,5.164,10.24,10.974,10.24h35c5.842,0,10.635-4.578,10.98-10.334\\n                    l6.955-54.317L72,11.51V11C72,4.935,67.065,0,61,0L61,0z\\\" />\\n    </svg>\\n  </div>\\n  <div class=\\\"mug mug3\\\">\\n    <svg class=\\\"svg-mug\\\" preserveAspectRatio=\\\"none\\\" viewBox=\\\"0 0 72 77\\\" enable-background=\\\"new 0 0 72 77\\\">\\n      <g>\\n        <defs>\\n          <path id=\\\"SVGID_1_\\\" d=\\\"M57,65.666c0,1.656-1.344,3.001-3,3.001H19c-1.657,0-3-1.345-3-3.001L8,11.001C8,9.345,9.343,8,11,8h50\\n                            c1.656,0,3,1.345,3,3.001L57,65.666z\\\" />\\n        </defs>\\n        <clipPath id=\\\"SVGID_2_\\\">\\n          <use xlink:href=\\\"#SVGID_1_\\\" overflow=\\\"visible\\\" />\\n        </clipPath>\\n        <rect x=\\\"6.339\\\" class=\\\"coffee\\\" y=\\\"30\\\" clip-path=\\\"url(#SVGID_2_)\\\" fill=\\\"#AB4D37\\\" width=\\\"57.167\\\" height=\\\"47\\\" />\\n        <rect x=\\\"5.108\\\" class=\\\"cream\\\" y=\\\"20.978\\\" clip-path=\\\"url(#SVGID_2_)\\\" fill=\\\"#FFCC66\\\" width=\\\"59\\\" height=\\\"10\\\" />\\n      </g>\\n      <g opacity=\\\"0.6\\\">\\n        <polygon fill=\\\"#9999D1\\\" points=\\\"52.5,5 48.834,70 57.5,70 67,8.5 62.667,3.834 53.667,3.667   \\\" />\\n      </g>\\n      <path fill=\\\"#FFFFFF\\\" d=\\\"M23.452,47.76c0.176,1.276-0.717,2.454-1.994,2.63l0,0c-1.276,0.176-2.454-0.717-2.629-1.994l-4.225-30.711\\n                    c-0.176-1.275,0.717-2.453,1.994-2.629l0,0c1.276-0.176,2.454,0.717,2.629,1.993L23.452,47.76z\\\" />\\n      <path fill=\\\"#FFFFFF\\\" d=\\\"M25.349,59.106c0.201,1.459-0.819,2.806-2.278,3.006l0,0c-1.458,0.201-2.804-0.819-3.005-2.278l-0.272-1.981\\n                    c-0.201-1.459,0.819-2.804,2.278-3.005l0,0c1.459-0.2,2.805,0.819,3.005,2.278L25.349,59.106z\\\" />\\n      <path d=\\\"M61,8c1.656,0,3,1.343,3,3l-7,54.667c0,1.657-1.344,3-3,3H19c-1.657,0-3-1.343-3-3L8,11c0-1.657,1.343-3,3-3H61 M61,0H11\\n                    C4.934,0,0,4.935,0,11v0.582l0.084,0.576l7.941,54.269c0.392,5.712,5.164,10.24,10.974,10.24h35c5.842,0,10.635-4.578,10.98-10.334\\n                    l6.955-54.317L72,11.51V11C72,4.935,67.065,0,61,0L61,0z\\\" />\\n    </svg>\\n  </div>\\n  <div class=\\\"mug mug4\\\">\\n    <svg class=\\\"svg-mug\\\" preserveAspectRatio=\\\"none\\\" viewBox=\\\"0 0 72 77\\\" enable-background=\\\"new 0 0 72 77\\\">\\n      <g>\\n        <defs>\\n          <path id=\\\"SVGID_1_\\\" d=\\\"M57,65.666c0,1.656-1.344,3.001-3,3.001H19c-1.657,0-3-1.345-3-3.001L8,11.001C8,9.345,9.343,8,11,8h50\\n                            c1.656,0,3,1.345,3,3.001L57,65.666z\\\" />\\n        </defs>\\n        <clipPath id=\\\"SVGID_2_\\\">\\n          <use xlink:href=\\\"#SVGID_1_\\\" overflow=\\\"visible\\\" />\\n        </clipPath>\\n        <rect x=\\\"6.339\\\" y=\\\"30\\\" clip-path=\\\"url(#SVGID_2_)\\\" fill=\\\"#AB4D37\\\" width=\\\"57.167\\\" height=\\\"47\\\" />\\n        <rect x=\\\"5.108\\\" y=\\\"20.978\\\" clip-path=\\\"url(#SVGID_2_)\\\" fill=\\\"#FFCC66\\\" width=\\\"59\\\" height=\\\"10\\\" />\\n      </g>\\n      <g opacity=\\\"0.6\\\">\\n        <polygon fill=\\\"#9999D1\\\" points=\\\"52.5,5 48.834,70 57.5,70 67,8.5 62.667,3.834 53.667,3.667   \\\" />\\n      </g>\\n      <path fill=\\\"#FFFFFF\\\" d=\\\"M23.452,47.76c0.176,1.276-0.717,2.454-1.994,2.63l0,0c-1.276,0.176-2.454-0.717-2.629-1.994l-4.225-30.711\\n                    c-0.176-1.275,0.717-2.453,1.994-2.629l0,0c1.276-0.176,2.454,0.717,2.629,1.993L23.452,47.76z\\\" />\\n      <path fill=\\\"#FFFFFF\\\" d=\\\"M25.349,59.106c0.201,1.459-0.819,2.806-2.278,3.006l0,0c-1.458,0.201-2.804-0.819-3.005-2.278l-0.272-1.981\\n                    c-0.201-1.459,0.819-2.804,2.278-3.005l0,0c1.459-0.2,2.805,0.819,3.005,2.278L25.349,59.106z\\\" />\\n      <path d=\\\"M61,8c1.656,0,3,1.343,3,3l-7,54.667c0,1.657-1.344,3-3,3H19c-1.657,0-3-1.343-3-3L8,11c0-1.657,1.343-3,3-3H61 M61,0H11\\n                    C4.934,0,0,4.935,0,11v0.582l0.084,0.576l7.941,54.269c0.392,5.712,5.164,10.24,10.974,10.24h35c5.842,0,10.635-4.578,10.98-10.334\\n                    l6.955-54.317L72,11.51V11C72,4.935,67.065,0,61,0L61,0z\\\" />\\n    </svg>\\n  </div>\\n\\n  <div class=\\\"floor\\\">\\n    <svg preserveAspectRatio=\\\"none\\\" viewBox=\\\"0 0 528 10\\\" enable-background=\\\"new 0 0 528 10\\\">\\n      <g>\\n        <path fill=\\\"#CCCCCC\\\" d=\\\"M46.074,5.171c0,2.117-1.716,3.834-3.833,3.834H3.907c-2.117,0-3.833-1.717-3.833-3.834l0,0\\n                        c0-2.117,1.716-3.833,3.833-3.833H42.24C44.357,1.338,46.074,3.054,46.074,5.171L46.074,5.171z\\\" />\\n        <path fill=\\\"#CCCCCC\\\" d=\\\"M506.072,5.338c0,2.209-1.791,4-4,4h-442c-2.209,0-4-1.791-4-4l0,0c0-2.209,1.791-4,4-4h442\\n                        C504.281,1.338,506.072,3.129,506.072,5.338L506.072,5.338z\\\" />\\n        <path fill=\\\"#CCCCCC\\\" d=\\\"M527.99,5.15c0,2.105-1.707,3.812-3.812,3.812h-6.707c-2.105,0-3.812-1.707-3.812-3.812l0,0\\n                        c0-2.105,1.707-3.812,3.812-3.812h6.707C526.283,1.338,527.99,3.045,527.99,5.15L527.99,5.15z\\\" />\\n      </g>\\n    </svg>\\n\\n  </div>\\n\\n</div>\\n  </div>\\n  <div class=\\\"col-2\\\"></div>\\n</div>\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\"></div>\\n  <div class=\\\"col-8\\\">\\n <span><img src=\\\"./assets/app/media/img/products/en-contruccion4.jpeg\\\" alt=\\\"\\\"> </span> \\n  \\n  </div>\\n  <div class=\\\"col-2\\\"></div>\\n</div>\";","export default \"<ng-template ngFor let-panel [ngForOf]=\\\"panels\\\">\\r\\n\\t<div [class]=\\\"'m-accordion__item m-accordion__item--' + (panel.type)\\\">\\r\\n\\t\\t<!-- title -->\\r\\n\\t\\t<div role=\\\"tab\\\" id=\\\"{{panel.id}}-header\\\" \\r\\n\\t\\t\\t[class]=\\\"'m-accordion__item-head ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\\\" \\r\\n\\t\\t\\t[class.collapsed]=\\\"!panel.isOpen\\\" \\r\\n\\t\\t\\tdata-toggle=\\\"collapse\\\" \\r\\n\\t\\t\\t(click)=\\\"!!toggle(panel.id)\\\" \\r\\n\\t\\t\\t[class.text-muted]=\\\"panel.disabled\\\" \\r\\n\\t\\t\\t[attr.tabindex]=\\\"(panel.disabled ? '-1' : null)\\\" \\r\\n\\t\\t\\t[attr.aria-expanded]=\\\"panel.isOpen\\\" \\r\\n\\t\\t\\t[attr.aria-controls]=\\\"(panel.isOpen ? panel.id : null)\\\" \\r\\n\\t\\t\\t[attr.aria-disabled]=\\\"panel.disabled\\\">\\r\\n\\t\\t\\t<span class=\\\"m-accordion__item-icon\\\" *ngIf=\\\"panel.iconClass\\\">\\r\\n\\t\\t\\t\\t<i [class]=\\\"panel.iconClass\\\"></i>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t\\t<span class=\\\"m-accordion__item-title\\\">\\r\\n\\t\\t\\t\\t{{panel.title}}\\r\\n\\t\\t\\t\\t<ng-template [ngTemplateOutlet]=\\\"panel.titleTpl?.templateRef\\\"></ng-template>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t\\t<span class=\\\"m-accordion__item-mode\\\"></span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- end: title -->\\r\\n\\r\\n\\t\\t<!-- body without animation -->\\r\\n\\t\\t<div *ngIf=\\\"!hasAnimation && (!destroyOnHide || panel.isOpen)\\\" \\r\\n\\t\\t\\tid=\\\"{{panel.id}}\\\" \\r\\n\\t\\t\\trole=\\\"tabpanel\\\"\\r\\n\\t\\t\\t[attr.aria-labelledby]=\\\"panel.id + '-header'\\\" \\r\\n\\t\\t\\tclass=\\\"m-accordion__item-body collapse {{panel.isOpen ? 'show' : null}}\\\">\\r\\n\\t\\t\\t<div class=\\\"m-accordion__item-content\\\">\\r\\n\\t\\t\\t\\t<ng-template [ngTemplateOutlet]=\\\"panel.contentTpl?.templateRef\\\"></ng-template>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- end: body without animation -->\\r\\n\\r\\n\\t\\t<!-- body with animation -->\\r\\n\\t\\t<div *ngIf=\\\"hasAnimation\\\" \\r\\n\\t\\t\\tid=\\\"{{panel.id}}\\\" \\r\\n\\t\\t\\trole=\\\"tabpanel\\\"\\r\\n\\t\\t\\t[attr.aria-labelledby]=\\\"panel.id + '-header'\\\" \\r\\n\\t\\t\\tclass=\\\"m-accordion__item-body m-accordion--animation\\\"\\r\\n\\t\\t\\t[style.height]=\\\"panel.height + 'px'\\\">\\r\\n\\t\\t\\t<div class=\\\"m-accordion__item-content\\\">\\r\\n\\t\\t\\t\\t<ng-template [ngTemplateOutlet]=\\\"panel.contentTpl?.templateRef\\\"></ng-template>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- end: body with animation -->\\r\\n\\t\\t\\r\\n\\r\\n\\t</div>\\r\\n</ng-template>\";","export default \"<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-xl-12\\\">\\r\\n\\t\\t<div class=\\\"m-portlet m-portlet--ngviewer\\\" *ngIf=\\\"viewItem\\\">\\r\\n\\t\\t\\t<div class=\\\"m-portlet__head\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"m-portlet__head-caption\\\" *ngIf=\\\"viewItem.beforeCodeTitle\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"m-portlet__head-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{ viewItem.beforeCodeTitle }}\\r\\n\\t\\t\\t\\t\\t\\t</h3>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"m-portlet__head-tools\\\" *ngIf=\\\"hasExampleSource()\\\">\\r\\n\\t\\t\\t\\t\\t<ul class=\\\"m-portlet__nav\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"m-portlet__nav-item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a  *ngIf=\\\"hasExampleSource()\\\" (click)=\\\"changeCodeVisibility()\\\" class=\\\"m-portlet__nav-link m-portlet__nav-link--icon\\\" title=\\\"View Source\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"la la-code\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"m-portlet__body m-portlet__body--no-padding\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"m-portlet__preview\\\" *ngIf=\\\"viewItem.beforeCodeDescription\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"m-alert m-alert--icon m-alert--air m-alert--square alert alert-dismissible m--margin-bottom-30\\\" [ngClass]=\\\"classes\\\" role=\\\"alert\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"m-alert__text\\\" [innerHTML]=\\\"viewItem.beforeCodeDescription | safe: 'html'\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"hasExampleSource()\\\"\\r\\n\\t\\t\\t\\t\\tclass=\\\"m-portlet__preview m-portlet__code\\\"\\r\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{'m-portlet__code--show' : viewItem.isCodeVisible}\\\">\\r\\n\\t\\t\\t\\t\\t<mat-tab-group *ngIf=\\\"viewItem.isCodeVisible\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"HTML\\\" *ngIf=\\\"viewItem.htmlCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a  class=\\\"m-portlet__code-copy\\\" title=\\\"Copy example source\\\" [clipboard]=\\\"viewItem.htmlCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<pre><code highlight [textContent]=\\\"viewItem.htmlCode\\\"></code></pre>\\r\\n\\t\\t\\t\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"TS\\\" *ngIf=\\\"viewItem.tsCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a  class=\\\"m-portlet__code-copy\\\" title=\\\"Copy example source\\\" [clipboard]=\\\"viewItem.tsCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<pre class=\\\"language-typescript\\\"><code highlight class=\\\"language-typescript\\\" [textContent]=\\\"viewItem.tsCode\\\"></code></pre>\\r\\n\\t\\t\\t\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"CSS\\\" *ngIf=\\\"viewItem.cssCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a  class=\\\"m-portlet__code-copy\\\" title=\\\"Copy example source\\\" [clipboard]=\\\"viewItem.cssCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<pre class=\\\"language-css\\\"><code highlight class=\\\"language-css\\\" [textContent]=\\\"viewItem.cssCode\\\"></code></pre>\\r\\n\\t\\t\\t\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"SCSS\\\" *ngIf=\\\"viewItem.scssCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a  class=\\\"m-portlet__code-copy\\\" title=\\\"Copy example source\\\" [clipboard]=\\\"viewItem.scssCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<pre class=\\\"language-scssCode\\\"><code highlight class=\\\"language-scssCode\\\" [textContent]=\\\"viewItem.scssCode\\\"></code></pre>\\r\\n\\t\\t\\t\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t\\t\\t</mat-tab-group>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- view -->\\r\\n\\t\\t<div class=\\\"m-portlet__preview\\\">\\r\\n\\t\\t\\t<ng-content></ng-content>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- / view -->\\r\\n\\r\\n\\t\\t<!-- after Code Title -->\\r\\n\\t\\t<div *ngIf=\\\"viewItem.afterCodeTitle\\\" class=\\\"m-portlet__preview\\\" [innerHTML]=\\\"viewItem.afterCodeTitle | safe: 'html'\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- / after Code Title -->\\r\\n\\r\\n\\t\\t<!-- after Code Description -->\\r\\n\\t\\t<div *ngIf=\\\"viewItem.afterCodeDescription\\\" class=\\\"m-portlet__preview\\\" [innerHTML]=\\\"viewItem.afterCodeDescription | safe: 'html'\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- / after Code Description -->\\r\\n\\t</div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DayanaComponent } from './dayana.component';\nimport { Dayana3Component } from './dayana3/dayana3/dayana3.component';\nimport { Dayana2Component } from './dayana2/dayana2/dayana2.component';\n\nimport { AccordionControlModule } from '../../../partials/content/general/accordion-control/accordion-control.module';\nimport { MaterialPreviewModule } from '../../../partials/content/general/material-preview/material-preivew.module';\nimport { PartialsModule } from '../../../partials/partials.module';\nimport { CoreModule } from '../../../../core/core.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Dayana1Component } from './dayana1/dayana1.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconRegistry, MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DayanaComponent,\n    children: [\n      {\n        path: 'dayana1',\n        component: Dayana1Component\n      },\n      {\n        path: 'dayana2',\n        component: Dayana2Component\n      },\n      // {\n      //   path: 'Animacion3',\n      //   component: Dayana3Component\n      // },\n      \n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    AccordionControlModule,\n    MaterialPreviewModule,\n    PartialsModule,\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n\n    MatCardModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSortModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    MatDialogModule\n\n    // MatStepperModule,\n    // MatRadioModule,\n    // MatAutocompleteModule,\n    // MatGridListModule\n    // MatMenuModule,\n    // MatListModule,\n    // MatDividerModule,\n    // MatSliderModule,\n    // MatSidenavModule\n  ],\n  providers: [MatIconRegistry],\n  entryComponents: [],\n  exports: [RouterModule],\n  declarations: [DayanaComponent, Dayana1Component, Dayana2Component, Dayana3Component]\n})\nexport class DayanaModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'm-dayana1',\n  templateUrl: './dayana1.component.html',\n  // styleUrls: ['./dayana1.component.scss']\n})\nexport class Dayana1Component implements OnInit {\n  \n\n  constructor() {\n   \n    \n\n  }\n\n  ngOnInit() {\n  }\n \n}\n","export default \"html {\\n  font-size: 1em;\\n  line-height: 1.4;\\n}\\n\\nhtml,\\nbody {\\n  height: 100%;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n#coffee-wrap {\\n  width: 800px;\\n  height: 350px;\\n  background: #fff;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  z-index: 1;\\n  transform: translate(-51%, -12%);\\n}\\n\\n.mug,\\n.machine,\\n.floor {\\n  position: absolute;\\n}\\n\\n.mug {\\n  width: 72px;\\n  height: 77px;\\n  bottom: 6px;\\n  z-index: 4;\\n}\\n\\n.mug1 {\\n  opacity: 1;\\n  right: 100px;\\n  -webkit-animation: new-mug 3.5s ease infinite;\\n          animation: new-mug 3.5s ease infinite;\\n}\\n\\n.mug2 {\\n  opacity: 1;\\n  right: 220px;\\n  -webkit-animation: jump-to-machine 3.5s linear infinite;\\n          animation: jump-to-machine 3.5s linear infinite;\\n}\\n\\n.mug3 {\\n  right: 377px;\\n  bottom: 46px;\\n  -webkit-animation: filled-out 3.5s ease infinite;\\n          animation: filled-out 3.5s ease infinite;\\n}\\n\\n.mug4 {\\n  right: 540px;\\n  -webkit-animation: go-out 3.5s ease infinite;\\n          animation: go-out 3.5s ease infinite;\\n}\\n\\n.svg-mug {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.mug .cream {\\n  -webkit-animation: mug-fill-cream 3.5s ease infinite;\\n          animation: mug-fill-cream 3.5s ease infinite;\\n}\\n\\n.mug .coffee {\\n  -webkit-animation: mug-fill-coffee 3.5s ease infinite;\\n          animation: mug-fill-coffee 3.5s ease infinite;\\n}\\n\\n.machine {\\n  width: 173px;\\n  height: 285px;\\n  bottom: 6px;\\n  left: 300px;\\n  z-index: 2;\\n  transform: scale(1);\\n  transform-origin: bottom center;\\n  -webkit-animation: machine-coffee 3.5s ease infinite;\\n          animation: machine-coffee 3.5s ease infinite;\\n}\\n\\n#hot-coffee-wrap {\\n  position: absolute;\\n  bottom: 56px;\\n  right: 408px;\\n  height: 100px;\\n  width: 20px;\\n  overflow: hidden;\\n  z-index: 2;\\n  -webkit-animation: hot-coffee-wrap 3.5s ease infinite;\\n          animation: hot-coffee-wrap 3.5s ease infinite;\\n}\\n\\n.last-drop {\\n  width: 10px;\\n  height: 10px;\\n  display: block;\\n  position: absolute;\\n  bottom: 30px;\\n  left: 8px;\\n  border-radius: 50%;\\n  background: #AB4D37;\\n  -webkit-animation: last-drop 3.5s ease infinite;\\n          animation: last-drop 3.5s ease infinite;\\n}\\n\\n#hot-coffee-down {\\n  transform: translateY(0);\\n  -webkit-animation: hot-coffee-down 3.5s ease infinite;\\n          animation: hot-coffee-down 3.5s ease infinite;\\n}\\n\\n.olhos {\\n  -webkit-animation: olhos 3.5s ease infinite;\\n          animation: olhos 3.5s ease infinite;\\n}\\n\\n#boca-encher {\\n  -webkit-animation: boca-encher 3.5s ease infinite;\\n          animation: boca-encher 3.5s ease infinite;\\n}\\n\\n#boca-sopro {\\n  opacity: 0;\\n  -webkit-animation: boca-sopro 3.5s ease infinite;\\n          animation: boca-sopro 3.5s ease infinite;\\n}\\n\\n#boca-pronto {\\n  opacity: 0;\\n  -webkit-animation: boca-pronto 3.5s ease infinite;\\n          animation: boca-pronto 3.5s ease infinite;\\n}\\n\\n.svg-machine {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.stars {\\n  display: block;\\n  position: absolute;\\n  width: 14px;\\n  height: 14px;\\n  border-radius: 20%;\\n  background: #F9D67D;\\n  opacity: 0;\\n  bottom: 0;\\n  left: 0;\\n}\\n\\n.star1 {\\n  opacity: 0;\\n  transform: translate(500px, -120px) scale(0.2);\\n  -webkit-animation: star1 3.5s ease infinite;\\n          animation: star1 3.5s ease infinite;\\n}\\n\\n.star2 {\\n  opacity: 0;\\n  transform: translate(280px, -170px) scale(0.2);\\n  -webkit-animation: star2 3.5s ease infinite;\\n          animation: star2 3.5s ease infinite;\\n}\\n\\n.star3 {\\n  opacity: 0;\\n  transform: translate(500px, -250px) scale(0.2);\\n  -webkit-animation: star3 3.5s ease infinite;\\n          animation: star3 3.5s ease infinite;\\n}\\n\\n/* Floor */\\n\\n.floor {\\n  width: 538px;\\n  height: 10px;\\n  bottom: 6px;\\n  left: 120px;\\n  z-index: 0;\\n}\\n\\n.svg-floor {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n/* MUG 1 */\\n\\n@-webkit-keyframes new-mug {\\n  0% {\\n    opacity: 1;\\n    right: 220px;\\n  }\\n  21.25% {\\n    opacity: 1;\\n    right: 220px;\\n  }\\n  21.30% {\\n    opacity: 0;\\n    right: 100px;\\n  }\\n  31.25% {\\n    opacity: 0;\\n    right: 100px;\\n  }\\n  34% {\\n    opacity: 1;\\n  }\\n  37.5% {\\n    right: 220px;\\n  }\\n  100% {\\n    opacity: 1;\\n    right: 220px;\\n  }\\n}\\n\\n@keyframes new-mug {\\n  0% {\\n    opacity: 1;\\n    right: 220px;\\n  }\\n  21.25% {\\n    opacity: 1;\\n    right: 220px;\\n  }\\n  21.30% {\\n    opacity: 0;\\n    right: 100px;\\n  }\\n  31.25% {\\n    opacity: 0;\\n    right: 100px;\\n  }\\n  34% {\\n    opacity: 1;\\n  }\\n  37.5% {\\n    right: 220px;\\n  }\\n  100% {\\n    opacity: 1;\\n    right: 220px;\\n  }\\n}\\n\\n/* MUG 2 */\\n\\n@-webkit-keyframes jump-to-machine {\\n  0% {\\n    opacity: 0;\\n  }\\n  21.2% {\\n    opacity: 0;\\n  }\\n  21.25% {\\n    opacity: 1;\\n    bottom: 6px;\\n    right: 220px;\\n  }\\n  39.95% {\\n    opacity: 1;\\n    bottom: 46px;\\n    right: 377px;\\n  }\\n  40% {\\n    opacity: 0;\\n    bottom: 6px;\\n    right: 220px;\\n  }\\n}\\n\\n@keyframes jump-to-machine {\\n  0% {\\n    opacity: 0;\\n  }\\n  21.2% {\\n    opacity: 0;\\n  }\\n  21.25% {\\n    opacity: 1;\\n    bottom: 6px;\\n    right: 220px;\\n  }\\n  39.95% {\\n    opacity: 1;\\n    bottom: 46px;\\n    right: 377px;\\n  }\\n  40% {\\n    opacity: 0;\\n    bottom: 6px;\\n    right: 220px;\\n  }\\n}\\n\\n/* MUG 3 */\\n\\n@-webkit-keyframes mug-fill-coffee {\\n  0% {\\n    y: 30;\\n    height: 47px;\\n    opacity: 1;\\n  }\\n  30% {\\n    y: 30;\\n    height: 47px;\\n    opacity: 1;\\n  }\\n  30.1% {\\n    opacity: 0;\\n    y: 70;\\n    height: 0px;\\n  }\\n  40.9% {\\n    opacity: 0;\\n  }\\n  41% {\\n    opacity: 1;\\n    y: 70;\\n    height: 0px;\\n  }\\n  80% {\\n    y: 30;\\n    height: 47px;\\n    opacity: 1;\\n  }\\n  100% {\\n    y: 30;\\n    height: 47px;\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes mug-fill-coffee {\\n  0% {\\n    y: 30;\\n    height: 47px;\\n    opacity: 1;\\n  }\\n  30% {\\n    y: 30;\\n    height: 47px;\\n    opacity: 1;\\n  }\\n  30.1% {\\n    opacity: 0;\\n    y: 70;\\n    height: 0px;\\n  }\\n  40.9% {\\n    opacity: 0;\\n  }\\n  41% {\\n    opacity: 1;\\n    y: 70;\\n    height: 0px;\\n  }\\n  80% {\\n    y: 30;\\n    height: 47px;\\n    opacity: 1;\\n  }\\n  100% {\\n    y: 30;\\n    height: 47px;\\n    opacity: 1;\\n  }\\n}\\n\\n@-webkit-keyframes mug-fill-cream {\\n  0% {\\n    y: 20;\\n    height: 10px;\\n    opacity: 1;\\n  }\\n  30% {\\n    y: 20;\\n    height: 10px;\\n    opacity: 1;\\n  }\\n  30.1% {\\n    y: 70;\\n    height: 0px;\\n    opacity: 1;\\n  }\\n  41% {\\n    y: 70;\\n    height: 0px;\\n    opacity: 1;\\n  }\\n  80% {\\n    y: 20;\\n    height: 10px;\\n    opacity: 1;\\n  }\\n  100% {\\n    y: 20;\\n    height: 10px;\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes mug-fill-cream {\\n  0% {\\n    y: 20;\\n    height: 10px;\\n    opacity: 1;\\n  }\\n  30% {\\n    y: 20;\\n    height: 10px;\\n    opacity: 1;\\n  }\\n  30.1% {\\n    y: 70;\\n    height: 0px;\\n    opacity: 1;\\n  }\\n  41% {\\n    y: 70;\\n    height: 0px;\\n    opacity: 1;\\n  }\\n  80% {\\n    y: 20;\\n    height: 10px;\\n    opacity: 1;\\n  }\\n  100% {\\n    y: 20;\\n    height: 10px;\\n    opacity: 1;\\n  }\\n}\\n\\n@-webkit-keyframes filled-out {\\n  0% {\\n    opacity: 1;\\n  }\\n  10% {\\n    bottom: 46px;\\n    right: 377px;\\n    opacity: 1;\\n  }\\n  30% {\\n    bottom: 6px;\\n    right: 540px;\\n    opacity: 1;\\n  }\\n  30.1% {\\n    opacity: 0;\\n  }\\n  39.9% {\\n    opacity: 0;\\n    bottom: 46px;\\n    right: 377px;\\n  }\\n  40% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes filled-out {\\n  0% {\\n    opacity: 1;\\n  }\\n  10% {\\n    bottom: 46px;\\n    right: 377px;\\n    opacity: 1;\\n  }\\n  30% {\\n    bottom: 6px;\\n    right: 540px;\\n    opacity: 1;\\n  }\\n  30.1% {\\n    opacity: 0;\\n  }\\n  39.9% {\\n    opacity: 0;\\n    bottom: 46px;\\n    right: 377px;\\n  }\\n  40% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n/* MUG 4 */\\n\\n@-webkit-keyframes go-out {\\n  0% {\\n    opacity: 1;\\n  }\\n  7% {\\n    bottom: 6px;\\n    right: 540px;\\n    opacity: 1;\\n  }\\n  13% {\\n    bottom: 6px;\\n    right: 620px;\\n    opacity: 0;\\n  }\\n  30% {\\n    opacity: 0;\\n    right: 540px;\\n  }\\n  30.1% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes go-out {\\n  0% {\\n    opacity: 1;\\n  }\\n  7% {\\n    bottom: 6px;\\n    right: 540px;\\n    opacity: 1;\\n  }\\n  13% {\\n    bottom: 6px;\\n    right: 620px;\\n    opacity: 0;\\n  }\\n  30% {\\n    opacity: 0;\\n    right: 540px;\\n  }\\n  30.1% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n/* Coffee */\\n\\n@-webkit-keyframes hot-coffee-wrap {\\n  0% {\\n  }\\n  39% {\\n  }\\n  40% {\\n    height: 105px;\\n  }\\n  70% {\\n    height: 84px;\\n  }\\n  71% {\\n  }\\n}\\n\\n@keyframes hot-coffee-wrap {\\n  0% {\\n  }\\n  39% {\\n  }\\n  40% {\\n    height: 105px;\\n  }\\n  70% {\\n    height: 84px;\\n  }\\n  71% {\\n  }\\n}\\n\\n@-webkit-keyframes hot-coffee-down {\\n  0% {\\n    opacity: 0;\\n    transform: translateY(0);\\n  }\\n  39% {\\n    opacity: 0;\\n  }\\n  40% {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n  70% {\\n    opacity: 1;\\n    transform: translateY(600px);\\n  }\\n  71% {\\n    opacity: 0;\\n    transform: translateY(0);\\n  }\\n}\\n\\n@keyframes hot-coffee-down {\\n  0% {\\n    opacity: 0;\\n    transform: translateY(0);\\n  }\\n  39% {\\n    opacity: 0;\\n  }\\n  40% {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n  70% {\\n    opacity: 1;\\n    transform: translateY(600px);\\n  }\\n  71% {\\n    opacity: 0;\\n    transform: translateY(0);\\n  }\\n}\\n\\n@-webkit-keyframes last-drop {\\n  0% {\\n    opacity: 0;\\n  }\\n  64% {\\n    opacity: 0;\\n    transform: translateY(0);\\n  }\\n  66% {\\n    opacity: 1;\\n  }\\n  71% {\\n    opacity: 1;\\n    transform: translateY(-40px);\\n  }\\n  76% {\\n    opacity: 1;\\n    transform: translateY(0px);\\n  }\\n  77% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n@keyframes last-drop {\\n  0% {\\n    opacity: 0;\\n  }\\n  64% {\\n    opacity: 0;\\n    transform: translateY(0);\\n  }\\n  66% {\\n    opacity: 1;\\n  }\\n  71% {\\n    opacity: 1;\\n    transform: translateY(-40px);\\n  }\\n  76% {\\n    opacity: 1;\\n    transform: translateY(0px);\\n  }\\n  77% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n/* Machine */\\n\\n@-webkit-keyframes machine-coffee {\\n  0% {\\n  }\\n  25% {\\n    /*width: 165px;\\n        height: 300px;\\n        margin-left: 0;*/\\n    transform: scale(0.95, 1.07);\\n  }\\n  40% {\\n    /*width: 165px;\\n        height: 300px;\\n        margin-left: 0;*/\\n    transform: scale(0.95, 1.07);\\n  }\\n  75% {\\n    /*width: 183px;\\n        height: 265px;*/\\n    transform: scale(1.05, 0.92);\\n  }\\n  100% {\\n  }\\n}\\n\\n@keyframes machine-coffee {\\n  0% {\\n  }\\n  25% {\\n    /*width: 165px;\\n        height: 300px;\\n        margin-left: 0;*/\\n    transform: scale(0.95, 1.07);\\n  }\\n  40% {\\n    /*width: 165px;\\n        height: 300px;\\n        margin-left: 0;*/\\n    transform: scale(0.95, 1.07);\\n  }\\n  75% {\\n    /*width: 183px;\\n        height: 265px;*/\\n    transform: scale(1.05, 0.92);\\n  }\\n  100% {\\n  }\\n}\\n\\n@-webkit-keyframes olhos {\\n  3.75% {\\n    /* cy: 78.666; */\\n    opacity: 1;\\n  }\\n  3.80% {\\n    opacity: 0;\\n  }\\n  6% {\\n    opacity: 0;\\n  }\\n  6.1% {\\n    opacity: 1;\\n  }\\n  10% {\\n    /*cy: 74.666;*/\\n  }\\n  25% {\\n  }\\n  40% {\\n    /*cy: 74.666;*/\\n  }\\n  71% {\\n    /*cy: 83.666;*/\\n  }\\n  89% {\\n    /*opacity: 1;*/\\n  }\\n  90% {\\n    /*opacity: 0;*/\\n  }\\n  93% {\\n    /*opacity: 0;*/\\n  }\\n  94% {\\n    /*opacity: 1;*/\\n  }\\n  100% {\\n  }\\n}\\n\\n@keyframes olhos {\\n  3.75% {\\n    /* cy: 78.666; */\\n    opacity: 1;\\n  }\\n  3.80% {\\n    opacity: 0;\\n  }\\n  6% {\\n    opacity: 0;\\n  }\\n  6.1% {\\n    opacity: 1;\\n  }\\n  10% {\\n    /*cy: 74.666;*/\\n  }\\n  25% {\\n  }\\n  40% {\\n    /*cy: 74.666;*/\\n  }\\n  71% {\\n    /*cy: 83.666;*/\\n  }\\n  89% {\\n    /*opacity: 1;*/\\n  }\\n  90% {\\n    /*opacity: 0;*/\\n  }\\n  93% {\\n    /*opacity: 0;*/\\n  }\\n  94% {\\n    /*opacity: 1;*/\\n  }\\n  100% {\\n  }\\n}\\n\\n@-webkit-keyframes boca-encher {\\n  0% {\\n    opacity: 1;\\n    r: 2.666;\\n  }\\n  30% {\\n    r: 14;\\n    opacity: 1;\\n  }\\n  38% {\\n    r: 14;\\n    opacity: 1;\\n  }\\n  39% {\\n    opacity: 0;\\n  }\\n  25% {\\n  }\\n  40% {\\n  }\\n  75% {\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n@keyframes boca-encher {\\n  0% {\\n    opacity: 1;\\n    r: 2.666;\\n  }\\n  30% {\\n    r: 14;\\n    opacity: 1;\\n  }\\n  38% {\\n    r: 14;\\n    opacity: 1;\\n  }\\n  39% {\\n    opacity: 0;\\n  }\\n  25% {\\n  }\\n  40% {\\n  }\\n  75% {\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n@-webkit-keyframes boca-sopro {\\n  0% {\\n    opacity: 0;\\n  }\\n  38% {\\n    opacity: 0;\\n  }\\n  39% {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n  74% {\\n    opacity: 1;\\n    transform: translateY(12px);\\n  }\\n  75% {\\n    opacity: 0;\\n  }\\n}\\n\\n@keyframes boca-sopro {\\n  0% {\\n    opacity: 0;\\n  }\\n  38% {\\n    opacity: 0;\\n  }\\n  39% {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n  74% {\\n    opacity: 1;\\n    transform: translateY(12px);\\n  }\\n  75% {\\n    opacity: 0;\\n  }\\n}\\n\\n@-webkit-keyframes boca-pronto {\\n  0% {\\n    opacity: 0;\\n  }\\n  74% {\\n    opacity: 0;\\n  }\\n  75% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes boca-pronto {\\n  0% {\\n    opacity: 0;\\n  }\\n  74% {\\n    opacity: 0;\\n  }\\n  75% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n@-webkit-keyframes star1 {\\n  0% {\\n    opacity: 0;\\n  }\\n  28% {\\n    opacity: 0;\\n  }\\n  30% {\\n    opacity: 1;\\n    transform: translate(500px, -120px) scale(0.2) rotate(-45deg);\\n  }\\n  40% {\\n    opacity: 1;\\n    transform: translate(500px, -120px) scale(1) rotate(-45deg);\\n  }\\n  50% {\\n    transform: translate(500px, -120px) scale(0.2) rotate(-45deg);\\n    opacity: 1;\\n  }\\n  51% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n@keyframes star1 {\\n  0% {\\n    opacity: 0;\\n  }\\n  28% {\\n    opacity: 0;\\n  }\\n  30% {\\n    opacity: 1;\\n    transform: translate(500px, -120px) scale(0.2) rotate(-45deg);\\n  }\\n  40% {\\n    opacity: 1;\\n    transform: translate(500px, -120px) scale(1) rotate(-45deg);\\n  }\\n  50% {\\n    transform: translate(500px, -120px) scale(0.2) rotate(-45deg);\\n    opacity: 1;\\n  }\\n  51% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n@-webkit-keyframes star2 {\\n  0% {\\n    opacity: 0;\\n  }\\n  43% {\\n    opacity: 0;\\n  }\\n  45% {\\n    opacity: 1;\\n    transform: translate(280px, -170px) scale(0.2) rotate(-45deg);\\n  }\\n  55% {\\n    opacity: 1;\\n    transform: translate(280px, -170px) scale(1) rotate(-45deg);\\n  }\\n  65% {\\n    transform: translate(280px, -170px) scale(0.2) rotate(-45deg);\\n    opacity: 1;\\n  }\\n  66% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n@keyframes star2 {\\n  0% {\\n    opacity: 0;\\n  }\\n  43% {\\n    opacity: 0;\\n  }\\n  45% {\\n    opacity: 1;\\n    transform: translate(280px, -170px) scale(0.2) rotate(-45deg);\\n  }\\n  55% {\\n    opacity: 1;\\n    transform: translate(280px, -170px) scale(1) rotate(-45deg);\\n  }\\n  65% {\\n    transform: translate(280px, -170px) scale(0.2) rotate(-45deg);\\n    opacity: 1;\\n  }\\n  66% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n@-webkit-keyframes star3 {\\n  0% {\\n    opacity: 0;\\n  }\\n  53% {\\n    opacity: 0;\\n  }\\n  55% {\\n    opacity: 1;\\n    transform: translate(500px, -210px) scale(0.2) rotate(-45deg);\\n  }\\n  65% {\\n    opacity: 1;\\n    transform: translate(500px, -210px) scale(1) rotate(-45deg);\\n  }\\n  75% {\\n    transform: translate(500px, -210px) scale(0.2) rotate(-45deg);\\n    opacity: 1;\\n  }\\n  76% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n@keyframes star3 {\\n  0% {\\n    opacity: 0;\\n  }\\n  53% {\\n    opacity: 0;\\n  }\\n  55% {\\n    opacity: 1;\\n    transform: translate(500px, -210px) scale(0.2) rotate(-45deg);\\n  }\\n  65% {\\n    opacity: 1;\\n    transform: translate(500px, -210px) scale(1) rotate(-45deg);\\n  }\\n  75% {\\n    transform: translate(500px, -210px) scale(0.2) rotate(-45deg);\\n    opacity: 1;\\n  }\\n  76% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64, */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'm-dayana2',\n  templateUrl: './dayana2.component.html',\n  styleUrls: ['./dayana2.component.scss']\n})\nexport class Dayana2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvcGFnZXMvY29tcG9uZW50cy9kYXlhbmEvZGF5YW5hMy9kYXlhbmEzL2RheWFuYTMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'm-dayana3',\n  templateUrl: './dayana3.component.html',\n  styleUrls: ['./dayana3.component.scss']\n})\nexport class Dayana3Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {\r\n\tAfterContentChecked,\r\n\tComponent,\r\n\tContentChildren,\r\n\tDirective,\r\n\tEventEmitter,\r\n\tInput,\r\n\tOutput,\r\n\tQueryList,\r\n\tTemplateRef,\r\n\tChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { isString } from '../../../../../core/services/utils.service';\r\n\r\nlet nextId = 0;\r\n/**\r\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\r\n */\r\n@Directive({\r\n\tselector: 'ng-template[AccordionControlPanelTitle]'\r\n})\r\nexport class AccordionControlPanelTitleDirective {\r\n\tconstructor(public templateRef: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * This directive must be used to wrap accordion panel content.\r\n */\r\n@Directive({\r\n\tselector: 'ng-template[AccordionControlPanelContent]'\r\n})\r\nexport class AccordionControlPanelContentDirective {\r\n\tconstructor(public templateRef: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * The NgbPanel directive represents an individual panel with the title and collapsible\r\n * content\r\n */\r\n@Directive({\r\n\tselector: 'm-accordion-control-panel'\r\n})\r\nexport class AccordionControlPanelDirective implements AfterContentChecked {\r\n\t/**\r\n\t *  A flag determining whether the panel is disabled or not.\r\n\t *  When disabled, the panel cannot be toggled.\r\n\t */\r\n\t@Input() disabled = false;\r\n\theight = 0;\r\n\tcontentHeight = 0;\r\n\r\n\t/**\r\n\t *  An optional id for the panel. The id should be unique.\r\n\t *  If not provided, it will be auto-generated.\r\n\t */\r\n\t@Input() id = `m-accordion-control-panel-${nextId++}`;\r\n\r\n\t/**\r\n\t * A flag telling if the panel is currently open\r\n\t */\r\n\tisOpen = false;\r\n\r\n\t/**\r\n\t *  The title for the panel.\r\n\t */\r\n\t@Input() title: string;\r\n\t/**\r\n\t *  The icon for the panel\r\n\t */\r\n\t@Input() iconClass: string;\r\n\r\n\r\n\t/**\r\n\t *  Accordion's types of panels to be applied per panel basis.\r\n\t *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\r\n\t * and \"dark\"\r\n\t */\r\n\t@Input() type: string;\r\n\r\n\ttitleTpl: AccordionControlPanelTitleDirective | null;\r\n\tcontentTpl: AccordionControlPanelContentDirective | null;\r\n\r\n\t@ContentChildren(AccordionControlPanelTitleDirective, { descendants: false }) titleTpls: QueryList<AccordionControlPanelTitleDirective>;\r\n\t@ContentChildren(AccordionControlPanelContentDirective, { descendants: false }) contentTpls:\r\n\t\tQueryList<AccordionControlPanelContentDirective>;\r\n\r\n\tngAfterContentChecked() {\r\n\t\t// We are using @ContentChildren instead of @ContantChild as in the Angular version being used\r\n\t\t// only @ContentChildren allows us to specify the {descendants: false} option.\r\n\t\tthis.titleTpl = this.titleTpls.first;\r\n\t\tthis.contentTpl = this.contentTpls.first;\r\n\t}\r\n}\r\n\r\n/**\r\n * The payload of the change event fired right before toggling an accordion panel\r\n */\r\nexport interface AccordionControlPanelChangeEvent {\r\n\t/**\r\n\t * Id of the accordion panel that is toggled\r\n\t */\r\n\tpanelId: string;\r\n\r\n\t/**\r\n\t * Whether the panel will be opened (true) or closed (false)\r\n\t */\r\n\tnextState: boolean;\r\n\r\n\t/**\r\n\t * Function that will prevent panel toggling if called\r\n\t */\r\n\tpreventDefault: () => void;\r\n}\r\n\r\n\r\n/**\r\n * The NgbAccordion directive is a collection of panels.\r\n * It can assure that only one panel can be opened at a time.\r\n */\r\n@Component({\r\n\tselector: 'm-accordion-control',\r\n\texportAs: 'AccordionControl',\r\n\thost: {\r\n\t\t'role': 'tablist',\r\n\t\t'[attr.aria-multiselectable]': '!closeOtherPanels',\r\n\t\t'class': 'm-accordion'\r\n\t},\r\n\ttemplateUrl: './accordion-control.component.html',\r\n\tstyles: [`\r\n\t\t.m-accordion--animation {\r\n\t\t\toverflow: hidden;\r\n        \t-webkit-transition: height .5s;\r\n      \t\ttransition: height .5s;\r\n\t\t}\r\n\t`],\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n\r\n})\r\nexport class AccordionControlComponent implements AfterContentChecked {\r\n\t@ContentChildren(AccordionControlPanelDirective) panels: QueryList<AccordionControlPanelDirective>;\r\n\r\n\t/**\r\n\t * An array or comma separated strings of panel identifiers that should be opened\r\n\t */\r\n\t@Input() activeIds: string | string[] = [];\r\n\t@Input() hasAnimation: boolean = false;\r\n\r\n\t/**\r\n\t *  Whether the other panels should be closed when a panel is opened\r\n\t */\r\n\t@Input() closeOthers: boolean;\r\n\r\n\t/**\r\n\t * Whether the closed panels should be hidden without destroying them\r\n\t */\r\n\t@Input() destroyOnHide: boolean = true;\r\n\r\n\t/**\r\n\t *  Accordion's types of panels to be applied globally.\r\n\t *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\r\n\t * and \"dark\r\n\t */\r\n\t@Input() type: string;\r\n\r\n\t/**\r\n\t * A panel change event fired right before the panel toggle happens. See PanelChangeEvent for payload details\r\n\t */\r\n\t@Output() panelChange = new EventEmitter<AccordionControlPanelChangeEvent>();\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Programmatically toggle a panel with a given id.\r\n\t */\r\n\ttoggle(panelId: string, accordionBodyScrollHeight) {\r\n\t\tconst panel = this.panels.find(p => p.id === panelId);\r\n\r\n\t\tif (panel && !panel.disabled) {\r\n\t\t\tlet defaultPrevented = false;\r\n\t\t\tif (this.hasAnimation) {\r\n\t\t\t\tpanel.height = panel.height  ? 0 : panel.contentHeight;\r\n\t\t\t}\r\n\r\n\t\t\tthis.panelChange.emit(\r\n\t\t\t\t{ panelId: panelId, nextState: !panel.isOpen, preventDefault: () => { defaultPrevented = true; } });\r\n\r\n\t\t\tif (!defaultPrevented) {\r\n\t\t\t\tpanel.isOpen = !panel.isOpen;\r\n\r\n\t\t\t\tif (this.closeOthers) {\r\n\t\t\t\t\tthis._closeOthers(panelId);\r\n\t\t\t\t}\r\n\t\t\t\tthis._updateActiveIds();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tngAfterContentChecked() {\r\n\t\t// active id updates\r\n\t\tif (isString(this.activeIds)) {\r\n\t\t\tthis.activeIds = this.activeIds.split(/\\s*,\\s*/);\r\n\t\t}\r\n\r\n\t\t// update panels open states\r\n\t\tthis.panels.forEach(panel => {\r\n\t\t\tpanel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1;\r\n\t\t\tif (this.hasAnimation) {\r\n\t\t\t\tconst domPanel = document.getElementById(panel.id);\r\n\t\t\t\tpanel.contentHeight = domPanel && domPanel.scrollHeight ? domPanel.scrollHeight : 200;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// closeOthers updates\r\n\t\tif (this.activeIds.length > 1 && this.closeOthers) {\r\n\t\t\tthis._closeOthers(this.activeIds[0]);\r\n\t\t\tthis._updateActiveIds();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _closeOthers(panelId: string) {\r\n\t\tthis.panels.forEach(panel => {\r\n\t\t\tif (panel.id !== panelId) {\r\n\t\t\t\tpanel.isOpen = false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _updateActiveIds() {\r\n\t\tthis.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\r\n\t}\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the MAccordionControl component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the accordions used in the application.\r\n */\r\n@Injectable()\r\nexport class AccordionControlConfig {\r\n  closeOthers = false;\r\n  type: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccordionControlConfig } from './accordion-control.config';\r\n\r\nimport {\r\n\tAccordionControlComponent,\r\n\tAccordionControlPanelDirective,\r\n\tAccordionControlPanelTitleDirective,\r\n\tAccordionControlPanelContentDirective\r\n} from './accordion-control.component';\r\n\r\nexport { AccordionControlConfig } from './accordion-control.config';\r\nexport {\r\n\tAccordionControlComponent, AccordionControlPanelDirective, AccordionControlPanelTitleDirective,\r\n\tAccordionControlPanelContentDirective, AccordionControlPanelChangeEvent\r\n} from './accordion-control.component';\r\n\r\nconst ACCORDION_CONTROL_DIRECTIVES = [\r\n\tAccordionControlComponent,\r\n\tAccordionControlPanelDirective,\r\n\tAccordionControlPanelTitleDirective,\r\n\tAccordionControlPanelContentDirective\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule\r\n\t],\r\n\texports: ACCORDION_CONTROL_DIRECTIVES,\r\n\tdeclarations: ACCORDION_CONTROL_DIRECTIVES\r\n})\r\nexport class AccordionControlModule {\r\n\t// static forRoot(): NewType {\r\n\t// \treturn { ngModule: AccordionControlModule, providers: [AccordionControlConfig] };\r\n\t// }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { HighlightModule } from 'ngx-highlightjs';\r\nimport { MaterialPreviewComponent } from './material-preview.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CoreModule } from '../../../../../core/core.module';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\n\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tNgbModule,\r\n\t\tCoreModule,\r\n\t\t// HighlightModule.forRoot({ theme: 'googlecode' }),\r\n\t\tHighlightModule,\r\n\t\tPerfectScrollbarModule,\r\n\r\n\t\t// material modules\r\n\t\tMatTabsModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatCardModule,\r\n\t\tMatIconModule\r\n\t],\r\n\texports: [MaterialPreviewComponent],\r\n\tdeclarations: [MaterialPreviewComponent]\r\n})\r\nexport class MaterialPreviewModule {}\r\n","import { Component, OnInit, Input, AfterViewChecked, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ExternalCodeExample } from '../../../../../core/models/external-code-example';\r\nimport { NoticeComponent } from '../notice/notice.component';\r\n\r\n\r\n@Component({\r\n\tselector: 'm-material-preview',\r\n\ttemplateUrl: './material-preview.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MaterialPreviewComponent implements OnInit {\r\n\r\n\t@Input() viewItem: any;\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tchangeCodeVisibility(): void {\r\n\t\tthis.viewItem.isCodeVisible = !this.viewItem.isCodeVisible;\r\n\t}\r\n\r\n\thasExampleSource(): boolean {\r\n\t\tif (!this.viewItem) {\r\n\t\t\treturn  false;\r\n\t\t}\r\n\r\n\t\tif (!this.viewItem.cssCode && !this.viewItem.htmlCode && !this.viewItem.scssCode && !this.viewItem.tsCode) {\r\n\t\t\treturn  false;\r\n\t\t}\r\n\r\n\t\treturn  true;\r\n\t}\r\n}\r\n"],"sourceRoot":"webpack:///"}